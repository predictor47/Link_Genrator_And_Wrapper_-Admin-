// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  id                String       @id @default(uuid())
  name              String
  description       String?
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @updatedAt @map("updated_at")
  surveyLinks       SurveyLink[]
  presurveyQuestions Question[]
  responses         Response[]
  flags             Flag[]

  @@map("projects")
}

model SurveyLink {
  id          String     @id @default(uuid())
  uid         String     @unique
  projectId   String     @map("project_id")
  project     Project    @relation(fields: [projectId], references: [id])
  originalUrl String     @map("original_url")
  status      String     @default("PENDING") // Changed from enum to String
  createdAt   DateTime   @default(now()) @map("created_at")
  responses   Response[]
  flags       Flag[]

  @@map("survey_links")
}

model Question {
  id          String     @id @default(uuid())
  projectId   String     @map("project_id")
  project     Project    @relation(fields: [projectId], references: [id])
  text        String
  options     String     // Changed from String[] to String (will store as JSON string)
  createdAt   DateTime   @default(now()) @map("created_at")
  responses   Response[]

  @@map("questions")
}

model Response {
  id          String     @id @default(uuid())
  surveyLinkId String     @map("survey_link_id")
  surveyLink  SurveyLink @relation(fields: [surveyLinkId], references: [id])
  projectId   String     @map("project_id")
  project     Project    @relation(fields: [projectId], references: [id])
  questionId  String     @map("question_id")
  question    Question   @relation(fields: [questionId], references: [id])
  answer      String
  metadata    String     // Changed from Json to String (will store as JSON string)
  createdAt   DateTime   @default(now()) @map("created_at")

  @@map("responses")
}

model Flag {
  id          String     @id @default(uuid())
  surveyLinkId String     @map("survey_link_id")
  surveyLink  SurveyLink @relation(fields: [surveyLinkId], references: [id])
  projectId   String     @map("project_id")
  project     Project    @relation(fields: [projectId], references: [id])
  reason      String
  metadata    String     // Changed from Json to String (will store as JSON string)
  createdAt   DateTime   @default(now()) @map("created_at")

  @@map("flags")
}

// Removed enum LinkStatus since SQLite doesn't support enums
// We'll use string constants instead