# Survey Link Generator & Wrapper Admin - Implementation Plan

## Prerequisites
- AWS Account with appropriate permissions
- Amplify CLI installed: `npm install -g @aws-amplify/cli`
- AWS CLI configured: `aws configure`
- Node.js and npm installed

## Step 1: Setup Amplify Environment
1. Initialize Amplify in your project if not already done:
   ```
   npm run setup-amplify
   ```

2. Push your backend resources to AWS:
   ```
   amplify push
   ```

## Step 2: Add Hosting to Your Project
1. Add hosting capability to your Amplify app:
   ```
   amplify add hosting
   ```
   - Select "Hosting with Amplify Console"
   - Choose "Manual deployment"

## Step 3: Create Admin User
1. Create the admin user with the predefined credentials:
   ```
   npm run create-admin
   ```
   - This will create an admin user with:
     - Email: protegeresearch@gmail.com
     - Password: Logitude!10

## Step 4: Deploy the Application
1. Deploy the application to Amplify Hosting:
   ```
   amplify publish
   ```

2. Note the Amplify URL that is provided after deployment:
   - Format: https://[branch].[app-id].amplifyapp.com
   - This is the URL you'll use to access your application

## Step 5: Test the Application
1. Test admin access:
   - Visit your Amplify URL: https://[branch].[app-id].amplifyapp.com
   - Navigate to /admin
   - Login with:
     - Email: protegeresearch@gmail.com
     - Password: Logitude!10

2. Test user flows:
   - Create a project
   - Generate survey links
   - Test survey link redirection and completion

## Security Notes
- The admin section is protected:
  - Login required for all admin pages except login, signup, verification
  - API routes protected with authentication checks

- Admin credentials:
  - Email: protegeresearch@gmail.com
  - Password: Logitude!10
  - Store these securely and change the password after first login

## Future Custom Domain Setup (Optional)
When you're ready to set up a custom domain:
1. Go to AWS Amplify Console > Domain Management
2. Click "Add domain" and follow the instructions
3. After setting up the domain, update the middleware.ts file to use subdomain-based access control

## Maintenance
- Update the admin password regularly
- Keep Amplify packages updated
- Monitor AWS CloudWatch logs for any unusual activity

## Troubleshooting
- If admin user creation fails, check Cognito User Pool settings
- If authentication issues occur, verify the middleware configuration
- If deployment fails, check the Amplify build logs