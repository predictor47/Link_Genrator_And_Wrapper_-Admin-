type SurveyLink @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  uid: String!
  projectId: String!
  originalUrl: String!
  vendorId: String
  status: SurveyLinkStatus
  linkType: SurveyLinkLinkType
  geoRestriction: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  project: Project
  vendor: Vendor
  responses(filter: ModelResponseFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelResponseConnection
  flags(filter: ModelFlagFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFlagConnection
}

type Vendor @aws_iam @aws_cognito_user_pools {
  id: ID!
  name: String!
  code: String!
  projectId: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  project: Project
  surveyLinks(filter: ModelSurveyLinkFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelSurveyLinkConnection
}

type Project @aws_iam @aws_cognito_user_pools {
  id: ID!
  name: String!
  description: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  surveyLinks(filter: ModelSurveyLinkFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelSurveyLinkConnection
  vendors(filter: ModelVendorFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelVendorConnection
  responses(filter: ModelResponseFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelResponseConnection
  flags(filter: ModelFlagFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFlagConnection
  questions(filter: ModelQuestionFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelQuestionConnection
}

type Question @aws_iam @aws_cognito_user_pools {
  id: ID!
  projectId: String!
  text: String!
  options: String!
  createdAt: AWSDateTime
  project: Project
  responses(filter: ModelResponseFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelResponseConnection
  updatedAt: AWSDateTime!
}

type Response @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  surveyLinkId: String!
  projectId: String!
  questionId: String!
  answer: String!
  metadata: String
  createdAt: AWSDateTime
  surveyLink: SurveyLink
  project: Project
  question: Question
  updatedAt: AWSDateTime!
}

type Flag @aws_iam @aws_cognito_user_pools @aws_api_key {
  id: ID!
  surveyLinkId: String!
  projectId: String!
  reason: String!
  metadata: String
  resolved: Boolean
  createdAt: AWSDateTime
  surveyLink: SurveyLink
  project: Project
  updatedAt: AWSDateTime!
}

enum SurveyLinkStatus {
  PENDING
  STARTED
  IN_PROGRESS
  COMPLETED
  QUOTA_FULL
  DISQUALIFIED
  FLAGGED
}

enum SurveyLinkLinkType {
  TEST
  LIVE
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelSurveyLinkConnection @aws_api_key @aws_iam @aws_cognito_user_pools {
  items: [SurveyLink]!
  nextToken: String
}

input ModelSurveyLinkStatusInput {
  eq: SurveyLinkStatus
  ne: SurveyLinkStatus
}

input ModelSurveyLinkLinkTypeInput {
  eq: SurveyLinkLinkType
  ne: SurveyLinkLinkType
}

input ModelSurveyLinkFilterInput {
  id: ModelIDInput
  uid: ModelStringInput
  projectId: ModelStringInput
  originalUrl: ModelStringInput
  vendorId: ModelStringInput
  status: ModelSurveyLinkStatusInput
  linkType: ModelSurveyLinkLinkTypeInput
  geoRestriction: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelSurveyLinkFilterInput]
  or: [ModelSurveyLinkFilterInput]
  not: ModelSurveyLinkFilterInput
}

type Query {
  getSurveyLink(id: ID!): SurveyLink @aws_api_key @aws_iam @aws_cognito_user_pools
  listSurveyLinks(id: ID, filter: ModelSurveyLinkFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelSurveyLinkConnection @aws_api_key @aws_iam @aws_cognito_user_pools
  getVendor(id: ID!): Vendor @aws_iam @aws_cognito_user_pools
  listVendors(id: ID, filter: ModelVendorFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelVendorConnection @aws_iam @aws_cognito_user_pools
  getProject(id: ID!): Project @aws_iam @aws_cognito_user_pools
  listProjects(id: ID, filter: ModelProjectFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelProjectConnection @aws_iam @aws_cognito_user_pools
  getQuestion(id: ID!): Question @aws_iam @aws_cognito_user_pools
  listQuestions(id: ID, filter: ModelQuestionFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelQuestionConnection @aws_iam @aws_cognito_user_pools
  getResponse(id: ID!): Response @aws_iam @aws_cognito_user_pools
  listResponses(id: ID, filter: ModelResponseFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelResponseConnection @aws_iam @aws_cognito_user_pools
  getFlag(id: ID!): Flag @aws_iam @aws_cognito_user_pools
  listFlags(id: ID, filter: ModelFlagFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelFlagConnection @aws_iam @aws_cognito_user_pools
}

input ModelSurveyLinkConditionInput {
  uid: ModelStringInput
  projectId: ModelStringInput
  originalUrl: ModelStringInput
  vendorId: ModelStringInput
  status: ModelSurveyLinkStatusInput
  linkType: ModelSurveyLinkLinkTypeInput
  geoRestriction: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelSurveyLinkConditionInput]
  or: [ModelSurveyLinkConditionInput]
  not: ModelSurveyLinkConditionInput
}

input CreateSurveyLinkInput {
  id: ID
  uid: String!
  projectId: String!
  originalUrl: String!
  vendorId: String
  status: SurveyLinkStatus
  linkType: SurveyLinkLinkType
  geoRestriction: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input UpdateSurveyLinkInput {
  id: ID!
  uid: String
  projectId: String
  originalUrl: String
  vendorId: String
  status: SurveyLinkStatus
  linkType: SurveyLinkLinkType
  geoRestriction: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input DeleteSurveyLinkInput {
  id: ID!
}

type Mutation {
  createSurveyLink(input: CreateSurveyLinkInput!, condition: ModelSurveyLinkConditionInput): SurveyLink @aws_iam @aws_cognito_user_pools
  updateSurveyLink(input: UpdateSurveyLinkInput!, condition: ModelSurveyLinkConditionInput): SurveyLink @aws_iam @aws_cognito_user_pools
  deleteSurveyLink(input: DeleteSurveyLinkInput!, condition: ModelSurveyLinkConditionInput): SurveyLink @aws_api_key @aws_iam
  createVendor(input: CreateVendorInput!, condition: ModelVendorConditionInput): Vendor @aws_iam @aws_cognito_user_pools
  updateVendor(input: UpdateVendorInput!, condition: ModelVendorConditionInput): Vendor @aws_iam @aws_cognito_user_pools
  deleteVendor(input: DeleteVendorInput!, condition: ModelVendorConditionInput): Vendor @aws_iam @aws_cognito_user_pools
  createProject(input: CreateProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  updateProject(input: UpdateProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  deleteProject(input: DeleteProjectInput!, condition: ModelProjectConditionInput): Project @aws_iam @aws_cognito_user_pools
  createQuestion(input: CreateQuestionInput!, condition: ModelQuestionConditionInput): Question @aws_iam @aws_cognito_user_pools
  updateQuestion(input: UpdateQuestionInput!, condition: ModelQuestionConditionInput): Question @aws_iam @aws_cognito_user_pools
  deleteQuestion(input: DeleteQuestionInput!, condition: ModelQuestionConditionInput): Question @aws_iam @aws_cognito_user_pools
  createResponse(input: CreateResponseInput!, condition: ModelResponseConditionInput): Response @aws_api_key @aws_iam @aws_cognito_user_pools
  updateResponse(input: UpdateResponseInput!, condition: ModelResponseConditionInput): Response @aws_iam @aws_cognito_user_pools
  deleteResponse(input: DeleteResponseInput!, condition: ModelResponseConditionInput): Response @aws_api_key @aws_iam
  createFlag(input: CreateFlagInput!, condition: ModelFlagConditionInput): Flag @aws_api_key @aws_iam @aws_cognito_user_pools
  updateFlag(input: UpdateFlagInput!, condition: ModelFlagConditionInput): Flag @aws_iam @aws_cognito_user_pools
  deleteFlag(input: DeleteFlagInput!, condition: ModelFlagConditionInput): Flag @aws_api_key @aws_iam
}

input ModelSubscriptionSurveyLinkFilterInput {
  id: ModelSubscriptionIDInput
  uid: ModelSubscriptionStringInput
  projectId: ModelSubscriptionStringInput
  originalUrl: ModelSubscriptionStringInput
  vendorId: ModelSubscriptionStringInput
  status: ModelSubscriptionStringInput
  linkType: ModelSubscriptionStringInput
  geoRestriction: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionSurveyLinkFilterInput]
  or: [ModelSubscriptionSurveyLinkFilterInput]
}

type Subscription {
  onCreateSurveyLink(filter: ModelSubscriptionSurveyLinkFilterInput): SurveyLink @aws_subscribe(mutations: ["createSurveyLink"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onUpdateSurveyLink(filter: ModelSubscriptionSurveyLinkFilterInput): SurveyLink @aws_subscribe(mutations: ["updateSurveyLink"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onDeleteSurveyLink(filter: ModelSubscriptionSurveyLinkFilterInput): SurveyLink @aws_subscribe(mutations: ["deleteSurveyLink"]) @aws_api_key @aws_iam @aws_cognito_user_pools
  onCreateVendor(filter: ModelSubscriptionVendorFilterInput): Vendor @aws_subscribe(mutations: ["createVendor"]) @aws_iam @aws_cognito_user_pools
  onUpdateVendor(filter: ModelSubscriptionVendorFilterInput): Vendor @aws_subscribe(mutations: ["updateVendor"]) @aws_iam @aws_cognito_user_pools
  onDeleteVendor(filter: ModelSubscriptionVendorFilterInput): Vendor @aws_subscribe(mutations: ["deleteVendor"]) @aws_iam @aws_cognito_user_pools
  onCreateProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["createProject"]) @aws_iam @aws_cognito_user_pools
  onUpdateProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["updateProject"]) @aws_iam @aws_cognito_user_pools
  onDeleteProject(filter: ModelSubscriptionProjectFilterInput): Project @aws_subscribe(mutations: ["deleteProject"]) @aws_iam @aws_cognito_user_pools
  onCreateQuestion(filter: ModelSubscriptionQuestionFilterInput): Question @aws_subscribe(mutations: ["createQuestion"]) @aws_iam @aws_cognito_user_pools
  onUpdateQuestion(filter: ModelSubscriptionQuestionFilterInput): Question @aws_subscribe(mutations: ["updateQuestion"]) @aws_iam @aws_cognito_user_pools
  onDeleteQuestion(filter: ModelSubscriptionQuestionFilterInput): Question @aws_subscribe(mutations: ["deleteQuestion"]) @aws_iam @aws_cognito_user_pools
  onCreateResponse(filter: ModelSubscriptionResponseFilterInput): Response @aws_subscribe(mutations: ["createResponse"]) @aws_iam @aws_cognito_user_pools
  onUpdateResponse(filter: ModelSubscriptionResponseFilterInput): Response @aws_subscribe(mutations: ["updateResponse"]) @aws_iam @aws_cognito_user_pools
  onDeleteResponse(filter: ModelSubscriptionResponseFilterInput): Response @aws_subscribe(mutations: ["deleteResponse"]) @aws_iam @aws_cognito_user_pools
  onCreateFlag(filter: ModelSubscriptionFlagFilterInput): Flag @aws_subscribe(mutations: ["createFlag"]) @aws_iam @aws_cognito_user_pools
  onUpdateFlag(filter: ModelSubscriptionFlagFilterInput): Flag @aws_subscribe(mutations: ["updateFlag"]) @aws_iam @aws_cognito_user_pools
  onDeleteFlag(filter: ModelSubscriptionFlagFilterInput): Flag @aws_subscribe(mutations: ["deleteFlag"]) @aws_iam @aws_cognito_user_pools
}

type ModelVendorConnection @aws_iam @aws_cognito_user_pools {
  items: [Vendor]!
  nextToken: String
}

input ModelVendorFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  code: ModelStringInput
  projectId: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelVendorFilterInput]
  or: [ModelVendorFilterInput]
  not: ModelVendorFilterInput
}

input ModelVendorConditionInput {
  name: ModelStringInput
  code: ModelStringInput
  projectId: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelVendorConditionInput]
  or: [ModelVendorConditionInput]
  not: ModelVendorConditionInput
}

input CreateVendorInput {
  id: ID
  name: String!
  code: String!
  projectId: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input UpdateVendorInput {
  id: ID!
  name: String
  code: String
  projectId: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input DeleteVendorInput {
  id: ID!
}

input ModelSubscriptionVendorFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  code: ModelSubscriptionStringInput
  projectId: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionVendorFilterInput]
  or: [ModelSubscriptionVendorFilterInput]
}

type ModelProjectConnection @aws_iam @aws_cognito_user_pools {
  items: [Project]!
  nextToken: String
}

input ModelProjectFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelProjectFilterInput]
  or: [ModelProjectFilterInput]
  not: ModelProjectFilterInput
}

input ModelProjectConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelProjectConditionInput]
  or: [ModelProjectConditionInput]
  not: ModelProjectConditionInput
}

input CreateProjectInput {
  id: ID
  name: String!
  description: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input UpdateProjectInput {
  id: ID!
  name: String
  description: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input DeleteProjectInput {
  id: ID!
}

input ModelSubscriptionProjectFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionProjectFilterInput]
  or: [ModelSubscriptionProjectFilterInput]
}

type ModelQuestionConnection @aws_iam @aws_cognito_user_pools {
  items: [Question]!
  nextToken: String
}

input ModelQuestionFilterInput {
  id: ModelIDInput
  projectId: ModelStringInput
  text: ModelStringInput
  options: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelQuestionFilterInput]
  or: [ModelQuestionFilterInput]
  not: ModelQuestionFilterInput
}

input ModelQuestionConditionInput {
  projectId: ModelStringInput
  text: ModelStringInput
  options: ModelStringInput
  createdAt: ModelStringInput
  and: [ModelQuestionConditionInput]
  or: [ModelQuestionConditionInput]
  not: ModelQuestionConditionInput
  updatedAt: ModelStringInput
}

input CreateQuestionInput {
  id: ID
  projectId: String!
  text: String!
  options: String!
  createdAt: AWSDateTime
}

input UpdateQuestionInput {
  id: ID!
  projectId: String
  text: String
  options: String
  createdAt: AWSDateTime
}

input DeleteQuestionInput {
  id: ID!
}

input ModelSubscriptionQuestionFilterInput {
  id: ModelSubscriptionIDInput
  projectId: ModelSubscriptionStringInput
  text: ModelSubscriptionStringInput
  options: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionQuestionFilterInput]
  or: [ModelSubscriptionQuestionFilterInput]
}

type ModelResponseConnection @aws_iam @aws_cognito_user_pools @aws_api_key {
  items: [Response]!
  nextToken: String
}

input ModelResponseFilterInput {
  id: ModelIDInput
  surveyLinkId: ModelStringInput
  projectId: ModelStringInput
  questionId: ModelStringInput
  answer: ModelStringInput
  metadata: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelResponseFilterInput]
  or: [ModelResponseFilterInput]
  not: ModelResponseFilterInput
}

input ModelResponseConditionInput {
  surveyLinkId: ModelStringInput
  projectId: ModelStringInput
  questionId: ModelStringInput
  answer: ModelStringInput
  metadata: ModelStringInput
  createdAt: ModelStringInput
  and: [ModelResponseConditionInput]
  or: [ModelResponseConditionInput]
  not: ModelResponseConditionInput
  updatedAt: ModelStringInput
}

input CreateResponseInput {
  id: ID
  surveyLinkId: String!
  projectId: String!
  questionId: String!
  answer: String!
  metadata: String
  createdAt: AWSDateTime
}

input UpdateResponseInput {
  id: ID!
  surveyLinkId: String
  projectId: String
  questionId: String
  answer: String
  metadata: String
  createdAt: AWSDateTime
}

input DeleteResponseInput {
  id: ID!
}

input ModelSubscriptionResponseFilterInput {
  id: ModelSubscriptionIDInput
  surveyLinkId: ModelSubscriptionStringInput
  projectId: ModelSubscriptionStringInput
  questionId: ModelSubscriptionStringInput
  answer: ModelSubscriptionStringInput
  metadata: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionResponseFilterInput]
  or: [ModelSubscriptionResponseFilterInput]
}

type ModelFlagConnection @aws_iam @aws_cognito_user_pools @aws_api_key {
  items: [Flag]!
  nextToken: String
}

input ModelFlagFilterInput {
  id: ModelIDInput
  surveyLinkId: ModelStringInput
  projectId: ModelStringInput
  reason: ModelStringInput
  metadata: ModelStringInput
  resolved: ModelBooleanInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelFlagFilterInput]
  or: [ModelFlagFilterInput]
  not: ModelFlagFilterInput
}

input ModelFlagConditionInput {
  surveyLinkId: ModelStringInput
  projectId: ModelStringInput
  reason: ModelStringInput
  metadata: ModelStringInput
  resolved: ModelBooleanInput
  createdAt: ModelStringInput
  and: [ModelFlagConditionInput]
  or: [ModelFlagConditionInput]
  not: ModelFlagConditionInput
  updatedAt: ModelStringInput
}

input CreateFlagInput {
  id: ID
  surveyLinkId: String!
  projectId: String!
  reason: String!
  metadata: String
  resolved: Boolean
  createdAt: AWSDateTime
}

input UpdateFlagInput {
  id: ID!
  surveyLinkId: String
  projectId: String
  reason: String
  metadata: String
  resolved: Boolean
  createdAt: AWSDateTime
}

input DeleteFlagInput {
  id: ID!
}

input ModelSubscriptionFlagFilterInput {
  id: ModelSubscriptionIDInput
  surveyLinkId: ModelSubscriptionStringInput
  projectId: ModelSubscriptionStringInput
  reason: ModelSubscriptionStringInput
  metadata: ModelSubscriptionStringInput
  resolved: ModelSubscriptionBooleanInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionFlagFilterInput]
  or: [ModelSubscriptionFlagFilterInput]
}
