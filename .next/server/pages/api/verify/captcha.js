"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/verify/captcha";
exports.ids = ["pages/api/verify/captcha"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

module.exports = import("uuid");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fverify%2Fcaptcha&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cverify%5Ccaptcha.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fverify%2Fcaptcha&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cverify%5Ccaptcha.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\verify\\captcha.ts */ \"(api)/./src/pages/api/verify/captcha.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/verify/captcha\",\n        pathname: \"/api/verify/captcha\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_verify_captcha_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnZlcmlmeSUyRmNhcHRjaGEmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1Q3ZlcmlmeSU1Q2NhcHRjaGEudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDa0U7QUFDbEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDZEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw2REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXJ2ZXktbGluay13cmFwcGVyLz9kZmE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXHZlcmlmeVxcXFxjYXB0Y2hhLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdmVyaWZ5L2NhcHRjaGFcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS92ZXJpZnkvY2FwdGNoYVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fverify%2Fcaptcha&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cverify%5Ccaptcha.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/captcha.ts":
/*!****************************!*\
  !*** ./src/lib/captcha.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyCaptcha: () => (/* binding */ verifyCaptcha)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\r\n * Verify hCaptcha token with hCaptcha API\r\n */ async function verifyCaptcha(token) {\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"https://hcaptcha.com/siteverify\", new URLSearchParams({\n            secret: process.env.HCAPTCHA_SECRET || \"\",\n            response: token\n        }), {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            }\n        });\n        return response.data.success;\n    } catch (error) {\n        console.error(\"Error verifying captcha:\", error);\n        return false;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL2NhcHRjaGEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEI7QUFPMUI7O0NBRUMsR0FDTSxlQUFlQyxjQUFjQyxLQUFhO0lBQy9DLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1ILGtEQUFVLENBQy9CLG1DQUNBLElBQUlLLGdCQUFnQjtZQUNsQkMsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxlQUFlLElBQUk7WUFDdkNOLFVBQVVEO1FBQ1osSUFDQTtZQUNFUSxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtRQUNGO1FBR0YsT0FBT1AsU0FBU1EsSUFBSSxDQUFDQyxPQUFPO0lBQzlCLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtRQUMxQyxPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvLi9zcmMvbGliL2NhcHRjaGEudHM/YTY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxuaW50ZXJmYWNlIFZlcmlmeUNhcHRjaGFSZXNwb25zZSB7XHJcbiAgc3VjY2VzczogYm9vbGVhbjtcclxuICBlcnJvckNvZGVzPzogc3RyaW5nW107XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWZXJpZnkgaENhcHRjaGEgdG9rZW4gd2l0aCBoQ2FwdGNoYSBBUElcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlDYXB0Y2hhKHRva2VuOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0PFZlcmlmeUNhcHRjaGFSZXNwb25zZT4oXHJcbiAgICAgICdodHRwczovL2hjYXB0Y2hhLmNvbS9zaXRldmVyaWZ5JyxcclxuICAgICAgbmV3IFVSTFNlYXJjaFBhcmFtcyh7XHJcbiAgICAgICAgc2VjcmV0OiBwcm9jZXNzLmVudi5IQ0FQVENIQV9TRUNSRVQgfHwgJycsXHJcbiAgICAgICAgcmVzcG9uc2U6IHRva2VuLFxyXG4gICAgICB9KSxcclxuICAgICAge1xyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcclxuICAgICAgICB9LFxyXG4gICAgICB9XHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhLnN1Y2Nlc3M7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHZlcmlmeWluZyBjYXB0Y2hhOicsIGVycm9yKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiYXhpb3MiLCJ2ZXJpZnlDYXB0Y2hhIiwidG9rZW4iLCJyZXNwb25zZSIsInBvc3QiLCJVUkxTZWFyY2hQYXJhbXMiLCJzZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiSENBUFRDSEFfU0VDUkVUIiwiaGVhZGVycyIsImRhdGEiLCJzdWNjZXNzIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/captcha.ts\n");

/***/ }),

/***/ "(api)/./src/lib/metadata.ts":
/*!*****************************!*\
  !*** ./src/lib/metadata.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectMetadata: () => (/* binding */ collectMetadata),\n/* harmony export */   detectAnomalies: () => (/* binding */ detectAnomalies),\n/* harmony export */   enhanceMetadataWithVPNDetection: () => (/* binding */ enhanceMetadataWithVPNDetection)\n/* harmony export */ });\n/* harmony import */ var _vpn_detection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vpn-detection */ \"(api)/./src/lib/vpn-detection.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_vpn_detection__WEBPACK_IMPORTED_MODULE_0__]);\n_vpn_detection__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\r\n * Extract and collect user metadata from request\r\n */ function collectMetadata(req) {\n    const userAgent = req.headers[\"user-agent\"] || null;\n    // Basic browser and device detection based on user agent\n    let browser = null;\n    let device = null;\n    if (userAgent) {\n        if (userAgent.includes(\"Firefox\")) {\n            browser = \"Firefox\";\n        } else if (userAgent.includes(\"Chrome\")) {\n            browser = \"Chrome\";\n        } else if (userAgent.includes(\"Safari\")) {\n            browser = \"Safari\";\n        } else if (userAgent.includes(\"Edge\")) {\n            browser = \"Edge\";\n        } else if (userAgent.includes(\"MSIE\") || userAgent.includes(\"Trident/\")) {\n            browser = \"Internet Explorer\";\n        }\n        if (userAgent.includes(\"Mobile\")) {\n            device = \"Mobile\";\n        } else if (userAgent.includes(\"Tablet\")) {\n            device = \"Tablet\";\n        } else {\n            device = \"Desktop\";\n        }\n    }\n    const ip = req.headers[\"x-forwarded-for\"] || req.socket.remoteAddress || null;\n    return {\n        ip,\n        userAgent,\n        browser,\n        device,\n        timezone: null,\n        timestamp: Date.now(),\n        fingerprint: null\n    };\n}\n/**\r\n * Check if metadata contains anomalies that might indicate bot behavior\r\n */ function detectAnomalies(metadata) {\n    const reasons = [];\n    // Check for missing user agent\n    if (!metadata.userAgent) {\n        reasons.push(\"Missing user agent\");\n    }\n    // Check for VPN/proxy usage if available\n    if (metadata.vpnData) {\n        if (metadata.vpnData.isVPN) {\n            reasons.push(\"VPN detected\");\n        }\n        if (metadata.vpnData.isProxy) {\n            reasons.push(\"Proxy detected\");\n        }\n        if (metadata.vpnData.isTor) {\n            reasons.push(\"Tor network detected\");\n        }\n        if (metadata.vpnData.isHosting) {\n            reasons.push(\"Hosting provider detected\");\n        }\n    }\n    // Add more detection logic as needed\n    return {\n        isBot: reasons.length > 0,\n        reasons\n    };\n}\n/**\r\n * Enhance metadata with VPN detection\r\n */ async function enhanceMetadataWithVPNDetection(metadata) {\n    if (!metadata.ip) {\n        return metadata;\n    }\n    try {\n        // Use primary VPN detection method (IPinfo)\n        const vpnData = await (0,_vpn_detection__WEBPACK_IMPORTED_MODULE_0__.detectVPN)(metadata.ip);\n        // If primary fails or API key is missing, try alternative method (IP-API)\n        if (!vpnData || vpnData.details?.error) {\n            const alternativeVpnData = await (0,_vpn_detection__WEBPACK_IMPORTED_MODULE_0__.detectVPNWithIPAPI)(metadata.ip);\n            return {\n                ...metadata,\n                vpnData: alternativeVpnData\n            };\n        }\n        return {\n            ...metadata,\n            vpnData\n        };\n    } catch (error) {\n        console.error(\"Error enhancing metadata with VPN detection:\", error);\n        return metadata;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL21ldGFkYXRhLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDZ0U7QUFtQmhFOztDQUVDLEdBQ00sU0FBU0UsZ0JBQWdCQyxHQUFtQjtJQUNqRCxNQUFNQyxZQUFZRCxJQUFJRSxPQUFPLENBQUMsYUFBYSxJQUFJO0lBRS9DLHlEQUF5RDtJQUN6RCxJQUFJQyxVQUFVO0lBQ2QsSUFBSUMsU0FBUztJQUViLElBQUlILFdBQVc7UUFDYixJQUFJQSxVQUFVSSxRQUFRLENBQUMsWUFBWTtZQUNqQ0YsVUFBVTtRQUNaLE9BQU8sSUFBSUYsVUFBVUksUUFBUSxDQUFDLFdBQVc7WUFDdkNGLFVBQVU7UUFDWixPQUFPLElBQUlGLFVBQVVJLFFBQVEsQ0FBQyxXQUFXO1lBQ3ZDRixVQUFVO1FBQ1osT0FBTyxJQUFJRixVQUFVSSxRQUFRLENBQUMsU0FBUztZQUNyQ0YsVUFBVTtRQUNaLE9BQU8sSUFBSUYsVUFBVUksUUFBUSxDQUFDLFdBQVdKLFVBQVVJLFFBQVEsQ0FBQyxhQUFhO1lBQ3ZFRixVQUFVO1FBQ1o7UUFFQSxJQUFJRixVQUFVSSxRQUFRLENBQUMsV0FBVztZQUNoQ0QsU0FBUztRQUNYLE9BQU8sSUFBSUgsVUFBVUksUUFBUSxDQUFDLFdBQVc7WUFDdkNELFNBQVM7UUFDWCxPQUFPO1lBQ0xBLFNBQVM7UUFDWDtJQUNGO0lBRUEsTUFBTUUsS0FBS04sSUFBSUUsT0FBTyxDQUFDLGtCQUFrQixJQUNyQ0YsSUFBSU8sTUFBTSxDQUFDQyxhQUFhLElBQ3hCO0lBRUosT0FBTztRQUNMRjtRQUNBTDtRQUNBRTtRQUNBQztRQUNBSyxVQUFVO1FBQ1ZDLFdBQVdDLEtBQUtDLEdBQUc7UUFDbkJDLGFBQWE7SUFDZjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTQyxnQkFBZ0JDLFFBQXNCO0lBQ3BELE1BQU1DLFVBQW9CLEVBQUU7SUFFNUIsK0JBQStCO0lBQy9CLElBQUksQ0FBQ0QsU0FBU2QsU0FBUyxFQUFFO1FBQ3ZCZSxRQUFRQyxJQUFJLENBQUM7SUFDZjtJQUVBLHlDQUF5QztJQUN6QyxJQUFJRixTQUFTRyxPQUFPLEVBQUU7UUFDcEIsSUFBSUgsU0FBU0csT0FBTyxDQUFDQyxLQUFLLEVBQUU7WUFDMUJILFFBQVFDLElBQUksQ0FBQztRQUNmO1FBRUEsSUFBSUYsU0FBU0csT0FBTyxDQUFDRSxPQUFPLEVBQUU7WUFDNUJKLFFBQVFDLElBQUksQ0FBQztRQUNmO1FBRUEsSUFBSUYsU0FBU0csT0FBTyxDQUFDRyxLQUFLLEVBQUU7WUFDMUJMLFFBQVFDLElBQUksQ0FBQztRQUNmO1FBRUEsSUFBSUYsU0FBU0csT0FBTyxDQUFDSSxTQUFTLEVBQUU7WUFDOUJOLFFBQVFDLElBQUksQ0FBQztRQUNmO0lBQ0Y7SUFFQSxxQ0FBcUM7SUFFckMsT0FBTztRQUNMTSxPQUFPUCxRQUFRUSxNQUFNLEdBQUc7UUFDeEJSO0lBQ0Y7QUFDRjtBQUVBOztDQUVDLEdBQ00sZUFBZVMsZ0NBQWdDVixRQUFzQjtJQUMxRSxJQUFJLENBQUNBLFNBQVNULEVBQUUsRUFBRTtRQUNoQixPQUFPUztJQUNUO0lBRUEsSUFBSTtRQUNGLDRDQUE0QztRQUM1QyxNQUFNRyxVQUFVLE1BQU1yQix5REFBU0EsQ0FBQ2tCLFNBQVNULEVBQUU7UUFFM0MsMEVBQTBFO1FBQzFFLElBQUksQ0FBQ1ksV0FBV0EsUUFBUVEsT0FBTyxFQUFFQyxPQUFPO1lBQ3RDLE1BQU1DLHFCQUFxQixNQUFNOUIsa0VBQWtCQSxDQUFDaUIsU0FBU1QsRUFBRTtZQUMvRCxPQUFPO2dCQUNMLEdBQUdTLFFBQVE7Z0JBQ1hHLFNBQVNVO1lBQ1g7UUFDRjtRQUVBLE9BQU87WUFDTCxHQUFHYixRQUFRO1lBQ1hHO1FBQ0Y7SUFDRixFQUFFLE9BQU9TLE9BQU87UUFDZEUsUUFBUUYsS0FBSyxDQUFDLGdEQUFnREE7UUFDOUQsT0FBT1o7SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VydmV5LWxpbmstd3JhcHBlci8uL3NyYy9saWIvbWV0YWRhdGEudHM/ZDQ4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgeyBkZXRlY3RWUE4sIGRldGVjdFZQTldpdGhJUEFQSSB9IGZyb20gJy4vdnBuLWRldGVjdGlvbic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJNZXRhZGF0YSB7XHJcbiAgaXA6IHN0cmluZyB8IG51bGw7XHJcbiAgdXNlckFnZW50OiBzdHJpbmcgfCBudWxsO1xyXG4gIGJyb3dzZXI6IHN0cmluZyB8IG51bGw7XHJcbiAgZGV2aWNlOiBzdHJpbmcgfCBudWxsO1xyXG4gIHRpbWV6b25lOiBzdHJpbmcgfCBudWxsO1xyXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xyXG4gIGZpbmdlcnByaW50OiBzdHJpbmcgfCBudWxsO1xyXG4gIHZwbkRhdGE/OiB7XHJcbiAgICBpc1ZQTjogYm9vbGVhbjtcclxuICAgIGlzUHJveHk/OiBib29sZWFuO1xyXG4gICAgaXNUb3I/OiBib29sZWFuO1xyXG4gICAgaXNIb3N0aW5nPzogYm9vbGVhbjtcclxuICAgIGRldGFpbHM6IGFueTtcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogRXh0cmFjdCBhbmQgY29sbGVjdCB1c2VyIG1ldGFkYXRhIGZyb20gcmVxdWVzdFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbGxlY3RNZXRhZGF0YShyZXE6IE5leHRBcGlSZXF1ZXN0KTogVXNlck1ldGFkYXRhIHtcclxuICBjb25zdCB1c2VyQWdlbnQgPSByZXEuaGVhZGVyc1sndXNlci1hZ2VudCddIHx8IG51bGw7XHJcbiAgXHJcbiAgLy8gQmFzaWMgYnJvd3NlciBhbmQgZGV2aWNlIGRldGVjdGlvbiBiYXNlZCBvbiB1c2VyIGFnZW50XHJcbiAgbGV0IGJyb3dzZXIgPSBudWxsO1xyXG4gIGxldCBkZXZpY2UgPSBudWxsO1xyXG4gIFxyXG4gIGlmICh1c2VyQWdlbnQpIHtcclxuICAgIGlmICh1c2VyQWdlbnQuaW5jbHVkZXMoJ0ZpcmVmb3gnKSkge1xyXG4gICAgICBicm93c2VyID0gJ0ZpcmVmb3gnO1xyXG4gICAgfSBlbHNlIGlmICh1c2VyQWdlbnQuaW5jbHVkZXMoJ0Nocm9tZScpKSB7XHJcbiAgICAgIGJyb3dzZXIgPSAnQ2hyb21lJztcclxuICAgIH0gZWxzZSBpZiAodXNlckFnZW50LmluY2x1ZGVzKCdTYWZhcmknKSkge1xyXG4gICAgICBicm93c2VyID0gJ1NhZmFyaSc7XHJcbiAgICB9IGVsc2UgaWYgKHVzZXJBZ2VudC5pbmNsdWRlcygnRWRnZScpKSB7XHJcbiAgICAgIGJyb3dzZXIgPSAnRWRnZSc7XHJcbiAgICB9IGVsc2UgaWYgKHVzZXJBZ2VudC5pbmNsdWRlcygnTVNJRScpIHx8IHVzZXJBZ2VudC5pbmNsdWRlcygnVHJpZGVudC8nKSkge1xyXG4gICAgICBicm93c2VyID0gJ0ludGVybmV0IEV4cGxvcmVyJztcclxuICAgIH1cclxuXHJcbiAgICBpZiAodXNlckFnZW50LmluY2x1ZGVzKCdNb2JpbGUnKSkge1xyXG4gICAgICBkZXZpY2UgPSAnTW9iaWxlJztcclxuICAgIH0gZWxzZSBpZiAodXNlckFnZW50LmluY2x1ZGVzKCdUYWJsZXQnKSkge1xyXG4gICAgICBkZXZpY2UgPSAnVGFibGV0JztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRldmljZSA9ICdEZXNrdG9wJztcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgY29uc3QgaXAgPSByZXEuaGVhZGVyc1sneC1mb3J3YXJkZWQtZm9yJ10gYXMgc3RyaW5nIHx8IFxyXG4gICAgICByZXEuc29ja2V0LnJlbW90ZUFkZHJlc3MgfHwgXHJcbiAgICAgIG51bGw7XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgIGlwLFxyXG4gICAgdXNlckFnZW50LFxyXG4gICAgYnJvd3NlcixcclxuICAgIGRldmljZSxcclxuICAgIHRpbWV6b25lOiBudWxsLCAvLyBUaGlzIHdpbGwgYmUgY29sbGVjdGVkIGZyb20gY2xpZW50LXNpZGVcclxuICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICAgIGZpbmdlcnByaW50OiBudWxsLCAvLyBUaGlzIHdpbGwgYmUgY29sbGVjdGVkIGZyb20gY2xpZW50LXNpZGVcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgbWV0YWRhdGEgY29udGFpbnMgYW5vbWFsaWVzIHRoYXQgbWlnaHQgaW5kaWNhdGUgYm90IGJlaGF2aW9yXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0QW5vbWFsaWVzKG1ldGFkYXRhOiBVc2VyTWV0YWRhdGEpOiB7aXNCb3Q6IGJvb2xlYW4sIHJlYXNvbnM6IHN0cmluZ1tdfSB7XHJcbiAgY29uc3QgcmVhc29uczogc3RyaW5nW10gPSBbXTtcclxuICBcclxuICAvLyBDaGVjayBmb3IgbWlzc2luZyB1c2VyIGFnZW50XHJcbiAgaWYgKCFtZXRhZGF0YS51c2VyQWdlbnQpIHtcclxuICAgIHJlYXNvbnMucHVzaCgnTWlzc2luZyB1c2VyIGFnZW50Jyk7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIENoZWNrIGZvciBWUE4vcHJveHkgdXNhZ2UgaWYgYXZhaWxhYmxlXHJcbiAgaWYgKG1ldGFkYXRhLnZwbkRhdGEpIHtcclxuICAgIGlmIChtZXRhZGF0YS52cG5EYXRhLmlzVlBOKSB7XHJcbiAgICAgIHJlYXNvbnMucHVzaCgnVlBOIGRldGVjdGVkJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChtZXRhZGF0YS52cG5EYXRhLmlzUHJveHkpIHtcclxuICAgICAgcmVhc29ucy5wdXNoKCdQcm94eSBkZXRlY3RlZCcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAobWV0YWRhdGEudnBuRGF0YS5pc1Rvcikge1xyXG4gICAgICByZWFzb25zLnB1c2goJ1RvciBuZXR3b3JrIGRldGVjdGVkJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChtZXRhZGF0YS52cG5EYXRhLmlzSG9zdGluZykge1xyXG4gICAgICByZWFzb25zLnB1c2goJ0hvc3RpbmcgcHJvdmlkZXIgZGV0ZWN0ZWQnKTtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLy8gQWRkIG1vcmUgZGV0ZWN0aW9uIGxvZ2ljIGFzIG5lZWRlZFxyXG4gIFxyXG4gIHJldHVybiB7XHJcbiAgICBpc0JvdDogcmVhc29ucy5sZW5ndGggPiAwLFxyXG4gICAgcmVhc29uc1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFbmhhbmNlIG1ldGFkYXRhIHdpdGggVlBOIGRldGVjdGlvblxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuaGFuY2VNZXRhZGF0YVdpdGhWUE5EZXRlY3Rpb24obWV0YWRhdGE6IFVzZXJNZXRhZGF0YSk6IFByb21pc2U8VXNlck1ldGFkYXRhPiB7XHJcbiAgaWYgKCFtZXRhZGF0YS5pcCkge1xyXG4gICAgcmV0dXJuIG1ldGFkYXRhO1xyXG4gIH1cclxuICBcclxuICB0cnkge1xyXG4gICAgLy8gVXNlIHByaW1hcnkgVlBOIGRldGVjdGlvbiBtZXRob2QgKElQaW5mbylcclxuICAgIGNvbnN0IHZwbkRhdGEgPSBhd2FpdCBkZXRlY3RWUE4obWV0YWRhdGEuaXApO1xyXG4gICAgXHJcbiAgICAvLyBJZiBwcmltYXJ5IGZhaWxzIG9yIEFQSSBrZXkgaXMgbWlzc2luZywgdHJ5IGFsdGVybmF0aXZlIG1ldGhvZCAoSVAtQVBJKVxyXG4gICAgaWYgKCF2cG5EYXRhIHx8IHZwbkRhdGEuZGV0YWlscz8uZXJyb3IpIHtcclxuICAgICAgY29uc3QgYWx0ZXJuYXRpdmVWcG5EYXRhID0gYXdhaXQgZGV0ZWN0VlBOV2l0aElQQVBJKG1ldGFkYXRhLmlwKTtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICAuLi5tZXRhZGF0YSxcclxuICAgICAgICB2cG5EYXRhOiBhbHRlcm5hdGl2ZVZwbkRhdGFcclxuICAgICAgfTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4ubWV0YWRhdGEsXHJcbiAgICAgIHZwbkRhdGFcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGVuaGFuY2luZyBtZXRhZGF0YSB3aXRoIFZQTiBkZXRlY3Rpb246JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIG1ldGFkYXRhO1xyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJkZXRlY3RWUE4iLCJkZXRlY3RWUE5XaXRoSVBBUEkiLCJjb2xsZWN0TWV0YWRhdGEiLCJyZXEiLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiYnJvd3NlciIsImRldmljZSIsImluY2x1ZGVzIiwiaXAiLCJzb2NrZXQiLCJyZW1vdGVBZGRyZXNzIiwidGltZXpvbmUiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwiZmluZ2VycHJpbnQiLCJkZXRlY3RBbm9tYWxpZXMiLCJtZXRhZGF0YSIsInJlYXNvbnMiLCJwdXNoIiwidnBuRGF0YSIsImlzVlBOIiwiaXNQcm94eSIsImlzVG9yIiwiaXNIb3N0aW5nIiwiaXNCb3QiLCJsZW5ndGgiLCJlbmhhbmNlTWV0YWRhdGFXaXRoVlBORGV0ZWN0aW9uIiwiZGV0YWlscyIsImVycm9yIiwiYWx0ZXJuYXRpdmVWcG5EYXRhIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/metadata.ts\n");

/***/ }),

/***/ "(api)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"query\",\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFTdkMsTUFBTUMsU0FDWEMsT0FBT0QsTUFBTSxJQUNiLElBQUlELHdEQUFZQSxDQUFDO0lBQ2ZHLEtBQUtDLEtBQXlCLEdBQWdCO1FBQUM7UUFBUztRQUFTO0tBQU8sR0FBRyxDQUFTO0FBQ3RGLEdBQUc7QUFFTCxJQUFJQSxJQUF5QixFQUFjRixPQUFPRCxNQUFNLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VydmV5LWxpbmstd3JhcHBlci8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnO1xyXG5cclxuLy8gUHJpc21hQ2xpZW50IGlzIGF0dGFjaGVkIHRvIHRoZSBgZ2xvYmFsYCBvYmplY3QgaW4gZGV2ZWxvcG1lbnQgdG8gcHJldmVudFxyXG4vLyBleGhhdXN0aW5nIHlvdXIgZGF0YWJhc2UgY29ubmVjdGlvbiBsaW1pdC5cclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby12YXJcclxuICB2YXIgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPVxyXG4gIGdsb2JhbC5wcmlzbWEgfHxcclxuICBuZXcgUHJpc21hQ2xpZW50KHtcclxuICAgIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBbJ3F1ZXJ5JywgJ2Vycm9yJywgJ3dhcm4nXSA6IFsnZXJyb3InXSxcclxuICB9KTtcclxuXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWwucHJpc21hID0gcHJpc21hOyJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJnbG9iYWwiLCJsb2ciLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/prisma.ts\n");

/***/ }),

/***/ "(api)/./src/lib/vpn-detection.ts":
/*!**********************************!*\
  !*** ./src/lib/vpn-detection.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectVPN: () => (/* binding */ detectVPN),\n/* harmony export */   detectVPNWithIPAPI: () => (/* binding */ detectVPNWithIPAPI)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\r\n * Check if an IP address is from a VPN, proxy, Tor, or hosting provider\r\n * using the IPinfo.io API\r\n */ async function detectVPN(ip) {\n    if (!ip) {\n        return {\n            isVPN: false,\n            isProxy: false,\n            isTor: false,\n            isHosting: false,\n            details: {\n                error: \"No IP provided\"\n            }\n        };\n    }\n    // Use IPinfo API to check if IP is from VPN/proxy\n    // You should register for an API key at https://ipinfo.io/\n    const apiKey = process.env.IPINFO_API_KEY || \"\";\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://ipinfo.io/${ip}/privacy?token=${apiKey}`);\n        const data = response.data;\n        return {\n            isVPN: data.vpn || false,\n            isProxy: data.proxy || false,\n            isTor: data.tor || false,\n            isHosting: data.hosting || false,\n            details: data\n        };\n    } catch (error) {\n        console.error(\"Error detecting VPN:\", error);\n        return {\n            isVPN: false,\n            isProxy: false,\n            isTor: false,\n            isHosting: false,\n            details: {\n                error: \"Failed to detect VPN status\"\n            }\n        };\n    }\n}\n/**\r\n * Alternative function using IP-API.com (free tier has limitations)\r\n */ async function detectVPNWithIPAPI(ip) {\n    if (!ip) {\n        return {\n            isVPN: false,\n            details: {\n                error: \"No IP provided\"\n            }\n        };\n    }\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`http://ip-api.com/json/${ip}?fields=status,message,proxy,hosting`);\n        const data = response.data;\n        if (data.status === \"success\") {\n            return {\n                isVPN: data.proxy || data.hosting || false,\n                details: data\n            };\n        } else {\n            return {\n                isVPN: false,\n                details: {\n                    error: data.message || \"API call failed\"\n                }\n            };\n        }\n    } catch (error) {\n        console.error(\"Error detecting VPN with IP-API:\", error);\n        return {\n            isVPN: false,\n            details: {\n                error: \"Failed to detect VPN status\"\n            }\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3Zwbi1kZXRlY3Rpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBCO0FBYzFCOzs7Q0FHQyxHQUNNLGVBQWVDLFVBQVVDLEVBQWlCO0lBTy9DLElBQUksQ0FBQ0EsSUFBSTtRQUNQLE9BQU87WUFDTEMsT0FBTztZQUNQQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsV0FBVztZQUNYQyxTQUFTO2dCQUFFQyxPQUFPO1lBQWlCO1FBQ3JDO0lBQ0Y7SUFFQSxrREFBa0Q7SUFDbEQsMkRBQTJEO0lBQzNELE1BQU1DLFNBQVNDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxJQUFJO0lBRTdDLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1iLGlEQUFTLENBQzlCLENBQUMsa0JBQWtCLEVBQUVFLEdBQUcsZUFBZSxFQUFFTyxPQUFPLENBQUM7UUFHbkQsTUFBTU0sT0FBT0YsU0FBU0UsSUFBSTtRQUUxQixPQUFPO1lBQ0xaLE9BQU9ZLEtBQUtDLEdBQUcsSUFBSTtZQUNuQlosU0FBU1csS0FBS0UsS0FBSyxJQUFJO1lBQ3ZCWixPQUFPVSxLQUFLRyxHQUFHLElBQUk7WUFDbkJaLFdBQVdTLEtBQUtJLE9BQU8sSUFBSTtZQUMzQlosU0FBU1E7UUFDWDtJQUNGLEVBQUUsT0FBT1AsT0FBTztRQUNkWSxRQUFRWixLQUFLLENBQUMsd0JBQXdCQTtRQUN0QyxPQUFPO1lBQ0xMLE9BQU87WUFDUEMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFdBQVc7WUFDWEMsU0FBUztnQkFBRUMsT0FBTztZQUE4QjtRQUNsRDtJQUNGO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLGVBQWVhLG1CQUFtQm5CLEVBQWlCO0lBSXhELElBQUksQ0FBQ0EsSUFBSTtRQUNQLE9BQU87WUFDTEMsT0FBTztZQUNQSSxTQUFTO2dCQUFFQyxPQUFPO1lBQWlCO1FBQ3JDO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsTUFBTUssV0FBVyxNQUFNYixpREFBUyxDQUM5QixDQUFDLHVCQUF1QixFQUFFRSxHQUFHLG9DQUFvQyxDQUFDO1FBR3BFLE1BQU1hLE9BQU9GLFNBQVNFLElBQUk7UUFFMUIsSUFBSUEsS0FBS08sTUFBTSxLQUFLLFdBQVc7WUFDN0IsT0FBTztnQkFDTG5CLE9BQU9ZLEtBQUtFLEtBQUssSUFBSUYsS0FBS0ksT0FBTyxJQUFJO2dCQUNyQ1osU0FBU1E7WUFDWDtRQUNGLE9BQU87WUFDTCxPQUFPO2dCQUNMWixPQUFPO2dCQUNQSSxTQUFTO29CQUFFQyxPQUFPTyxLQUFLUSxPQUFPLElBQUk7Z0JBQWtCO1lBQ3REO1FBQ0Y7SUFDRixFQUFFLE9BQU9mLE9BQU87UUFDZFksUUFBUVosS0FBSyxDQUFDLG9DQUFvQ0E7UUFDbEQsT0FBTztZQUNMTCxPQUFPO1lBQ1BJLFNBQVM7Z0JBQUVDLE9BQU87WUFBOEI7UUFDbEQ7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VydmV5LWxpbmstd3JhcHBlci8uL3NyYy9saWIvdnBuLWRldGVjdGlvbi50cz9lNTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG5pbnRlcmZhY2UgSVBJbmZvUmVzcG9uc2Uge1xyXG4gIGlwOiBzdHJpbmc7XHJcbiAgaG9zdGluZz86IGJvb2xlYW47XHJcbiAgcHJveHk/OiBib29sZWFuO1xyXG4gIHZwbj86IGJvb2xlYW47XHJcbiAgdG9yPzogYm9vbGVhbjtcclxuICBzdWNjZXNzPzogYm9vbGVhbjtcclxuICBlcnJvcj86IHtcclxuICAgIG1lc3NhZ2U6IHN0cmluZztcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgYW4gSVAgYWRkcmVzcyBpcyBmcm9tIGEgVlBOLCBwcm94eSwgVG9yLCBvciBob3N0aW5nIHByb3ZpZGVyXHJcbiAqIHVzaW5nIHRoZSBJUGluZm8uaW8gQVBJXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGV0ZWN0VlBOKGlwOiBzdHJpbmcgfCBudWxsKTogUHJvbWlzZTx7XHJcbiAgaXNWUE46IGJvb2xlYW47XHJcbiAgaXNQcm94eTogYm9vbGVhbjsgXHJcbiAgaXNUb3I6IGJvb2xlYW47XHJcbiAgaXNIb3N0aW5nOiBib29sZWFuO1xyXG4gIGRldGFpbHM6IGFueTtcclxufT4ge1xyXG4gIGlmICghaXApIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlzVlBOOiBmYWxzZSxcclxuICAgICAgaXNQcm94eTogZmFsc2UsXHJcbiAgICAgIGlzVG9yOiBmYWxzZSxcclxuICAgICAgaXNIb3N0aW5nOiBmYWxzZSxcclxuICAgICAgZGV0YWlsczogeyBlcnJvcjogJ05vIElQIHByb3ZpZGVkJyB9XHJcbiAgICB9O1xyXG4gIH1cclxuICBcclxuICAvLyBVc2UgSVBpbmZvIEFQSSB0byBjaGVjayBpZiBJUCBpcyBmcm9tIFZQTi9wcm94eVxyXG4gIC8vIFlvdSBzaG91bGQgcmVnaXN0ZXIgZm9yIGFuIEFQSSBrZXkgYXQgaHR0cHM6Ly9pcGluZm8uaW8vXHJcbiAgY29uc3QgYXBpS2V5ID0gcHJvY2Vzcy5lbnYuSVBJTkZPX0FQSV9LRVkgfHwgJyc7XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0PElQSW5mb1Jlc3BvbnNlPihcclxuICAgICAgYGh0dHBzOi8vaXBpbmZvLmlvLyR7aXB9L3ByaXZhY3k/dG9rZW49JHthcGlLZXl9YFxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlzVlBOOiBkYXRhLnZwbiB8fCBmYWxzZSxcclxuICAgICAgaXNQcm94eTogZGF0YS5wcm94eSB8fCBmYWxzZSxcclxuICAgICAgaXNUb3I6IGRhdGEudG9yIHx8IGZhbHNlLFxyXG4gICAgICBpc0hvc3Rpbmc6IGRhdGEuaG9zdGluZyB8fCBmYWxzZSxcclxuICAgICAgZGV0YWlsczogZGF0YVxyXG4gICAgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGV0ZWN0aW5nIFZQTjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpc1ZQTjogZmFsc2UsXHJcbiAgICAgIGlzUHJveHk6IGZhbHNlLFxyXG4gICAgICBpc1RvcjogZmFsc2UsXHJcbiAgICAgIGlzSG9zdGluZzogZmFsc2UsXHJcbiAgICAgIGRldGFpbHM6IHsgZXJyb3I6ICdGYWlsZWQgdG8gZGV0ZWN0IFZQTiBzdGF0dXMnIH1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQWx0ZXJuYXRpdmUgZnVuY3Rpb24gdXNpbmcgSVAtQVBJLmNvbSAoZnJlZSB0aWVyIGhhcyBsaW1pdGF0aW9ucylcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZXRlY3RWUE5XaXRoSVBBUEkoaXA6IHN0cmluZyB8IG51bGwpOiBQcm9taXNlPHtcclxuICBpc1ZQTjogYm9vbGVhbjtcclxuICBkZXRhaWxzOiBhbnk7XHJcbn0+IHtcclxuICBpZiAoIWlwKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpc1ZQTjogZmFsc2UsXHJcbiAgICAgIGRldGFpbHM6IHsgZXJyb3I6ICdObyBJUCBwcm92aWRlZCcgfVxyXG4gICAgfTtcclxuICB9XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KFxyXG4gICAgICBgaHR0cDovL2lwLWFwaS5jb20vanNvbi8ke2lwfT9maWVsZHM9c3RhdHVzLG1lc3NhZ2UscHJveHksaG9zdGluZ2BcclxuICAgICk7XHJcbiAgICBcclxuICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgXHJcbiAgICBpZiAoZGF0YS5zdGF0dXMgPT09ICdzdWNjZXNzJykge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlzVlBOOiBkYXRhLnByb3h5IHx8IGRhdGEuaG9zdGluZyB8fCBmYWxzZSxcclxuICAgICAgICBkZXRhaWxzOiBkYXRhXHJcbiAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlzVlBOOiBmYWxzZSxcclxuICAgICAgICBkZXRhaWxzOiB7IGVycm9yOiBkYXRhLm1lc3NhZ2UgfHwgJ0FQSSBjYWxsIGZhaWxlZCcgfVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZXRlY3RpbmcgVlBOIHdpdGggSVAtQVBJOicsIGVycm9yKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlzVlBOOiBmYWxzZSxcclxuICAgICAgZGV0YWlsczogeyBlcnJvcjogJ0ZhaWxlZCB0byBkZXRlY3QgVlBOIHN0YXR1cycgfVxyXG4gICAgfTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiYXhpb3MiLCJkZXRlY3RWUE4iLCJpcCIsImlzVlBOIiwiaXNQcm94eSIsImlzVG9yIiwiaXNIb3N0aW5nIiwiZGV0YWlscyIsImVycm9yIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIklQSU5GT19BUElfS0VZIiwicmVzcG9uc2UiLCJnZXQiLCJkYXRhIiwidnBuIiwicHJveHkiLCJ0b3IiLCJob3N0aW5nIiwiY29uc29sZSIsImRldGVjdFZQTldpdGhJUEFQSSIsInN0YXR1cyIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/lib/vpn-detection.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/verify/captcha.ts":
/*!*****************************************!*\
  !*** ./src/pages/api/verify/captcha.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var _lib_captcha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/captcha */ \"(api)/./src/lib/captcha.ts\");\n/* harmony import */ var _lib_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/metadata */ \"(api)/./src/lib/metadata.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/prisma */ \"(api)/./src/lib/prisma.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_0__, _lib_captcha__WEBPACK_IMPORTED_MODULE_1__, _lib_metadata__WEBPACK_IMPORTED_MODULE_2__]);\n([uuid__WEBPACK_IMPORTED_MODULE_0__, _lib_captcha__WEBPACK_IMPORTED_MODULE_1__, _lib_metadata__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { token, projectId, uid, clientMetadata, answers } = req.body;\n        if (!token || !projectId || !uid) {\n            return res.status(400).json({\n                success: false,\n                message: \"Missing required fields\"\n            });\n        }\n        // Verify CAPTCHA token\n        const isValidCaptcha = await (0,_lib_captcha__WEBPACK_IMPORTED_MODULE_1__.verifyCaptcha)(token);\n        if (!isValidCaptcha) {\n            return res.status(400).json({\n                success: false,\n                message: \"CAPTCHA validation failed\"\n            });\n        }\n        // Get the survey link\n        const surveyLink = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.surveyLink.findFirst({\n            where: {\n                projectId,\n                uid,\n                status: \"PENDING\"\n            },\n            include: {\n                project: true\n            }\n        });\n        if (!surveyLink) {\n            return res.status(404).json({\n                success: false,\n                message: \"Survey link not found or already used\"\n            });\n        }\n        // Collect server-side metadata\n        const serverMetadata = (0,_lib_metadata__WEBPACK_IMPORTED_MODULE_2__.collectMetadata)(req);\n        // Enhance metadata with VPN detection\n        const enhancedMetadata = await (0,_lib_metadata__WEBPACK_IMPORTED_MODULE_2__.enhanceMetadataWithVPNDetection)(serverMetadata);\n        // Merge with client metadata\n        const mergedMetadata = {\n            ...enhancedMetadata,\n            timezone: clientMetadata?.timezone || null,\n            fingerprint: clientMetadata?.fingerprint || null\n        };\n        // Check for anomalies in metadata\n        const { isBot, reasons } = (0,_lib_metadata__WEBPACK_IMPORTED_MODULE_2__.detectAnomalies)(mergedMetadata);\n        // If bot is detected, flag the link\n        if (isBot) {\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.flag.create({\n                data: {\n                    surveyLinkId: surveyLink.id,\n                    projectId: surveyLink.projectId,\n                    reason: `Bot detection: ${reasons.join(\", \")}`,\n                    metadata: JSON.stringify(mergedMetadata)\n                }\n            });\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.surveyLink.update({\n                where: {\n                    id: surveyLink.id\n                },\n                data: {\n                    status: \"FLAGGED\"\n                }\n            });\n            return res.status(400).json({\n                success: false,\n                message: \"Suspicious activity detected\"\n            });\n        }\n        // Store the user's answers to pre-survey questions\n        if (answers && answers.length > 0) {\n            for (const answer of answers){\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.response.create({\n                    data: {\n                        surveyLinkId: surveyLink.id,\n                        projectId: surveyLink.projectId,\n                        questionId: answer.questionId,\n                        answer: answer.value,\n                        metadata: JSON.stringify(mergedMetadata)\n                    }\n                });\n            }\n        }\n        // Create a session token for mid-survey validation\n        const sessionToken = (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)();\n        // Return success response with original URL and session token\n        return res.status(200).json({\n            success: true,\n            originalUrl: surveyLink.originalUrl,\n            sessionToken\n        });\n    } catch (error) {\n        console.error(\"Error verifying captcha:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Internal server error\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/verify/captcha.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fverify%2Fcaptcha&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cverify%5Ccaptcha.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();