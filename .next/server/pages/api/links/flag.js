"use strict";(()=>{var e={};e.id=513,e.ids=[513],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1534:e=>{e.exports=import("aws-amplify/api")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},4690:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.r(t),a.d(t,{config:()=>u,default:()=>o,routeModule:()=>c});var n=a(1802),s=a(7153),d=a(6249),i=a(2064),l=e([i]);i=(l.then?(await l)():l)[0];let o=(0,d.l)(i,"default"),u=(0,d.l)(i,"config"),c=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/links/flag",pathname:"/api/links/flag",bundlePath:"",filename:""},userland:i});r()}catch(e){r(e)}})},5746:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.d(t,{K:()=>o});var n=a(1534),s=e([n]);n=(s.then?(await s)():s)[0];let d=(0,n.generateClient)({authMode:"apiKey"}),i=e=>e.data,l=(e,t)=>{let a={operation:t,name:e instanceof Error?e.name:"UnknownError",message:e instanceof Error?e.message:"Unknown error occurred",details:e};throw"object"==typeof e&&null!==e&&"code"in e&&(a.code=String(e.code)),console.error(`Amplify Error (${t}):`,a),e},o={client:d,projects:{create:async e=>{try{let t=await d.models.Project.create(e);return{data:i(t)}}catch(e){l(e,"projects.create")}},get:async e=>{let t=await d.models.Project.get({id:e});return{data:i(t)}},list:async e=>({data:(await d.models.Project.list(e)).data||[]}),update:async(e,t)=>{let a=await d.models.Project.update({id:e,...t});return{data:i(a)}},delete:async e=>{let t=await d.models.Project.delete({id:e});return{data:i(t)}},getWithRelations:async e=>{let t=await d.models.Project.get({id:e});if(t.data){let a=await d.models.SurveyLink.list({filter:{projectId:{eq:e}}}),r=(await d.models.ProjectVendor.list({filter:{projectId:{eq:e}}})).data.map(e=>e.vendorId).filter(e=>null!=e),n=[];r.length>0&&(n=(await Promise.all(r.map(e=>d.models.Vendor.get({id:e})))).filter(e=>null!==e.data).map(e=>e.data));let s=await d.models.Question.list({filter:{projectId:{eq:e}}});return{data:{...t.data,surveyLinks:a.data||[],vendors:n,questions:s.data||[]}}}return{data:null}}},surveyLinks:{create:async e=>{let t=await d.models.SurveyLink.create(e);return{data:i(t)}},get:async e=>{let t=await d.models.SurveyLink.get({id:e});return{data:i(t)}},getByUid:async e=>{let t=await d.models.SurveyLink.list({filter:{uid:{eq:e}}});return{data:t.data&&t.data.length>0?t.data[0]:null}},update:async(e,t)=>{let a=await d.models.SurveyLink.update({id:e,...t});return{data:i(a)}},list:async e=>({data:(await d.models.SurveyLink.list(e)).data||[]}),listByProject:async e=>({data:(await d.models.SurveyLink.list({filter:{projectId:{eq:e}}})).data||[]}),delete:async e=>{let t=await d.models.SurveyLink.delete({id:e});return{data:i(t)}}},vendors:{create:async e=>{let t=await d.models.Vendor.create(e);return{data:i(t)}},get:async e=>{let t=await d.models.Vendor.get({id:e});return{data:i(t)}},list:async e=>({data:(await d.models.Vendor.list(e)).data||[]}),listByProject:async e=>{let t=(await d.models.ProjectVendor.list({filter:{projectId:{eq:e}}})).data.map(e=>e.vendorId).filter(e=>null!=e);return t.length>0?{data:(await Promise.all(t.map(e=>d.models.Vendor.get({id:e})))).filter(e=>null!==e.data).map(e=>e.data)}:{data:[]}},update:async(e,t)=>{let a=await d.models.Vendor.update({id:e,...t});return{data:i(a)}},delete:async e=>{let t=await d.models.Vendor.delete({id:e});return{data:i(t)}}},questions:{create:async e=>{let t=await d.models.Question.create(e);return{data:i(t)}},get:async e=>{let t=await d.models.Question.get({id:e});return{data:i(t)}},list:async e=>({data:(await d.models.Question.list(e)).data||[]}),listByProject:async e=>({data:(await d.models.Question.list({filter:{projectId:{eq:e}}})).data||[]}),update:async(e,t)=>{let a=await d.models.Question.update({id:e,...t});return{data:i(a)}},delete:async e=>{let t=await d.models.Question.delete({id:e});return{data:i(t)}}},transaction:{execute:async e=>{let t=[];for(let a of e){let e=await a;t.push(e)}return t}}};r()}catch(e){r(e)}})},2064:(e,t,a)=>{a.a(e,async(e,r)=>{try{a.r(t),a.d(t,{default:()=>d});var n=a(5746),s=e([n]);async function d(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method not allowed"});try{let{projectId:a,uid:r,token:s,reason:d,metadata:i}=e.body;if(!a||!r||!d)return t.status(400).json({success:!1,message:"Missing required fields"});let l=await n.K.surveyLinks.getByUid(r),o=l?.data;if(!o)return t.status(404).json({success:!1,message:"Survey link not found"});if(!o.id)throw Error("Survey link ID is null or undefined");let u={...o.metadata?"string"==typeof o.metadata?JSON.parse(o.metadata):o.metadata:{},flagged:!0,flagReason:d,flaggedAt:new Date().toISOString(),...i||{}};return await n.K.surveyLinks.update(o.id,{status:"FLAGGED",metadata:JSON.stringify(u)}),t.status(200).json({success:!0,message:"Survey response flagged successfully"})}catch(e){return console.error("Error flagging survey:",e),t.status(500).json({success:!1,message:"Internal server error"})}}n=(s.then?(await s)():s)[0],r()}catch(e){r(e)}})},7153:(e,t)=>{var a;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return a}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(a||(a={}))},1802:(e,t,a)=>{e.exports=a(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var a=t(t.s=4690);module.exports=a})();