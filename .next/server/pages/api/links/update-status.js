"use strict";(()=>{var e={};e.id=9502,e.ids=[9502],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5838:e=>{e.exports=import("aws-amplify")},1315:(e,t,s)=>{s.a(e,async(e,a)=>{try{s.r(t),s.d(t,{config:()=>l,default:()=>u,routeModule:()=>c});var r=s(1802),n=s(7153),o=s(6249),i=s(7792),d=e([i]);i=(d.then?(await d)():d)[0];let u=(0,o.l)(i,"default"),l=(0,o.l)(i,"config"),c=new r.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/links/update-status",pathname:"/api/links/update-status",bundlePath:"",filename:""},userland:i});a()}catch(e){a(e)}})},7792:(e,t,s)=>{s.a(e,async(e,a)=>{try{s.r(t),s.d(t,{default:()=>o});var r=s(9519),n=e([r]);async function o(e,t){if(t.setHeader("Access-Control-Allow-Origin","*"),t.setHeader("Access-Control-Allow-Methods","POST, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===e.method)return t.status(200).end();if("POST"!==e.method)return t.status(405).json({success:!1,message:"Method not allowed"});try{let s=(0,r.j)(),{projectId:a,uid:n,status:o,vendorId:i,metadata:d,token:u,questionId:l,answer:c}=e.body;if(!a||!n||!o)return t.status(400).json({success:!1,message:"Missing required fields"});let p=["PENDING","STARTED","IN_PROGRESS","COMPLETED","QUOTA_FULL","DISQUALIFIED","FLAGGED"];if(!p.includes(o))return t.status(400).json({success:!1,message:`Invalid status. Valid values are: ${p.join(", ")}`});let f=(await s.getSurveyLinkByUid(n)).data;if(!f)return t.status(404).json({success:!1,message:"Survey link not found"});if(f.projectId!==a)return t.status(400).json({success:!1,message:"Survey link does not belong to the specified project"});let g={status:o,updatedAt:new Date().toISOString()};if(i&&i!==f.vendorId){if(!(await s.listProjectVendors(a)).data.find(e=>e.vendorId===i))return t.status(400).json({success:!1,message:"Vendor not found or does not belong to this project"});g.vendorId=i}if(!f.id)throw Error("Survey link ID is null or undefined");await s.updateSurveyLink(f.id,g);let m=null;if(f.vendorId||g.vendorId){let e=g.vendorId||f.vendorId;if(e){let t=(await s.getVendor(e)).data;if(t?.settings)try{m=JSON.parse(t.settings).code||null}catch(e){console.error("Error parsing vendor settings:",e)}}}if(d){let e=f.metadata?JSON.parse(f.metadata):{},t={...e,responses:[...e.responses||[],{timestamp:new Date().toISOString(),status:o,questionId:l||"00000000-0000-0000-0000-000000000000",answer:c||null,metadata:{statusUpdateTimestamp:new Date().toISOString(),previousStatus:f.status,...d||{}}}]};await s.updateSurveyLink(f.id,{metadata:JSON.stringify(t)})}return t.status(200).json({success:!0,message:`Survey link status updated to ${o}`,updatedLink:{uid:f.uid,status:o,vendor:m}})}catch(e){return console.error("Error updating survey link status:",e),t.status(500).json({success:!1,message:"Internal server error"})}}r=(n.then?(await n)():n)[0],a()}catch(e){a(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var s=e=>t(t.s=e),a=t.X(0,[6504],()=>s(1315));module.exports=a})();