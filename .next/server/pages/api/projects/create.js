"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/projects/create";
exports.ids = ["pages/api/projects/create"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "aws-amplify":
/*!******************************!*\
  !*** external "aws-amplify" ***!
  \******************************/
/***/ ((module) => {

module.exports = import("aws-amplify");;

/***/ }),

/***/ "aws-amplify/api":
/*!**********************************!*\
  !*** external "aws-amplify/api" ***!
  \**********************************/
/***/ ((module) => {

module.exports = import("aws-amplify/api");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprojects%2Fcreate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cprojects%5Ccreate.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprojects%2Fcreate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cprojects%5Ccreate.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\projects\\create.ts */ \"(api)/./src/pages/api/projects/create.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/projects/create\",\n        pathname: \"/api/projects/create\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_projects_create_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnByb2plY3RzJTJGY3JlYXRlJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNwcm9qZWN0cyU1Q2NyZWF0ZS50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNtRTtBQUNuRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsOERBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDhEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvPzBjZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyY1xcXFxwYWdlc1xcXFxhcGlcXFxccHJvamVjdHNcXFxcY3JlYXRlLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvamVjdHMvY3JlYXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcHJvamVjdHMvY3JlYXRlXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprojects%2Fcreate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cprojects%5Ccreate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/amplify-config.ts":
/*!***********************************!*\
  !*** ./src/lib/amplify-config.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADMIN_DOMAIN: () => (/* binding */ ADMIN_DOMAIN),\n/* harmony export */   MAIN_DOMAIN: () => (/* binding */ MAIN_DOMAIN),\n/* harmony export */   amplifyConfig: () => (/* binding */ amplifyConfig),\n/* harmony export */   configureAmplify: () => (/* binding */ configureAmplify)\n/* harmony export */ });\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify__WEBPACK_IMPORTED_MODULE_0__]);\naws_amplify__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nlet configurationDone = false;\n// Domain configuration\nconst MAIN_DOMAIN = \"protegeresearchsurvey.com\" || 0;\nconst ADMIN_DOMAIN = \"admin.protegeresearchsurvey.com\" || 0;\n// Explicitly set Cognito User Pool ID\nconst COGNITO_USER_POOL_ID = \"us-east-1_QIwwMdokt\";\n/**\r\n * Configure Amplify with the right settings\r\n */ function configureAmplify() {\n    if (configurationDone) {\n        return; // Avoid multiple configurations\n    }\n    let amplifyOutputs = null;\n    // For server-side code\n    if (true) {\n        try {\n            // Use dynamic imports for Node.js-only modules\n            const fs = __webpack_require__(/*! fs */ \"fs\");\n            const path = __webpack_require__(/*! path */ \"path\");\n            const possiblePaths = [\n                path.join(process.cwd(), \"amplify_outputs.json\"),\n                path.join(process.cwd(), \".amplify\", \"amplify_outputs.json\"),\n                path.join(process.cwd(), \"src\", \"amplify_outputs.json\")\n            ];\n            for (const possiblePath of possiblePaths){\n                if (fs.existsSync(possiblePath)) {\n                    const outputsContent = fs.readFileSync(possiblePath, \"utf8\");\n                    amplifyOutputs = JSON.parse(outputsContent);\n                    break;\n                }\n            }\n        } catch (error) {\n            console.warn(\"Failed to load amplify_outputs.json:\", error);\n        }\n    }\n    // If no outputs file was found or in browser context, use environment variables\n    // but prioritize our explicit Cognito User Pool ID\n    if (!amplifyOutputs) {\n        console.log(\"Using environment variables for Amplify configuration\");\n        amplifyOutputs = {\n            auth: {\n                userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\",\n                userPoolClientId: \"2nv3n1cco1867elirafvr6uu1e\",\n                identityPoolId: \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\",\n                region: \"us-east-1\"\n            },\n            api: {\n                endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\",\n                region: \"us-east-1\" || 0\n            }\n        };\n    } else {\n        // Ensure the User Pool ID is set even if we found an outputs file\n        amplifyOutputs.auth = {\n            ...amplifyOutputs.auth,\n            userPoolId: COGNITO_USER_POOL_ID || amplifyOutputs.auth?.userPoolId\n        };\n    }\n    // Get the region from outputs or environment variables\n    const region = \"us-east-1\"; // Hardcoded to match the User Pool ID region\n    // Configure Amplify with the retrieved settings\n    try {\n        const config = {\n            // Auth Configuration\n            Auth: {\n                Cognito: {\n                    userPoolId: COGNITO_USER_POOL_ID || amplifyOutputs.auth?.userPoolId || \"\",\n                    userPoolClientId: amplifyOutputs.auth?.userPoolClientId || \"\",\n                    identityPoolId: amplifyOutputs.auth?.identityPoolId || \"\"\n                }\n            },\n            // API Configuration for GraphQL\n            API: {\n                GraphQL: {\n                    endpoint: amplifyOutputs.api?.endpoint || \"\",\n                    region: amplifyOutputs.api?.region || region,\n                    defaultAuthMode: \"userPool\"\n                }\n            }\n        };\n        // Add region at root level for Amplify v6\n        config.region = region;\n        // Apply configuration\n        aws_amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify.configure(config);\n        configurationDone = true;\n        console.log(\"Amplify configured with User Pool ID:\", COGNITO_USER_POOL_ID);\n    } catch (error) {\n        console.error(\"Error configuring Amplify:\", error);\n    }\n}\n// Export the raw Amplify config for use elsewhere\nconst amplifyConfig = {\n    Auth: {\n        Cognito: {\n            userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\" || 0,\n            userPoolClientId: \"2nv3n1cco1867elirafvr6uu1e\" || 0,\n            identityPoolId: \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\" || 0\n        }\n    },\n    API: {\n        GraphQL: {\n            endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\" || 0,\n            region: \"us-east-1\" || 0,\n            defaultAuthMode: \"userPool\"\n        }\n    },\n    // Domain configuration\n    domains: {\n        main: MAIN_DOMAIN,\n        admin: ADMIN_DOMAIN\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/amplify-config.ts\n");

/***/ }),

/***/ "(api)/./src/lib/amplify-data-service.ts":
/*!*****************************************!*\
  !*** ./src/lib/amplify-data-service.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   amplifyDataService: () => (/* binding */ amplifyDataService)\n/* harmony export */ });\n/* harmony import */ var aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify/api */ \"aws-amplify/api\");\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\n/* harmony import */ var _amplify_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./amplify-config */ \"(api)/./src/lib/amplify-config.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_1__, _amplify_config__WEBPACK_IMPORTED_MODULE_2__]);\n([aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_1__, _amplify_config__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Initialize Amplify with type assertion to avoid type errors\naws_amplify__WEBPACK_IMPORTED_MODULE_1__.Amplify.configure(_amplify_config__WEBPACK_IMPORTED_MODULE_2__.amplifyConfig);\n// Generate a type-safe client for data operations\nconst client = (0,aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__.generateClient)();\n// Helper to safely unwrap data from Amplify responses\nconst unwrapData = (result)=>result.data;\n/**\r\n * Amplify Data Service - Replaces Prisma client with AWS Amplify data operations\r\n * This service provides CRUD operations for all models in the application\r\n */ const amplifyDataService = {\n    // Project operations\n    projects: {\n        create: async (data)=>{\n            const result = await client.models.Project.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Project.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Project.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Project.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Project.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        getWithRelations: async (id)=>{\n            // Fix: Remove problematic selection set and handle relationships separately\n            const project = await client.models.Project.get({\n                id\n            });\n            if (project.data) {\n                // Fetch related data separately to avoid deep type instantiation\n                const surveyLinks = await client.models.SurveyLink.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                const vendors = await client.models.Vendor.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                const questions = await client.models.Question.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                // Combine project with its related data\n                return {\n                    data: {\n                        ...project.data,\n                        surveyLinks: surveyLinks.data || [],\n                        vendors: vendors.data || [],\n                        questions: questions.data || []\n                    }\n                };\n            }\n            return {\n                data: null\n            };\n        }\n    },\n    // SurveyLink operations\n    surveyLinks: {\n        create: async (data)=>{\n            const result = await client.models.SurveyLink.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.SurveyLink.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        getByUid: async (uid)=>{\n            const results = await client.models.SurveyLink.list({\n                filter: {\n                    uid: {\n                        eq: uid\n                    }\n                }\n            });\n            return {\n                data: results.data && results.data.length > 0 ? results.data[0] : null\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.SurveyLink.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.SurveyLink.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.SurveyLink.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.SurveyLink.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Vendor operations\n    vendors: {\n        create: async (data)=>{\n            const result = await client.models.Vendor.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Vendor.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Vendor.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Vendor.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Vendor.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Vendor.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Question operations\n    questions: {\n        create: async (data)=>{\n            const result = await client.models.Question.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Question.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Question.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Question.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Question.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Question.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Response operations\n    responses: {\n        create: async (data)=>{\n            const result = await client.models.Response.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Response.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Response.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Response.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        listBySurveyLink: async (surveyLinkId)=>{\n            const result = await client.models.Response.list({\n                filter: {\n                    surveyLinkId: {\n                        eq: surveyLinkId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Response.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Flag operations\n    flags: {\n        create: async (data)=>{\n            const result = await client.models.Flag.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Flag.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Flag.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Flag.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        listBySurveyLink: async (surveyLinkId)=>{\n            const result = await client.models.Flag.list({\n                filter: {\n                    surveyLinkId: {\n                        eq: surveyLinkId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Flag.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Helper for transactions (not directly supported in Amplify Data, using batch operations)\n    transaction: {\n        execute: async (operations)=>{\n            // Execute operations in sequence\n            const results = [];\n            for (const operation of operations){\n                const result = await operation;\n                results.push(result);\n            }\n            return results;\n        }\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/amplify-data-service.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/projects/create.ts":
/*!******************************************!*\
  !*** ./src/pages/api/projects/create.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/amplify-data-service */ \"(api)/./src/lib/amplify-data-service.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { name, description, questions } = req.body;\n        if (!name) {\n            return res.status(400).json({\n                success: false,\n                message: \"Project name is required\"\n            });\n        }\n        // Create a new project using Amplify Data service\n        const projectResult = await _lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__.amplifyDataService.projects.create({\n            name,\n            description: description || \"\"\n        });\n        // Check if projectResult is null before accessing its properties\n        if (!projectResult || projectResult.data === null) {\n            return res.status(500).json({\n                success: false,\n                message: \"Failed to create project. Project creation returned null.\"\n            });\n        }\n        // Add questions if provided\n        if (questions && Array.isArray(questions) && questions.length > 0) {\n            const projectId = projectResult.data.id;\n            const questionPromises = questions.map((q)=>_lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__.amplifyDataService.questions.create({\n                    projectId,\n                    text: q.text,\n                    options: JSON.stringify(q.options || [])\n                }));\n            await Promise.all(questionPromises);\n        }\n        return res.status(201).json({\n            success: true,\n            message: \"Project created successfully\",\n            project: projectResult.data\n        });\n    } catch (error) {\n        console.error(\"Error creating project:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Failed to create project. Please ensure you are authenticated and have correct permissions.\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3Byb2plY3RzL2NyZWF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNnRTtBQUVqRCxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDOUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFFLEdBQUdSLElBQUlTLElBQUk7UUFFakQsSUFBSSxDQUFDSCxNQUFNO1lBQ1QsT0FBT0wsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJNLFNBQVM7Z0JBQ1RMLFNBQVM7WUFDWDtRQUNGO1FBRUEsa0RBQWtEO1FBQ2xELE1BQU1NLGdCQUFnQixNQUFNYix5RUFBa0JBLENBQUNjLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDO1lBQzdEUDtZQUNBQyxhQUFhQSxlQUFlO1FBQzlCO1FBRUEsaUVBQWlFO1FBQ2pFLElBQUksQ0FBQ0ksaUJBQWlCQSxjQUFjRyxJQUFJLEtBQUssTUFBTTtZQUNqRCxPQUFPYixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQk0sU0FBUztnQkFDVEwsU0FBUztZQUNYO1FBQ0Y7UUFFQSw0QkFBNEI7UUFDNUIsSUFBSUcsYUFBYU8sTUFBTUMsT0FBTyxDQUFDUixjQUFjQSxVQUFVUyxNQUFNLEdBQUcsR0FBRztZQUNqRSxNQUFNQyxZQUFZUCxjQUFjRyxJQUFJLENBQUNLLEVBQUU7WUFDdkMsTUFBTUMsbUJBQW1CWixVQUFVYSxHQUFHLENBQUMsQ0FBQ0MsSUFDdEN4Qix5RUFBa0JBLENBQUNVLFNBQVMsQ0FBQ0ssTUFBTSxDQUFDO29CQUNsQ0s7b0JBQ0FLLE1BQU1ELEVBQUVDLElBQUk7b0JBQ1pDLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQ0osRUFBRUUsT0FBTyxJQUFJLEVBQUU7Z0JBQ3pDO1lBR0YsTUFBTUcsUUFBUUMsR0FBRyxDQUFDUjtRQUNwQjtRQUVBLE9BQU9uQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCTSxTQUFTO1lBQ1RMLFNBQVM7WUFDVHdCLFNBQVNsQixjQUFjRyxJQUFJO1FBQzdCO0lBQ0YsRUFBRSxPQUFPZ0IsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPN0IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQk0sU0FBUztZQUNUTCxTQUFTO1FBQ1g7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VydmV5LWxpbmstd3JhcHBlci8uL3NyYy9wYWdlcy9hcGkvcHJvamVjdHMvY3JlYXRlLnRzPzRkNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgeyBhbXBsaWZ5RGF0YVNlcnZpY2UgfSBmcm9tICdAL2xpYi9hbXBsaWZ5LWRhdGEtc2VydmljZSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBuYW1lLCBkZXNjcmlwdGlvbiwgcXVlc3Rpb25zIH0gPSByZXEuYm9keTtcclxuXHJcbiAgICBpZiAoIW5hbWUpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxyXG4gICAgICAgIG1lc3NhZ2U6ICdQcm9qZWN0IG5hbWUgaXMgcmVxdWlyZWQnIFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgYSBuZXcgcHJvamVjdCB1c2luZyBBbXBsaWZ5IERhdGEgc2VydmljZVxyXG4gICAgY29uc3QgcHJvamVjdFJlc3VsdCA9IGF3YWl0IGFtcGxpZnlEYXRhU2VydmljZS5wcm9qZWN0cy5jcmVhdGUoe1xyXG4gICAgICBuYW1lLFxyXG4gICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24gfHwgJycsXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBwcm9qZWN0UmVzdWx0IGlzIG51bGwgYmVmb3JlIGFjY2Vzc2luZyBpdHMgcHJvcGVydGllc1xyXG4gICAgaWYgKCFwcm9qZWN0UmVzdWx0IHx8IHByb2plY3RSZXN1bHQuZGF0YSA9PT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gY3JlYXRlIHByb2plY3QuIFByb2plY3QgY3JlYXRpb24gcmV0dXJuZWQgbnVsbC4nXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEFkZCBxdWVzdGlvbnMgaWYgcHJvdmlkZWRcclxuICAgIGlmIChxdWVzdGlvbnMgJiYgQXJyYXkuaXNBcnJheShxdWVzdGlvbnMpICYmIHF1ZXN0aW9ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IHByb2plY3RJZCA9IHByb2plY3RSZXN1bHQuZGF0YS5pZDtcclxuICAgICAgY29uc3QgcXVlc3Rpb25Qcm9taXNlcyA9IHF1ZXN0aW9ucy5tYXAoKHE6IHsgdGV4dDogc3RyaW5nLCBvcHRpb25zOiBzdHJpbmdbXSB9KSA9PiBcclxuICAgICAgICBhbXBsaWZ5RGF0YVNlcnZpY2UucXVlc3Rpb25zLmNyZWF0ZSh7XHJcbiAgICAgICAgICBwcm9qZWN0SWQsXHJcbiAgICAgICAgICB0ZXh0OiBxLnRleHQsXHJcbiAgICAgICAgICBvcHRpb25zOiBKU09OLnN0cmluZ2lmeShxLm9wdGlvbnMgfHwgW10pXHJcbiAgICAgICAgfSlcclxuICAgICAgKTtcclxuICAgICAgXHJcbiAgICAgIGF3YWl0IFByb21pc2UuYWxsKHF1ZXN0aW9uUHJvbWlzZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIG1lc3NhZ2U6ICdQcm9qZWN0IGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5JyxcclxuICAgICAgcHJvamVjdDogcHJvamVjdFJlc3VsdC5kYXRhXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgcHJvamVjdDonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBcclxuICAgICAgc3VjY2VzczogZmFsc2UsIFxyXG4gICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGNyZWF0ZSBwcm9qZWN0LiBQbGVhc2UgZW5zdXJlIHlvdSBhcmUgYXV0aGVudGljYXRlZCBhbmQgaGF2ZSBjb3JyZWN0IHBlcm1pc3Npb25zLicgXHJcbiAgICB9KTtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiYW1wbGlmeURhdGFTZXJ2aWNlIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwibmFtZSIsImRlc2NyaXB0aW9uIiwicXVlc3Rpb25zIiwiYm9keSIsInN1Y2Nlc3MiLCJwcm9qZWN0UmVzdWx0IiwicHJvamVjdHMiLCJjcmVhdGUiLCJkYXRhIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwicHJvamVjdElkIiwiaWQiLCJxdWVzdGlvblByb21pc2VzIiwibWFwIiwicSIsInRleHQiLCJvcHRpb25zIiwiSlNPTiIsInN0cmluZ2lmeSIsIlByb21pc2UiLCJhbGwiLCJwcm9qZWN0IiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/projects/create.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fprojects%2Fcreate&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cprojects%5Ccreate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();