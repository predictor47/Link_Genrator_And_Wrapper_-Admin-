"use strict";(()=>{var e={};e.id=6533,e.ids=[6533],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5838:e=>{e.exports=import("aws-amplify")},5043:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{config:()=>d,default:()=>c,routeModule:()=>l});var o=s(1802),a=s(7153),n=s(6249),i=s(837),u=e([i]);i=(u.then?(await u)():u)[0];let c=(0,n.l)(i,"default"),d=(0,n.l)(i,"config"),l=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/projects/[id]/questions",pathname:"/api/projects/[id]/questions",bundlePath:"",filename:""},userland:i});r()}catch(e){r(e)}})},837:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{default:()=>n});var o=s(9519),a=e([o]);async function n(e,t){let{id:s}=e.query;if("string"!=typeof s)return t.status(400).json({success:!1,message:"Invalid project ID"});if("GET"===e.method)try{let e=(0,o.j)(),r=(await e.listQuestionsByProject(s)).data.map(e=>{let t=[];try{t=JSON.parse(e.options?.toString()||"[]")}catch(t){console.error(`Error parsing options for question ${e.id}:`,t)}return{...e,options:t}}).sort((e,t)=>{let s=e.createdAt?new Date(e.createdAt).getTime():0;return(t.createdAt?new Date(t.createdAt).getTime():0)-s});return t.status(200).json({success:!0,questions:r})}catch(e){return console.error("Error fetching questions:",e),t.status(500).json({success:!1,message:"Failed to fetch questions"})}if("POST"===e.method)try{let r=(0,o.j)(),{text:a,options:n}=e.body;if(!a||!n||!Array.isArray(n)||n.length<2)return t.status(400).json({success:!1,message:"Question text and at least two options are required"});let i=JSON.stringify(n),u=await r.createQuestion({text:a,options:i,projectId:s,type:"multiple_choice",sequence:1});return t.status(201).json({success:!0,question:{...u.data,options:n}})}catch(e){return console.error("Error creating question:",e),t.status(500).json({success:!1,message:"Failed to create question"})}if("DELETE"===e.method)try{let s=(0,o.j)(),{questionId:r}=e.body;if(!r)return t.status(400).json({success:!1,message:"Question ID is required"});return await s.deleteQuestion(r),t.status(200).json({success:!0,message:"Question deleted successfully"})}catch(e){return console.error("Error deleting question:",e),t.status(500).json({success:!1,message:"Failed to delete question"})}return t.status(405).json({message:"Method not allowed"})}o=(a.then?(await a)():a)[0],r()}catch(e){r(e)}})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[6504],()=>s(5043));module.exports=r})();