"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/vendors/list";
exports.ids = ["pages/api/vendors/list"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "aws-amplify":
/*!******************************!*\
  !*** external "aws-amplify" ***!
  \******************************/
/***/ ((module) => {

module.exports = import("aws-amplify");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fvendors%2Flist.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fvendors%2Flist.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/vendors/list.ts */ \"(api)/./src/pages/api/vendors/list.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/vendors/list\",\n        pathname: \"/api/vendors/list\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnZlbmRvcnMlMkZsaXN0JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZ2ZW5kb3JzJTJGbGlzdC50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUM0RDtBQUM1RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMkRBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDJEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvP2Y3MTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvdmVuZG9ycy9saXN0LnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdmVuZG9ycy9saXN0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdmVuZG9ycy9saXN0XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fvendors%2Flist.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/amplify-server-service.ts":
/*!*******************************************!*\
  !*** ./src/lib/amplify-server-service.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAmplifyServerService: () => (/* binding */ getAmplifyServerService)\n/* harmony export */ });\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\n/* harmony import */ var _amplify_outputs_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../amplify_outputs.json */ \"(api)/./amplify_outputs.json\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify__WEBPACK_IMPORTED_MODULE_0__]);\naws_amplify__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Initialize Amplify\naws_amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify.configure(_amplify_outputs_json__WEBPACK_IMPORTED_MODULE_1__);\nclass AmplifyServerService {\n    constructor(){\n        this.apiEndpoint = _amplify_outputs_json__WEBPACK_IMPORTED_MODULE_1__.data.url;\n        this.apiKey = _amplify_outputs_json__WEBPACK_IMPORTED_MODULE_1__.data.api_key;\n    }\n    async makeGraphQLRequest(query, variables = {}) {\n        try {\n            const response = await fetch(this.apiEndpoint, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-api-key\": this.apiKey\n                },\n                body: JSON.stringify({\n                    query,\n                    variables\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const result = await response.json();\n            if (result.errors) {\n                console.error(`GraphQL errors:`, result.errors);\n            }\n            return result;\n        } catch (error) {\n            console.error(\"GraphQL request failed:\", error);\n            throw error;\n        }\n    }\n    // Project operations\n    async getProject(id) {\n        const query = `\n      query GetProject($id: ID!) {\n        getProject(id: $id) {\n          id\n          name\n          description\n          status\n          targetCompletions\n          currentCompletions\n          surveyUrl\n          settings\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            id\n        });\n        return {\n            data: result.data?.getProject || null\n        };\n    }\n    async listProjects() {\n        const query = `\n      query ListProjects {\n        listProjects {\n          items {\n            id\n            name\n            description\n            status\n            targetCompletions\n            currentCompletions\n            surveyUrl\n            settings\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query);\n        return {\n            data: result.data?.listProjects?.items || []\n        };\n    }\n    // Vendor operations\n    async getVendor(id) {\n        const query = `\n      query GetVendor($id: ID!) {\n        getVendor(id: $id) {\n          id\n          name\n          contactName\n          contactEmail\n          settings\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            id\n        });\n        return {\n            data: result.data?.getVendor || null\n        };\n    }\n    async listVendors(filter) {\n        const query = `\n      query ListVendors($filter: ModelVendorFilterInput) {\n        listVendors(filter: $filter) {\n          items {\n            id\n            name\n            contactName\n            contactEmail\n            settings\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        return {\n            data: result.data?.listVendors?.items || []\n        };\n    }\n    async createVendor(input) {\n        const query = `\n      mutation CreateVendor($input: CreateVendorInput!) {\n        createVendor(input: $input) {\n          id\n          name\n          contactName\n          contactEmail\n          settings\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.createVendor || null\n        };\n    }\n    async deleteVendor(input) {\n        const query = `\n      mutation DeleteVendor($input: DeleteVendorInput!) {\n        deleteVendor(input: $input) {\n          id\n          name\n          contactName\n          contactEmail\n          settings\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.deleteVendor || null\n        };\n    }\n    // SurveyLink operations\n    async createSurveyLink(input) {\n        const query = `\n      mutation CreateSurveyLink($input: CreateSurveyLinkInput!) {\n        createSurveyLink(input: $input) {\n          id\n          projectId\n          uid\n          vendorId\n          status\n          metadata\n          createdAt\n          updatedAt\n          clickedAt\n          completedAt\n          ipAddress\n          userAgent\n          geoData\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.createSurveyLink || null\n        };\n    }\n    async listSurveyLinksByProject(projectId) {\n        const query = `\n      query ListSurveyLinks($filter: ModelSurveyLinkFilterInput) {\n        listSurveyLinks(filter: $filter) {\n          items {\n            id\n            projectId\n            uid\n            vendorId\n            status\n            metadata\n            createdAt\n            updatedAt\n            clickedAt\n            completedAt\n            ipAddress\n            userAgent\n            geoData\n          }\n        }\n      }\n    `;\n        const filter = {\n            projectId: {\n                eq: projectId\n            }\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        return {\n            data: result.data?.listSurveyLinks?.items || []\n        };\n    }\n    async getSurveyLinkByUid(uid) {\n        const query = `\n      query ListSurveyLinks($filter: ModelSurveyLinkFilterInput) {\n        listSurveyLinks(filter: $filter) {\n          items {\n            id\n            projectId\n            uid\n            vendorId\n            status\n            metadata\n            createdAt\n            updatedAt\n            clickedAt\n            completedAt\n            ipAddress\n            userAgent\n            geoData\n          }\n        }\n      }\n    `;\n        const filter = {\n            uid: {\n                eq: uid\n            }\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        const items = result.data?.listSurveyLinks?.items || [];\n        return {\n            data: items.length > 0 ? items[0] : null\n        };\n    }\n    async updateSurveyLink(id, input) {\n        const query = `\n      mutation UpdateSurveyLink($input: UpdateSurveyLinkInput!) {\n        updateSurveyLink(input: $input) {\n          id\n          projectId\n          uid\n          vendorId\n          status\n          metadata\n          createdAt\n          updatedAt\n          clickedAt\n          completedAt\n          ipAddress\n          userAgent\n          geoData\n        }\n      }\n    `;\n        const updateInput = {\n            id,\n            ...input\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            input: updateInput\n        });\n        return {\n            data: result.data?.updateSurveyLink || null\n        };\n    }\n    // Question operations\n    async createQuestion(input) {\n        const query = `\n      mutation CreateQuestion($input: CreateQuestionInput!) {\n        createQuestion(input: $input) {\n          id\n          projectId\n          text\n          type\n          options\n          sequence\n          isRequired\n          isTrap\n          settings\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.createQuestion || null\n        };\n    }\n    async listQuestionsByProject(projectId) {\n        const query = `\n      query ListQuestions($filter: ModelQuestionFilterInput) {\n        listQuestions(filter: $filter) {\n          items {\n            id\n            projectId\n            text\n            type\n            options\n            sequence\n            isRequired\n            isTrap\n            settings\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `;\n        const filter = {\n            projectId: {\n                eq: projectId\n            }\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        return {\n            data: result.data?.listQuestions?.items || []\n        };\n    }\n    async deleteQuestion(id) {\n        const query = `\n      mutation DeleteQuestion($input: DeleteQuestionInput!) {\n        deleteQuestion(input: $input) {\n          id\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input: {\n                id\n            }\n        });\n        return {\n            data: result.data?.deleteQuestion || null\n        };\n    }\n    // Response operations\n    async createResponse(input) {\n        const query = `\n      mutation CreateResponse($input: CreateResponseInput!) {\n        createResponse(input: $input) {\n          id\n          surveyLinkId\n          questionId\n          answer\n          metadata\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.createResponse || null\n        };\n    }\n    async listResponsesBySurveyLink(surveyLinkId) {\n        const query = `\n      query ListResponses($filter: ModelResponseFilterInput) {\n        listResponses(filter: $filter) {\n          items {\n            id\n            surveyLinkId\n            questionId\n            answer\n            metadata\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `;\n        const filter = {\n            surveyLinkId: {\n                eq: surveyLinkId\n            }\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        return {\n            data: result.data?.listResponses?.items || []\n        };\n    }\n    // ProjectVendor operations\n    async listProjectVendors(filter) {\n        const query = `\n      query ListProjectVendors($filter: ModelProjectVendorFilterInput) {\n        listProjectVendors(filter: $filter) {\n          items {\n            id\n            projectId\n            vendorId\n            quota\n            currentCount\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `;\n        const result = await this.makeGraphQLRequest(query, {\n            filter\n        });\n        return {\n            data: result.data?.listProjectVendors?.items || []\n        };\n    }\n    async createProjectVendor(input) {\n        const query = `\n      mutation CreateProjectVendor($input: CreateProjectVendorInput!) {\n        createProjectVendor(input: $input) {\n          id\n          projectId\n          vendorId\n          quota\n          currentCount\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const createInput = {\n            projectId: input.projectId,\n            vendorId: input.vendorId,\n            quota: input.quota || 0,\n            currentCount: input.currentCount || 0\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            input: createInput\n        });\n        return {\n            data: result.data?.createProjectVendor || null\n        };\n    }\n    async updateProjectVendor(projectId, vendorId, updates) {\n        // First find the ProjectVendor record\n        const existingResult = await this.listProjectVendors({\n            and: [\n                {\n                    projectId: {\n                        eq: projectId\n                    }\n                },\n                {\n                    vendorId: {\n                        eq: vendorId\n                    }\n                }\n            ]\n        });\n        if (existingResult.data.length === 0) {\n            return {\n                data: null\n            };\n        }\n        const projectVendor = existingResult.data[0];\n        const query = `\n      mutation UpdateProjectVendor($input: UpdateProjectVendorInput!) {\n        updateProjectVendor(input: $input) {\n          id\n          projectId\n          vendorId\n          quota\n          currentCount\n          createdAt\n          updatedAt\n        }\n      }\n    `;\n        const input = {\n            id: projectVendor.id,\n            ...updates\n        };\n        const result = await this.makeGraphQLRequest(query, {\n            input\n        });\n        return {\n            data: result.data?.updateProjectVendor || null\n        };\n    }\n}\n// Create a singleton instance\nlet serverService = null;\nfunction getAmplifyServerService() {\n    if (!serverService) {\n        serverService = new AmplifyServerService();\n    }\n    return serverService;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/amplify-server-service.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/vendors/list.ts":
/*!***************************************!*\
  !*** ./src/pages/api/vendors/list.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_amplify_server_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/amplify-server-service */ \"(api)/./src/lib/amplify-server-service.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_amplify_server_service__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_amplify_server_service__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            success: false,\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { projectId } = req.query;\n        if (!projectId || typeof projectId !== \"string\") {\n            return res.status(400).json({\n                success: false,\n                message: \"Project ID is required\"\n            });\n        }\n        const amplifyServerService = (0,_lib_amplify_server_service__WEBPACK_IMPORTED_MODULE_0__.getAmplifyServerService)();\n        // Get vendors through ProjectVendor relationships\n        const projectVendorsResult = await amplifyServerService.listProjectVendors({\n            projectId: {\n                eq: projectId\n            }\n        });\n        if (!projectVendorsResult.data || projectVendorsResult.data.length === 0) {\n            return res.status(200).json({\n                success: true,\n                vendors: []\n            });\n        }\n        // Get vendor details for each ProjectVendor relationship\n        const vendorIds = projectVendorsResult.data.map((pv)=>pv.vendorId).filter((id)=>id !== null && id !== undefined);\n        if (vendorIds.length === 0) {\n            return res.status(200).json({\n                success: true,\n                vendors: []\n            });\n        }\n        const vendorsResult = await amplifyServerService.listVendors({\n            id: {\n                in: vendorIds\n            }\n        });\n        const vendors = vendorsResult.data.map((vendor)=>{\n            // Extract vendor code from settings if it exists\n            let vendorCode = \"\";\n            try {\n                const settings = vendor.settings ? JSON.parse(vendor.settings) : {};\n                vendorCode = settings.code || \"\";\n            } catch (e) {\n                vendorCode = \"\";\n            }\n            return {\n                id: vendor.id,\n                name: vendor.name || \"\",\n                code: vendorCode\n            };\n        });\n        return res.status(200).json({\n            success: true,\n            vendors: vendors\n        });\n    } catch (error) {\n        console.error(\"Error listing vendors:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Failed to list vendors\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3ZlbmRvcnMvbGlzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUN1RTtBQUV4RCxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7WUFBT0MsU0FBUztRQUFxQjtJQUM5RTtJQUVBLElBQUk7UUFDRixNQUFNLEVBQUVDLFNBQVMsRUFBRSxHQUFHUCxJQUFJUSxLQUFLO1FBRS9CLElBQUksQ0FBQ0QsYUFBYSxPQUFPQSxjQUFjLFVBQVU7WUFDL0MsT0FBT04sSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztnQkFBT0MsU0FBUztZQUF5QjtRQUNsRjtRQUVBLE1BQU1HLHVCQUF1Qlgsb0ZBQXVCQTtRQUVwRCxrREFBa0Q7UUFDbEQsTUFBTVksdUJBQXVCLE1BQU1ELHFCQUFxQkUsa0JBQWtCLENBQUM7WUFDekVKLFdBQVc7Z0JBQUVLLElBQUlMO1lBQVU7UUFDN0I7UUFFQSxJQUFJLENBQUNHLHFCQUFxQkcsSUFBSSxJQUFJSCxxQkFBcUJHLElBQUksQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7WUFDeEUsT0FBT2IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztnQkFBTVUsU0FBUyxFQUFFO1lBQUM7UUFDM0Q7UUFFQSx5REFBeUQ7UUFDekQsTUFBTUMsWUFBWU4scUJBQXFCRyxJQUFJLENBQ3hDSSxHQUFHLENBQUNDLENBQUFBLEtBQU1BLEdBQUdDLFFBQVEsRUFDckJDLE1BQU0sQ0FBQ0MsQ0FBQUEsS0FBTUEsT0FBTyxRQUFRQSxPQUFPQztRQUV0QyxJQUFJTixVQUFVRixNQUFNLEtBQUssR0FBRztZQUMxQixPQUFPYixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO2dCQUFNVSxTQUFTLEVBQUU7WUFBQztRQUMzRDtRQUVBLE1BQU1RLGdCQUFnQixNQUFNZCxxQkFBcUJlLFdBQVcsQ0FBQztZQUMzREgsSUFBSTtnQkFBRUksSUFBSVQ7WUFBVTtRQUN0QjtRQUVBLE1BQU1ELFVBQVVRLGNBQWNWLElBQUksQ0FBQ0ksR0FBRyxDQUFDUyxDQUFBQTtZQUNyQyxpREFBaUQ7WUFDakQsSUFBSUMsYUFBYTtZQUNqQixJQUFJO2dCQUNGLE1BQU1DLFdBQVdGLE9BQU9FLFFBQVEsR0FBR0MsS0FBS0MsS0FBSyxDQUFDSixPQUFPRSxRQUFRLElBQWMsQ0FBQztnQkFDNUVELGFBQWFDLFNBQVNHLElBQUksSUFBSTtZQUNoQyxFQUFFLE9BQU9DLEdBQUc7Z0JBQ1ZMLGFBQWE7WUFDZjtZQUVBLE9BQU87Z0JBQ0xOLElBQUlLLE9BQU9MLEVBQUU7Z0JBQ2JZLE1BQU1QLE9BQU9PLElBQUksSUFBSTtnQkFDckJGLE1BQU1KO1lBQ1I7UUFDRjtRQUVBLE9BQU8xQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RVLFNBQVNBO1FBQ1g7SUFFRixFQUFFLE9BQU9tQixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU9qQyxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RDLFNBQVM7UUFDWDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXJ2ZXktbGluay13cmFwcGVyLy4vc3JjL3BhZ2VzL2FwaS92ZW5kb3JzL2xpc3QudHM/MzI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XG5pbXBvcnQgeyBnZXRBbXBsaWZ5U2VydmVyU2VydmljZSB9IGZyb20gJ0AvbGliL2FtcGxpZnktc2VydmVyLXNlcnZpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBwcm9qZWN0SWQgfSA9IHJlcS5xdWVyeTtcblxuICAgIGlmICghcHJvamVjdElkIHx8IHR5cGVvZiBwcm9qZWN0SWQgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ1Byb2plY3QgSUQgaXMgcmVxdWlyZWQnIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGFtcGxpZnlTZXJ2ZXJTZXJ2aWNlID0gZ2V0QW1wbGlmeVNlcnZlclNlcnZpY2UoKTtcbiAgICBcbiAgICAvLyBHZXQgdmVuZG9ycyB0aHJvdWdoIFByb2plY3RWZW5kb3IgcmVsYXRpb25zaGlwc1xuICAgIGNvbnN0IHByb2plY3RWZW5kb3JzUmVzdWx0ID0gYXdhaXQgYW1wbGlmeVNlcnZlclNlcnZpY2UubGlzdFByb2plY3RWZW5kb3JzKHtcbiAgICAgIHByb2plY3RJZDogeyBlcTogcHJvamVjdElkIH1cbiAgICB9KTtcblxuICAgIGlmICghcHJvamVjdFZlbmRvcnNSZXN1bHQuZGF0YSB8fCBwcm9qZWN0VmVuZG9yc1Jlc3VsdC5kYXRhLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgdmVuZG9yczogW10gfSk7XG4gICAgfVxuXG4gICAgLy8gR2V0IHZlbmRvciBkZXRhaWxzIGZvciBlYWNoIFByb2plY3RWZW5kb3IgcmVsYXRpb25zaGlwXG4gICAgY29uc3QgdmVuZG9ySWRzID0gcHJvamVjdFZlbmRvcnNSZXN1bHQuZGF0YVxuICAgICAgLm1hcChwdiA9PiBwdi52ZW5kb3JJZClcbiAgICAgIC5maWx0ZXIoaWQgPT4gaWQgIT09IG51bGwgJiYgaWQgIT09IHVuZGVmaW5lZCk7XG5cbiAgICBpZiAodmVuZG9ySWRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgdmVuZG9yczogW10gfSk7XG4gICAgfVxuXG4gICAgY29uc3QgdmVuZG9yc1Jlc3VsdCA9IGF3YWl0IGFtcGxpZnlTZXJ2ZXJTZXJ2aWNlLmxpc3RWZW5kb3JzKHtcbiAgICAgIGlkOiB7IGluOiB2ZW5kb3JJZHMgfVxuICAgIH0pO1xuXG4gICAgY29uc3QgdmVuZG9ycyA9IHZlbmRvcnNSZXN1bHQuZGF0YS5tYXAodmVuZG9yID0+IHtcbiAgICAgIC8vIEV4dHJhY3QgdmVuZG9yIGNvZGUgZnJvbSBzZXR0aW5ncyBpZiBpdCBleGlzdHNcbiAgICAgIGxldCB2ZW5kb3JDb2RlID0gJyc7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHZlbmRvci5zZXR0aW5ncyA/IEpTT04ucGFyc2UodmVuZG9yLnNldHRpbmdzIGFzIHN0cmluZykgOiB7fTtcbiAgICAgICAgdmVuZG9yQ29kZSA9IHNldHRpbmdzLmNvZGUgfHwgJyc7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHZlbmRvckNvZGUgPSAnJztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IHZlbmRvci5pZCxcbiAgICAgICAgbmFtZTogdmVuZG9yLm5hbWUgfHwgJycsXG4gICAgICAgIGNvZGU6IHZlbmRvckNvZGVcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHZlbmRvcnM6IHZlbmRvcnNcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxpc3RpbmcgdmVuZG9yczonLCBlcnJvcik7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXG4gICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGxpc3QgdmVuZG9ycycgXG4gICAgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsiZ2V0QW1wbGlmeVNlcnZlclNlcnZpY2UiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwicHJvamVjdElkIiwicXVlcnkiLCJhbXBsaWZ5U2VydmVyU2VydmljZSIsInByb2plY3RWZW5kb3JzUmVzdWx0IiwibGlzdFByb2plY3RWZW5kb3JzIiwiZXEiLCJkYXRhIiwibGVuZ3RoIiwidmVuZG9ycyIsInZlbmRvcklkcyIsIm1hcCIsInB2IiwidmVuZG9ySWQiLCJmaWx0ZXIiLCJpZCIsInVuZGVmaW5lZCIsInZlbmRvcnNSZXN1bHQiLCJsaXN0VmVuZG9ycyIsImluIiwidmVuZG9yIiwidmVuZG9yQ29kZSIsInNldHRpbmdzIiwiSlNPTiIsInBhcnNlIiwiY29kZSIsImUiLCJuYW1lIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/vendors/list.ts\n");

/***/ }),

/***/ "(api)/./amplify_outputs.json":
/*!******************************!*\
  !*** ./amplify_outputs.json ***!
  \******************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"auth":{"user_pool_id":"us-east-1_Gh00T12dW","aws_region":"us-east-1","user_pool_client_id":"5e5a5drp00jd43tr7ph1ceg412","identity_pool_id":"us-east-1:a0b02f73-93a3-4b52-b1cb-eaa306375a33","mfa_methods":["SMS"],"standard_required_attributes":["email"],"username_attributes":["email"],"user_verification_types":["email"],"groups":[],"mfa_configuration":"OPTIONAL","password_policy":{"min_length":8,"require_lowercase":true,"require_numbers":true,"require_symbols":true,"require_uppercase":true},"unauthenticated_identities_enabled":true},"data":{"url":"https://vth6pntotrhvfpxo2gwn3kzqry.appsync-api.us-east-1.amazonaws.com/graphql","aws_region":"us-east-1","api_key":"da2-ee26yqskvzfpjpquwbi53shbvu","default_authorization_type":"AWS_IAM","authorization_types":["API_KEY","AMAZON_COGNITO_USER_POOLS"],"model_introspection":{"version":1,"models":{"Project":{"name":"Project","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"name":{"name":"name","isArray":false,"type":"String","isRequired":true,"attributes":[]},"description":{"name":"description","isArray":false,"type":"String","isRequired":false,"attributes":[]},"status":{"name":"status","isArray":false,"type":{"enum":"ProjectStatus"},"isRequired":false,"attributes":[]},"targetCompletions":{"name":"targetCompletions","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"currentCompletions":{"name":"currentCompletions","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"surveyUrl":{"name":"surveyUrl","isArray":false,"type":"String","isRequired":true,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"settings":{"name":"settings","isArray":false,"type":"AWSJSON","isRequired":false,"attributes":[]}},"syncable":true,"pluralName":"Projects","attributes":[{"type":"model","properties":{}},{"type":"auth","properties":{"rules":[{"allow":"private","operations":["create","read","update","delete"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"Question":{"name":"Question","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"projectId":{"name":"projectId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"text":{"name":"text","isArray":false,"type":"String","isRequired":true,"attributes":[]},"type":{"name":"type","isArray":false,"type":{"enum":"QuestionType"},"isRequired":false,"attributes":[]},"options":{"name":"options","isArray":false,"type":"AWSJSON","isRequired":false,"attributes":[]},"sequence":{"name":"sequence","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"isRequired":{"name":"isRequired","isArray":false,"type":"Boolean","isRequired":true,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Questions","attributes":[{"type":"model","properties":{}},{"type":"auth","properties":{"rules":[{"allow":"private","operations":["create","read","update","delete"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"SurveyLink":{"name":"SurveyLink","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"projectId":{"name":"projectId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"uid":{"name":"uid","isArray":false,"type":"String","isRequired":true,"attributes":[]},"status":{"name":"status","isArray":false,"type":{"enum":"SurveyLinkStatus"},"isRequired":false,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"clickedAt":{"name":"clickedAt","isArray":false,"type":"AWSDateTime","isRequired":false,"attributes":[]},"completedAt":{"name":"completedAt","isArray":false,"type":"AWSDateTime","isRequired":false,"attributes":[]},"ipAddress":{"name":"ipAddress","isArray":false,"type":"String","isRequired":false,"attributes":[]},"userAgent":{"name":"userAgent","isArray":false,"type":"String","isRequired":false,"attributes":[]},"geoData":{"name":"geoData","isArray":false,"type":"AWSJSON","isRequired":false,"attributes":[]},"metadata":{"name":"metadata","isArray":false,"type":"AWSJSON","isRequired":false,"attributes":[]},"vendorId":{"name":"vendorId","isArray":false,"type":"ID","isRequired":false,"attributes":[]}},"syncable":true,"pluralName":"SurveyLinks","attributes":[{"type":"model","properties":{}},{"type":"auth","properties":{"rules":[{"allow":"private","operations":["create","read","update","delete"]},{"allow":"public","provider":"iam","operations":["read","update"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"Vendor":{"name":"Vendor","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"name":{"name":"name","isArray":false,"type":"String","isRequired":true,"attributes":[]},"contactName":{"name":"contactName","isArray":false,"type":"String","isRequired":false,"attributes":[]},"contactEmail":{"name":"contactEmail","isArray":false,"type":"String","isRequired":false,"attributes":[]},"settings":{"name":"settings","isArray":false,"type":"AWSJSON","isRequired":false,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"Vendors","attributes":[{"type":"model","properties":{}},{"type":"auth","properties":{"rules":[{"allow":"private","operations":["create","read","update","delete"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}},"ProjectVendor":{"name":"ProjectVendor","fields":{"id":{"name":"id","isArray":false,"type":"ID","isRequired":true,"attributes":[]},"projectId":{"name":"projectId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"vendorId":{"name":"vendorId","isArray":false,"type":"ID","isRequired":false,"attributes":[]},"quota":{"name":"quota","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"currentCount":{"name":"currentCount","isArray":false,"type":"Int","isRequired":true,"attributes":[]},"createdAt":{"name":"createdAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]},"updatedAt":{"name":"updatedAt","isArray":false,"type":"AWSDateTime","isRequired":true,"attributes":[]}},"syncable":true,"pluralName":"ProjectVendors","attributes":[{"type":"model","properties":{}},{"type":"auth","properties":{"rules":[{"allow":"private","operations":["create","read","update","delete"]}]}}],"primaryKeyInfo":{"isCustomPrimaryKey":false,"primaryKeyFieldName":"id","sortKeyFieldNames":[]}}},"enums":{"ProjectStatus":{"name":"ProjectStatus","values":["ACTIVE","PAUSED","COMPLETED"]},"QuestionType":{"name":"QuestionType","values":["MULTIPLE_CHOICE","TEXT","COUNTRY","SCALE"]},"SurveyLinkStatus":{"name":"SurveyLinkStatus","values":["UNUSED","CLICKED","COMPLETED","DISQUALIFIED","QUOTA_FULL"]}},"nonModels":{}}},"version":"1.3"}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fvendors%2Flist.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();