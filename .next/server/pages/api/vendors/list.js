"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/vendors/list";
exports.ids = ["pages/api/vendors/list"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "aws-amplify":
/*!******************************!*\
  !*** external "aws-amplify" ***!
  \******************************/
/***/ ((module) => {

module.exports = import("aws-amplify");;

/***/ }),

/***/ "aws-amplify/api":
/*!**********************************!*\
  !*** external "aws-amplify/api" ***!
  \**********************************/
/***/ ((module) => {

module.exports = import("aws-amplify/api");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cvendors%5Clist.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cvendors%5Clist.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\vendors\\list.ts */ \"(api)/./src/pages/api/vendors/list.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/vendors/list\",\n        pathname: \"/api/vendors/list\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_vendors_list_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnZlbmRvcnMlMkZsaXN0JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUN2ZW5kb3JzJTVDbGlzdC50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNnRTtBQUNoRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsMkRBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDJEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvPzY0YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyY1xcXFxwYWdlc1xcXFxhcGlcXFxcdmVuZG9yc1xcXFxsaXN0LnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdmVuZG9ycy9saXN0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdmVuZG9ycy9saXN0XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cvendors%5Clist.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/amplify-config.ts":
/*!***********************************!*\
  !*** ./src/lib/amplify-config.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADMIN_DOMAIN: () => (/* binding */ ADMIN_DOMAIN),\n/* harmony export */   MAIN_DOMAIN: () => (/* binding */ MAIN_DOMAIN),\n/* harmony export */   amplifyConfig: () => (/* binding */ amplifyConfig),\n/* harmony export */   configureAmplify: () => (/* binding */ configureAmplify)\n/* harmony export */ });\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify__WEBPACK_IMPORTED_MODULE_0__]);\naws_amplify__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nlet configurationDone = false;\n// Domain configuration\nconst MAIN_DOMAIN = \"protegeresearchsurvey.com\" || 0;\nconst ADMIN_DOMAIN = \"admin.protegeresearchsurvey.com\" || 0;\n// Explicitly set Cognito User Pool ID\nconst COGNITO_USER_POOL_ID = \"us-east-1_QIwwMdokt\";\n/**\r\n * Configure Amplify with the right settings\r\n */ function configureAmplify() {\n    if (configurationDone) {\n        return; // Avoid multiple configurations\n    }\n    let amplifyOutputs = null;\n    // For server-side code\n    if (true) {\n        try {\n            // Use dynamic imports for Node.js-only modules\n            const fs = __webpack_require__(/*! fs */ \"fs\");\n            const path = __webpack_require__(/*! path */ \"path\");\n            const possiblePaths = [\n                path.join(process.cwd(), \"amplify_outputs.json\"),\n                path.join(process.cwd(), \".amplify\", \"amplify_outputs.json\"),\n                path.join(process.cwd(), \"src\", \"amplify_outputs.json\")\n            ];\n            for (const possiblePath of possiblePaths){\n                if (fs.existsSync(possiblePath)) {\n                    const outputsContent = fs.readFileSync(possiblePath, \"utf8\");\n                    amplifyOutputs = JSON.parse(outputsContent);\n                    break;\n                }\n            }\n        } catch (error) {\n            console.warn(\"Failed to load amplify_outputs.json:\", error);\n        }\n    }\n    // If no outputs file was found or in browser context, use environment variables\n    // but prioritize our explicit Cognito User Pool ID\n    if (!amplifyOutputs) {\n        amplifyOutputs = {\n            auth: {\n                userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\",\n                userPoolClientId: \"2nv3n1cco1867elirafvr6uu1e\",\n                identityPoolId: \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\",\n                region: \"us-east-1\"\n            },\n            api: {\n                endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\",\n                region: \"us-east-1\" || 0\n            }\n        };\n    } else {\n        // Ensure the User Pool ID is set even if we found an outputs file\n        amplifyOutputs.auth = {\n            ...amplifyOutputs.auth,\n            userPoolId: COGNITO_USER_POOL_ID || amplifyOutputs.auth?.userPoolId\n        };\n    }\n    // Get the region from outputs or environment variables\n    const region = \"us-east-1\"; // Hardcoded to match the User Pool ID region\n    // Configure Amplify with the retrieved settings\n    try {\n        const config = {\n            // Auth Configuration\n            Auth: {\n                Cognito: {\n                    userPoolId: COGNITO_USER_POOL_ID || amplifyOutputs.auth?.userPoolId || \"\",\n                    userPoolClientId: amplifyOutputs.auth?.userPoolClientId || \"\",\n                    identityPoolId: amplifyOutputs.auth?.identityPoolId || \"\"\n                }\n            },\n            // API Configuration for GraphQL\n            API: {\n                GraphQL: {\n                    endpoint: amplifyOutputs.api?.endpoint || \"\",\n                    region: amplifyOutputs.api?.region || region,\n                    defaultAuthMode: \"userPool\"\n                }\n            }\n        };\n        // Add region at root level for Amplify v6\n        config.region = region;\n        // Apply configuration\n        aws_amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify.configure(config);\n        configurationDone = true;\n        console.log(\"Amplify configured with User Pool ID:\", COGNITO_USER_POOL_ID);\n    } catch (error) {\n        console.error(\"Error configuring Amplify:\", error);\n    }\n}\n// Export the raw Amplify config for use elsewhere\nconst amplifyConfig = {\n    Auth: {\n        Cognito: {\n            userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\" || 0,\n            userPoolClientId: \"2nv3n1cco1867elirafvr6uu1e\" || 0,\n            identityPoolId: \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\" || 0\n        }\n    },\n    API: {\n        GraphQL: {\n            endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\" || 0,\n            region: \"us-east-1\" || 0,\n            defaultAuthMode: \"userPool\"\n        }\n    },\n    // Domain configuration\n    domains: {\n        main: MAIN_DOMAIN,\n        admin: ADMIN_DOMAIN\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMzQlAsTUFBTTtRQUNKQyxTQUFTO1lBQ1BiLFlBQVluQix3QkFBd0JMLHFCQUF5QyxJQUFJO1lBQ2pGMEIsa0JBQWtCMUIsNEJBQWdELElBQUk7WUFDdEU0QixnQkFBZ0I1QixnREFBNkMsSUFBSTtRQUNuRTtJQUNGO0lBQ0FzQyxLQUFLO1FBQ0hDLFNBQVM7WUFDUFAsVUFBVWhDLGdGQUFvQyxJQUFJO1lBQ2xEOEIsUUFBUTlCLFdBQWtDLElBQUk7WUFDOUN3QyxpQkFBaUI7UUFDbkI7SUFDRjtJQUNBLHVCQUF1QjtJQUN2QkksU0FBUztRQUNQQyxNQUFNOUM7UUFDTitDLE9BQU8zQztJQUNUO0FBQ0YsRUFBUyIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvLi9zcmMvbGliL2FtcGxpZnktY29uZmlnLnRzPzRhYjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQW1wbGlmeSB9IGZyb20gJ2F3cy1hbXBsaWZ5JztcclxuXHJcbmxldCBjb25maWd1cmF0aW9uRG9uZSA9IGZhbHNlO1xyXG5cclxuLy8gRG9tYWluIGNvbmZpZ3VyYXRpb25cclxuZXhwb3J0IGNvbnN0IE1BSU5fRE9NQUlOID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRE9NQUlOIHx8ICdwcm90ZWdlcmVzZWFyY2hzdXJ2ZXkuY29tJztcclxuZXhwb3J0IGNvbnN0IEFETUlOX0RPTUFJTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FETUlOX0RPTUFJTiB8fCBgYWRtaW4uJHtNQUlOX0RPTUFJTn1gO1xyXG5cclxuLy8gRXhwbGljaXRseSBzZXQgQ29nbml0byBVc2VyIFBvb2wgSURcclxuY29uc3QgQ09HTklUT19VU0VSX1BPT0xfSUQgPSAndXMtZWFzdC0xX1FJd3dNZG9rdCc7XHJcblxyXG4vKipcclxuICogQ29uZmlndXJlIEFtcGxpZnkgd2l0aCB0aGUgcmlnaHQgc2V0dGluZ3NcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmVBbXBsaWZ5KCkge1xyXG4gIGlmIChjb25maWd1cmF0aW9uRG9uZSkge1xyXG4gICAgcmV0dXJuOyAvLyBBdm9pZCBtdWx0aXBsZSBjb25maWd1cmF0aW9uc1xyXG4gIH1cclxuXHJcbiAgbGV0IGFtcGxpZnlPdXRwdXRzOiBhbnkgPSBudWxsO1xyXG5cclxuICAvLyBGb3Igc2VydmVyLXNpZGUgY29kZVxyXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gVXNlIGR5bmFtaWMgaW1wb3J0cyBmb3IgTm9kZS5qcy1vbmx5IG1vZHVsZXNcclxuICAgICAgY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG4gICAgICBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG4gICAgICBcclxuICAgICAgY29uc3QgcG9zc2libGVQYXRocyA9IFtcclxuICAgICAgICBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2FtcGxpZnlfb3V0cHV0cy5qc29uJyksXHJcbiAgICAgICAgcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICcuYW1wbGlmeScsICdhbXBsaWZ5X291dHB1dHMuanNvbicpLFxyXG4gICAgICAgIHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnc3JjJywgJ2FtcGxpZnlfb3V0cHV0cy5qc29uJylcclxuICAgICAgXTtcclxuICAgICAgXHJcbiAgICAgIGZvciAoY29uc3QgcG9zc2libGVQYXRoIG9mIHBvc3NpYmxlUGF0aHMpIHtcclxuICAgICAgICBpZiAoZnMuZXhpc3RzU3luYyhwb3NzaWJsZVBhdGgpKSB7XHJcbiAgICAgICAgICBjb25zdCBvdXRwdXRzQ29udGVudCA9IGZzLnJlYWRGaWxlU3luYyhwb3NzaWJsZVBhdGgsICd1dGY4Jyk7XHJcbiAgICAgICAgICBhbXBsaWZ5T3V0cHV0cyA9IEpTT04ucGFyc2Uob3V0cHV0c0NvbnRlbnQpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBsb2FkIGFtcGxpZnlfb3V0cHV0cy5qc29uOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIElmIG5vIG91dHB1dHMgZmlsZSB3YXMgZm91bmQgb3IgaW4gYnJvd3NlciBjb250ZXh0LCB1c2UgZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgLy8gYnV0IHByaW9yaXRpemUgb3VyIGV4cGxpY2l0IENvZ25pdG8gVXNlciBQb29sIElEXHJcbiAgaWYgKCFhbXBsaWZ5T3V0cHV0cykge1xyXG4gICAgYW1wbGlmeU91dHB1dHMgPSB7XHJcbiAgICAgIGF1dGg6IHtcclxuICAgICAgICB1c2VyUG9vbElkOiBDT0dOSVRPX1VTRVJfUE9PTF9JRCB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9JRCxcclxuICAgICAgICB1c2VyUG9vbENsaWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9DTElFTlRfSUQsXHJcbiAgICAgICAgaWRlbnRpdHlQb29sSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEhfSURFTlRJVFlfUE9PTF9JRCxcclxuICAgICAgICByZWdpb246ICd1cy1lYXN0LTEnLCAvLyBEZXJpdmVkIGZyb20gdGhlIFVzZXIgUG9vbCBJRFxyXG4gICAgICB9LFxyXG4gICAgICBhcGk6IHtcclxuICAgICAgICBlbmRwb2ludDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX0VORFBPSU5ULFxyXG4gICAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1JFR0lPTiB8fCAndXMtZWFzdC0xJyxcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9IGVsc2Uge1xyXG4gICAgLy8gRW5zdXJlIHRoZSBVc2VyIFBvb2wgSUQgaXMgc2V0IGV2ZW4gaWYgd2UgZm91bmQgYW4gb3V0cHV0cyBmaWxlXHJcbiAgICBhbXBsaWZ5T3V0cHV0cy5hdXRoID0ge1xyXG4gICAgICAuLi5hbXBsaWZ5T3V0cHV0cy5hdXRoLFxyXG4gICAgICB1c2VyUG9vbElkOiBDT0dOSVRPX1VTRVJfUE9PTF9JRCB8fCBhbXBsaWZ5T3V0cHV0cy5hdXRoPy51c2VyUG9vbElkXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gR2V0IHRoZSByZWdpb24gZnJvbSBvdXRwdXRzIG9yIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG4gIGNvbnN0IHJlZ2lvbiA9ICd1cy1lYXN0LTEnOyAvLyBIYXJkY29kZWQgdG8gbWF0Y2ggdGhlIFVzZXIgUG9vbCBJRCByZWdpb25cclxuXHJcbiAgLy8gQ29uZmlndXJlIEFtcGxpZnkgd2l0aCB0aGUgcmV0cmlldmVkIHNldHRpbmdzXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGNvbmZpZzogYW55ID0ge1xyXG4gICAgICAvLyBBdXRoIENvbmZpZ3VyYXRpb25cclxuICAgICAgQXV0aDoge1xyXG4gICAgICAgIENvZ25pdG86IHtcclxuICAgICAgICAgIHVzZXJQb29sSWQ6IENPR05JVE9fVVNFUl9QT09MX0lEIHx8IGFtcGxpZnlPdXRwdXRzLmF1dGg/LnVzZXJQb29sSWQgfHwgJycsXHJcbiAgICAgICAgICB1c2VyUG9vbENsaWVudElkOiBhbXBsaWZ5T3V0cHV0cy5hdXRoPy51c2VyUG9vbENsaWVudElkIHx8ICcnLFxyXG4gICAgICAgICAgaWRlbnRpdHlQb29sSWQ6IGFtcGxpZnlPdXRwdXRzLmF1dGg/LmlkZW50aXR5UG9vbElkIHx8ICcnLFxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgLy8gQVBJIENvbmZpZ3VyYXRpb24gZm9yIEdyYXBoUUxcclxuICAgICAgQVBJOiB7XHJcbiAgICAgICAgR3JhcGhRTDoge1xyXG4gICAgICAgICAgZW5kcG9pbnQ6IGFtcGxpZnlPdXRwdXRzLmFwaT8uZW5kcG9pbnQgfHwgJycsXHJcbiAgICAgICAgICByZWdpb246IGFtcGxpZnlPdXRwdXRzLmFwaT8ucmVnaW9uIHx8IHJlZ2lvbixcclxuICAgICAgICAgIGRlZmF1bHRBdXRoTW9kZTogJ3VzZXJQb29sJ1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgLy8gQWRkIHJlZ2lvbiBhdCByb290IGxldmVsIGZvciBBbXBsaWZ5IHY2XHJcbiAgICBjb25maWcucmVnaW9uID0gcmVnaW9uO1xyXG4gICAgXHJcbiAgICAvLyBBcHBseSBjb25maWd1cmF0aW9uXHJcbiAgICBBbXBsaWZ5LmNvbmZpZ3VyZShjb25maWcpO1xyXG4gICAgXHJcbiAgICBjb25maWd1cmF0aW9uRG9uZSA9IHRydWU7XHJcbiAgICBjb25zb2xlLmxvZygnQW1wbGlmeSBjb25maWd1cmVkIHdpdGggVXNlciBQb29sIElEOicsIENPR05JVE9fVVNFUl9QT09MX0lEKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY29uZmlndXJpbmcgQW1wbGlmeTonLCBlcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBFeHBvcnQgdGhlIHJhdyBBbXBsaWZ5IGNvbmZpZyBmb3IgdXNlIGVsc2V3aGVyZVxyXG5leHBvcnQgY29uc3QgYW1wbGlmeUNvbmZpZyA9IHtcclxuICBBdXRoOiB7XHJcbiAgICBDb2duaXRvOiB7XHJcbiAgICAgIHVzZXJQb29sSWQ6IENPR05JVE9fVVNFUl9QT09MX0lEIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEhfVVNFUl9QT09MX0lEIHx8ICcnLFxyXG4gICAgICB1c2VyUG9vbENsaWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9DTElFTlRfSUQgfHwgJycsXHJcbiAgICAgIGlkZW50aXR5UG9vbElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BVVRIX0lERU5USVRZX1BPT0xfSUQgfHwgJycsXHJcbiAgICB9XHJcbiAgfSxcclxuICBBUEk6IHtcclxuICAgIEdyYXBoUUw6IHtcclxuICAgICAgZW5kcG9pbnQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9FTkRQT0lOVCB8fCAnJyxcclxuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfUkVHSU9OIHx8ICd1cy1lYXN0LTEnLFxyXG4gICAgICBkZWZhdWx0QXV0aE1vZGU6ICd1c2VyUG9vbCdcclxuICAgIH1cclxuICB9LFxyXG4gIC8vIERvbWFpbiBjb25maWd1cmF0aW9uXHJcbiAgZG9tYWluczoge1xyXG4gICAgbWFpbjogTUFJTl9ET01BSU4sXHJcbiAgICBhZG1pbjogQURNSU5fRE9NQUlOXHJcbiAgfVxyXG59IGFzIGFueTsiXSwibmFtZXMiOlsiQW1wbGlmeSIsImNvbmZpZ3VyYXRpb25Eb25lIiwiTUFJTl9ET01BSU4iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfRE9NQUlOIiwiQURNSU5fRE9NQUlOIiwiTkVYVF9QVUJMSUNfQURNSU5fRE9NQUlOIiwiQ09HTklUT19VU0VSX1BPT0xfSUQiLCJjb25maWd1cmVBbXBsaWZ5IiwiYW1wbGlmeU91dHB1dHMiLCJmcyIsInJlcXVpcmUiLCJwYXRoIiwicG9zc2libGVQYXRocyIsImpvaW4iLCJjd2QiLCJwb3NzaWJsZVBhdGgiLCJleGlzdHNTeW5jIiwib3V0cHV0c0NvbnRlbnQiLCJyZWFkRmlsZVN5bmMiLCJKU09OIiwicGFyc2UiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwiYXV0aCIsInVzZXJQb29sSWQiLCJORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9JRCIsInVzZXJQb29sQ2xpZW50SWQiLCJORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9DTElFTlRfSUQiLCJpZGVudGl0eVBvb2xJZCIsIk5FWFRfUFVCTElDX0FVVEhfSURFTlRJVFlfUE9PTF9JRCIsInJlZ2lvbiIsImFwaSIsImVuZHBvaW50IiwiTkVYVF9QVUJMSUNfQVBJX0VORFBPSU5UIiwiTkVYVF9QVUJMSUNfQVBJX1JFR0lPTiIsImNvbmZpZyIsIkF1dGgiLCJDb2duaXRvIiwiQVBJIiwiR3JhcGhRTCIsImRlZmF1bHRBdXRoTW9kZSIsImNvbmZpZ3VyZSIsImxvZyIsImFtcGxpZnlDb25maWciLCJkb21haW5zIiwibWFpbiIsImFkbWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/amplify-config.ts\n");

/***/ }),

/***/ "(api)/./src/lib/amplify-data-service.ts":
/*!*****************************************!*\
  !*** ./src/lib/amplify-data-service.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   amplifyDataService: () => (/* binding */ amplifyDataService)\n/* harmony export */ });\n/* harmony import */ var aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify/api */ \"aws-amplify/api\");\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\n/* harmony import */ var _amplify_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./amplify-config */ \"(api)/./src/lib/amplify-config.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_1__, _amplify_config__WEBPACK_IMPORTED_MODULE_2__]);\n([aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_1__, _amplify_config__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Initialize Amplify with type assertion to avoid type errors\naws_amplify__WEBPACK_IMPORTED_MODULE_1__.Amplify.configure(_amplify_config__WEBPACK_IMPORTED_MODULE_2__.amplifyConfig);\n// Generate a type-safe client for data operations\nconst client = (0,aws_amplify_api__WEBPACK_IMPORTED_MODULE_0__.generateClient)();\n// Helper to safely unwrap data from Amplify responses\nconst unwrapData = (result)=>result.data;\n/**\r\n * Amplify Data Service - Replaces Prisma client with AWS Amplify data operations\r\n * This service provides CRUD operations for all models in the application\r\n */ const amplifyDataService = {\n    // Project operations\n    projects: {\n        create: async (data)=>{\n            const result = await client.models.Project.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Project.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Project.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Project.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Project.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        getWithRelations: async (id)=>{\n            // Fix: Remove problematic selection set and handle relationships separately\n            const project = await client.models.Project.get({\n                id\n            });\n            if (project.data) {\n                // Fetch related data separately to avoid deep type instantiation\n                const surveyLinks = await client.models.SurveyLink.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                const vendors = await client.models.Vendor.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                const questions = await client.models.Question.list({\n                    filter: {\n                        projectId: {\n                            eq: id\n                        }\n                    }\n                });\n                // Combine project with its related data\n                return {\n                    data: {\n                        ...project.data,\n                        surveyLinks: surveyLinks.data || [],\n                        vendors: vendors.data || [],\n                        questions: questions.data || []\n                    }\n                };\n            }\n            return {\n                data: null\n            };\n        }\n    },\n    // SurveyLink operations\n    surveyLinks: {\n        create: async (data)=>{\n            const result = await client.models.SurveyLink.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.SurveyLink.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        getByUid: async (uid)=>{\n            const results = await client.models.SurveyLink.list({\n                filter: {\n                    uid: {\n                        eq: uid\n                    }\n                }\n            });\n            return {\n                data: results.data && results.data.length > 0 ? results.data[0] : null\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.SurveyLink.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.SurveyLink.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.SurveyLink.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.SurveyLink.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Vendor operations\n    vendors: {\n        create: async (data)=>{\n            const result = await client.models.Vendor.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Vendor.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Vendor.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Vendor.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Vendor.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Vendor.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Question operations\n    questions: {\n        create: async (data)=>{\n            const result = await client.models.Question.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Question.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Question.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Question.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        update: async (id, data)=>{\n            const result = await client.models.Question.update({\n                id,\n                ...data\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Question.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Response operations\n    responses: {\n        create: async (data)=>{\n            const result = await client.models.Response.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Response.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Response.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Response.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        listBySurveyLink: async (surveyLinkId)=>{\n            const result = await client.models.Response.list({\n                filter: {\n                    surveyLinkId: {\n                        eq: surveyLinkId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Response.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Flag operations\n    flags: {\n        create: async (data)=>{\n            const result = await client.models.Flag.create(data);\n            return {\n                data: unwrapData(result)\n            };\n        },\n        get: async (id)=>{\n            const result = await client.models.Flag.get({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        },\n        list: async (filter)=>{\n            const result = await client.models.Flag.list(filter);\n            return {\n                data: result.data || []\n            };\n        },\n        listByProject: async (projectId)=>{\n            const result = await client.models.Flag.list({\n                filter: {\n                    projectId: {\n                        eq: projectId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        listBySurveyLink: async (surveyLinkId)=>{\n            const result = await client.models.Flag.list({\n                filter: {\n                    surveyLinkId: {\n                        eq: surveyLinkId\n                    }\n                }\n            });\n            return {\n                data: result.data || []\n            };\n        },\n        delete: async (id)=>{\n            const result = await client.models.Flag.delete({\n                id\n            });\n            return {\n                data: unwrapData(result)\n            };\n        }\n    },\n    // Helper for transactions (not directly supported in Amplify Data, using batch operations)\n    transaction: {\n        execute: async (operations)=>{\n            // Execute operations in sequence\n            const results = [];\n            for (const operation of operations){\n                const result = await operation;\n                results.push(result);\n            }\n            return results;\n        }\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/amplify-data-service.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/vendors/list.ts":
/*!***************************************!*\
  !*** ./src/pages/api/vendors/list.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/amplify-data-service */ \"(api)/./src/lib/amplify-data-service.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { projectId } = req.query;\n        if (!projectId || typeof projectId !== \"string\") {\n            return res.status(400).json({\n                success: false,\n                message: \"Project ID is required\"\n            });\n        }\n        // Check if project exists first\n        const projectResult = await _lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__.amplifyDataService.projects.get(projectId);\n        if (!projectResult || !projectResult.data) {\n            return res.status(404).json({\n                success: false,\n                message: \"Project not found\"\n            });\n        }\n        // Get all vendors for this project using Amplify\n        const vendorsResult = await _lib_amplify_data_service__WEBPACK_IMPORTED_MODULE_0__.amplifyDataService.vendors.listByProject(projectId);\n        // Sort vendors by name\n        const vendors = vendorsResult.data.sort((a, b)=>(a.name || \"\").localeCompare(b.name || \"\"));\n        return res.status(200).json({\n            success: true,\n            vendors\n        });\n    } catch (error) {\n        console.error(\"Error listing vendors:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Failed to list vendors\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3ZlbmRvcnMvbGlzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNnRTtBQUVqRCxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDOUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR04sSUFBSU8sS0FBSztRQUUvQixJQUFJLENBQUNELGFBQWEsT0FBT0EsY0FBYyxVQUFVO1lBQy9DLE9BQU9MLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCSSxTQUFTO2dCQUNUSCxTQUFTO1lBQ1g7UUFDRjtRQUVBLGdDQUFnQztRQUNoQyxNQUFNSSxnQkFBZ0IsTUFBTVgseUVBQWtCQSxDQUFDWSxRQUFRLENBQUNDLEdBQUcsQ0FBQ0w7UUFFNUQsSUFBSSxDQUFDRyxpQkFBaUIsQ0FBQ0EsY0FBY0csSUFBSSxFQUFFO1lBQ3pDLE9BQU9YLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCSSxTQUFTO2dCQUNUSCxTQUFTO1lBQ1g7UUFDRjtRQUVBLGlEQUFpRDtRQUNqRCxNQUFNUSxnQkFBZ0IsTUFBTWYseUVBQWtCQSxDQUFDZ0IsT0FBTyxDQUFDQyxhQUFhLENBQUNUO1FBRXJFLHVCQUF1QjtRQUN2QixNQUFNUSxVQUFVRCxjQUFjRCxJQUFJLENBQUNJLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUMxQyxDQUFDRCxFQUFFRSxJQUFJLElBQUksRUFBQyxFQUFHQyxhQUFhLENBQUNGLEVBQUVDLElBQUksSUFBSTtRQUd6QyxPQUFPbEIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkksU0FBUztZQUNUTTtRQUNGO0lBQ0YsRUFBRSxPQUFPTyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1FBQ3hDLE9BQU9wQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCSSxTQUFTO1lBQ1RILFNBQVM7UUFDWDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXJ2ZXktbGluay13cmFwcGVyLy4vc3JjL3BhZ2VzL2FwaS92ZW5kb3JzL2xpc3QudHM/MzI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IGFtcGxpZnlEYXRhU2VydmljZSB9IGZyb20gJ0AvbGliL2FtcGxpZnktZGF0YS1zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IG1lc3NhZ2U6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgcHJvamVjdElkIH0gPSByZXEucXVlcnk7XHJcblxyXG4gICAgaWYgKCFwcm9qZWN0SWQgfHwgdHlwZW9mIHByb2plY3RJZCAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxyXG4gICAgICAgIG1lc3NhZ2U6ICdQcm9qZWN0IElEIGlzIHJlcXVpcmVkJyBcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgcHJvamVjdCBleGlzdHMgZmlyc3RcclxuICAgIGNvbnN0IHByb2plY3RSZXN1bHQgPSBhd2FpdCBhbXBsaWZ5RGF0YVNlcnZpY2UucHJvamVjdHMuZ2V0KHByb2plY3RJZCk7XHJcbiAgICBcclxuICAgIGlmICghcHJvamVjdFJlc3VsdCB8fCAhcHJvamVjdFJlc3VsdC5kYXRhKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcclxuICAgICAgICBtZXNzYWdlOiAnUHJvamVjdCBub3QgZm91bmQnIFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZXQgYWxsIHZlbmRvcnMgZm9yIHRoaXMgcHJvamVjdCB1c2luZyBBbXBsaWZ5XHJcbiAgICBjb25zdCB2ZW5kb3JzUmVzdWx0ID0gYXdhaXQgYW1wbGlmeURhdGFTZXJ2aWNlLnZlbmRvcnMubGlzdEJ5UHJvamVjdChwcm9qZWN0SWQpO1xyXG4gICAgXHJcbiAgICAvLyBTb3J0IHZlbmRvcnMgYnkgbmFtZVxyXG4gICAgY29uc3QgdmVuZG9ycyA9IHZlbmRvcnNSZXN1bHQuZGF0YS5zb3J0KChhLCBiKSA9PiBcclxuICAgICAgKGEubmFtZSB8fCAnJykubG9jYWxlQ29tcGFyZShiLm5hbWUgfHwgJycpXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IFxyXG4gICAgICBzdWNjZXNzOiB0cnVlLCBcclxuICAgICAgdmVuZG9ycyBcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsaXN0aW5nIHZlbmRvcnM6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcclxuICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBsaXN0IHZlbmRvcnMnIFxyXG4gICAgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImFtcGxpZnlEYXRhU2VydmljZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInByb2plY3RJZCIsInF1ZXJ5Iiwic3VjY2VzcyIsInByb2plY3RSZXN1bHQiLCJwcm9qZWN0cyIsImdldCIsImRhdGEiLCJ2ZW5kb3JzUmVzdWx0IiwidmVuZG9ycyIsImxpc3RCeVByb2plY3QiLCJzb3J0IiwiYSIsImIiLCJuYW1lIiwibG9jYWxlQ29tcGFyZSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/vendors/list.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fvendors%2Flist&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cvendors%5Clist.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();