/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/lib/amplify-config.ts":
/*!***********************************!*\
  !*** ./src/lib/amplify-config.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAmplifyConfig: () => (/* binding */ getAmplifyConfig)\n/* harmony export */ });\n// Disable TypeScript strict checking for this file\n// @ts-nocheck\n// Export a function to get the config object (no side effects)\nfunction getAmplifyConfig() {\n    return {\n        Auth: {\n            Cognito: {\n                userPoolId: \"us-east-1_Gh00T12dW\",\n                userPoolClientId: \"5e5a5drp00jd43tr7ph1ceg412\",\n                identityPoolId: \"us-east-1:a0b02f73-93a3-4b52-b1cb-eaa306375a33\",\n                region: \"us-east-1\" || 0\n            }\n        },\n        API: {\n            GraphQL: {\n                endpoint: \"https://vth6pntotrhvfpxo2gwn3kzqry.appsync-api.us-east-1.amazonaws.com/graphql\",\n                region: \"us-east-1\" || 0,\n                apiKey: \"da2-ee26yqskvzfpjpquwbi53shbvu\"\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2FtcGxpZnktY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxtREFBbUQ7QUFDbkQsY0FBYztBQUVkLCtEQUErRDtBQUN4RCxTQUFTQTtJQUNkLE9BQU87UUFDTEMsTUFBTTtZQUNKQyxTQUFTO2dCQUNQQyxZQUFZQyxxQkFBeUM7Z0JBQ3JERyxrQkFBa0JILDRCQUFnRDtnQkFDbEVLLGdCQUFnQkwsZ0RBQTZDO2dCQUM3RE8sUUFBUVAsV0FBbUMsSUFBSTtZQUNqRDtRQUNGO1FBQ0FTLEtBQUs7WUFDSEMsU0FBUztnQkFDUEMsVUFBVVgsZ0ZBQW9DO2dCQUM5Q08sUUFBUVAsV0FBa0MsSUFBSTtnQkFDOUNjLFFBQVFkLGdDQUF1QztZQUNqRDtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvLi9zcmMvbGliL2FtcGxpZnktY29uZmlnLnRzPzRhYjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGlzYWJsZSBUeXBlU2NyaXB0IHN0cmljdCBjaGVja2luZyBmb3IgdGhpcyBmaWxlXG4vLyBAdHMtbm9jaGVja1xuXG4vLyBFeHBvcnQgYSBmdW5jdGlvbiB0byBnZXQgdGhlIGNvbmZpZyBvYmplY3QgKG5vIHNpZGUgZWZmZWN0cylcbmV4cG9ydCBmdW5jdGlvbiBnZXRBbXBsaWZ5Q29uZmlnKCkge1xuICByZXR1cm4ge1xuICAgIEF1dGg6IHtcbiAgICAgIENvZ25pdG86IHtcbiAgICAgICAgdXNlclBvb2xJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVVUSF9VU0VSX1BPT0xfSUQsXG4gICAgICAgIHVzZXJQb29sQ2xpZW50SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEhfVVNFUl9QT09MX0NMSUVOVF9JRCxcbiAgICAgICAgaWRlbnRpdHlQb29sSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEhfSURFTlRJVFlfUE9PTF9JRCxcbiAgICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BVVRIX1JFR0lPTiB8fCAndXMtZWFzdC0xJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBBUEk6IHtcbiAgICAgIEdyYXBoUUw6IHtcbiAgICAgICAgZW5kcG9pbnQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9FTkRQT0lOVCxcbiAgICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfUkVHSU9OIHx8ICd1cy1lYXN0LTEnLFxuICAgICAgICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FNUExJRllfQVBJX0tFWSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfTtcbn0iXSwibmFtZXMiOlsiZ2V0QW1wbGlmeUNvbmZpZyIsIkF1dGgiLCJDb2duaXRvIiwidXNlclBvb2xJZCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9JRCIsInVzZXJQb29sQ2xpZW50SWQiLCJORVhUX1BVQkxJQ19BVVRIX1VTRVJfUE9PTF9DTElFTlRfSUQiLCJpZGVudGl0eVBvb2xJZCIsIk5FWFRfUFVCTElDX0FVVEhfSURFTlRJVFlfUE9PTF9JRCIsInJlZ2lvbiIsIk5FWFRfUFVCTElDX0FVVEhfUkVHSU9OIiwiQVBJIiwiR3JhcGhRTCIsImVuZHBvaW50IiwiTkVYVF9QVUJMSUNfQVBJX0VORFBPSU5UIiwiTkVYVF9QVUJMSUNfQVBJX1JFR0lPTiIsImFwaUtleSIsIk5FWFRfUFVCTElDX0FNUExJRllfQVBJX0tFWSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/amplify-config.ts\n");

/***/ }),

/***/ "./src/lib/auth-provider.tsx":
/*!***********************************!*\
  !*** ./src/lib/auth-provider.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth-service */ \"./src/lib/auth-service.ts\");\n/* harmony import */ var _cookie_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookie-manager */ \"./src/lib/cookie-manager.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_auth_service__WEBPACK_IMPORTED_MODULE_2__]);\n_auth_service__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Create the context with a default value\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component that wraps your app and makes auth object available to any child component\nfunction AuthProvider({ children }) {\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Function to check authentication status and update state\n    const checkAuth = async ()=>{\n        try {\n            setIsLoading(true);\n            // Check if user is authenticated\n            const authenticated = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.isAuthenticated();\n            setIsAuthenticated(authenticated);\n            // If authenticated, get user info\n            if (authenticated) {\n                const currentUser = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.getCurrentUser();\n                const attributes = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.getUserAttributes();\n                setUser({\n                    ...currentUser,\n                    attributes\n                });\n            } else {\n                setUser(null);\n            }\n        } catch (error) {\n            console.error(\"Error checking authentication:\", error);\n            setIsAuthenticated(false);\n            setUser(null);\n            // Try fixing cookie issues if auth check fails\n            (0,_cookie_manager__WEBPACK_IMPORTED_MODULE_3__.fixProblemCookies)();\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Check auth status when the component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkAuth();\n        // Set up a refresh interval to periodically check authentication status\n        // Only check every 10 minutes instead of 5 for better performance\n        const interval = setInterval(async ()=>{\n            try {\n                const authenticated = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.isAuthenticated();\n                if (authenticated !== isAuthenticated) {\n                    checkAuth();\n                }\n            } catch (error) {\n                console.error(\"Error refreshing authentication status\");\n            }\n        }, 10 * 60 * 1000); // Check every 10 minutes\n        return ()=>clearInterval(interval);\n    }, [\n        isAuthenticated\n    ]);\n    // Login function that uses AuthService\n    const login = async (username, password)=>{\n        const result = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.signIn({\n            username,\n            password\n        });\n        if (result.isSuccess) {\n            await checkAuth();\n        }\n        return result;\n    };\n    // Logout function\n    const logout = async ()=>{\n        await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.signOut();\n        await checkAuth();\n    };\n    // Wrapper for signup that refreshes auth state on success\n    const signUp = async (params)=>{\n        const result = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.signUp(params);\n        return result;\n    };\n    // Wrapper for completeNewPassword\n    const completeNewPassword = async (newPassword)=>{\n        const result = await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.completeNewPassword(newPassword);\n        if (result.isSuccess) {\n            await checkAuth();\n        }\n        return result;\n    };\n    // Function to manually refresh auth state\n    const refreshAuthState = async ()=>{\n        try {\n            // Call the new method to force refresh token validation\n            await _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.refreshAuthState();\n            // Then check auth status again\n            await checkAuth();\n            // If we've refreshed multiple times without success, try a hard reload\n            if (false) {}\n        } catch (error) {\n            console.error(\"Error refreshing auth state:\", error);\n        }\n    };\n    // Provide the auth context value\n    const contextValue = {\n        isAuthenticated,\n        isLoading,\n        user,\n        login,\n        logout,\n        signUp,\n        confirmSignUp: _auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService.confirmSignUp,\n        completeNewPassword,\n        refreshAuthState\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/lib/auth-provider.tsx\",\n        lineNumber: 157,\n        columnNumber: 10\n    }, this);\n}\n// Custom hook to use the auth context\nfunction useAuth() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2F1dGgtcHJvdmlkZXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUF5RjtBQUM1QztBQUNRO0FBbUJyRCwwQ0FBMEM7QUFDMUMsTUFBTU8sNEJBQWNOLG9EQUFhQSxDQUE4Qk87QUFFL0QsZ0dBQWdHO0FBQ3pGLFNBQVNDLGFBQWEsRUFBRUMsUUFBUSxFQUEyQjtJQUNoRSxNQUFNLENBQUNDLGlCQUFpQkMsbUJBQW1CLEdBQUdULCtDQUFRQSxDQUFVO0lBQ2hFLE1BQU0sQ0FBQ1UsV0FBV0MsYUFBYSxHQUFHWCwrQ0FBUUEsQ0FBVTtJQUNwRCxNQUFNLENBQUNZLE1BQU1DLFFBQVEsR0FBR2IsK0NBQVFBLENBQU07SUFFdEMsMkRBQTJEO0lBQzNELE1BQU1jLFlBQVk7UUFDaEIsSUFBSTtZQUNGSCxhQUFhO1lBRWIsaUNBQWlDO1lBQ2pDLE1BQU1JLGdCQUFnQixNQUFNYixzREFBV0EsQ0FBQ00sZUFBZTtZQUN2REMsbUJBQW1CTTtZQUVuQixrQ0FBa0M7WUFDbEMsSUFBSUEsZUFBZTtnQkFDakIsTUFBTUMsY0FBYyxNQUFNZCxzREFBV0EsQ0FBQ2UsY0FBYztnQkFDcEQsTUFBTUMsYUFBYSxNQUFNaEIsc0RBQVdBLENBQUNpQixpQkFBaUI7Z0JBQ3RETixRQUFRO29CQUFFLEdBQUdHLFdBQVc7b0JBQUVFO2dCQUFXO1lBQ3ZDLE9BQU87Z0JBQ0xMLFFBQVE7WUFDVjtRQUNGLEVBQUUsT0FBT08sT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsa0NBQWtDQTtZQUNoRFgsbUJBQW1CO1lBQ25CSSxRQUFRO1lBRVIsK0NBQStDO1lBQy9DVixrRUFBaUJBO1FBQ25CLFNBQVU7WUFDUlEsYUFBYTtRQUNmO0lBQ0Y7SUFFQSw4Q0FBOEM7SUFDOUNWLGdEQUFTQSxDQUFDO1FBQ1JhO1FBRUEsd0VBQXdFO1FBQ3hFLGtFQUFrRTtRQUNsRSxNQUFNUSxXQUFXQyxZQUFZO1lBQzNCLElBQUk7Z0JBQ0YsTUFBTVIsZ0JBQWdCLE1BQU1iLHNEQUFXQSxDQUFDTSxlQUFlO2dCQUN2RCxJQUFJTyxrQkFBa0JQLGlCQUFpQjtvQkFDckNNO2dCQUNGO1lBQ0YsRUFBRSxPQUFPTSxPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUM7WUFDaEI7UUFDRixHQUFHLEtBQUssS0FBSyxPQUFPLHlCQUF5QjtRQUU3QyxPQUFPLElBQU1JLGNBQWNGO0lBQzdCLEdBQUc7UUFBQ2Q7S0FBZ0I7SUFFcEIsdUNBQXVDO0lBQ3ZDLE1BQU1pQixRQUFRLE9BQU9DLFVBQWtCQztRQUNyQyxNQUFNQyxTQUFTLE1BQU0xQixzREFBV0EsQ0FBQzJCLE1BQU0sQ0FBQztZQUFFSDtZQUFVQztRQUFTO1FBQzdELElBQUlDLE9BQU9FLFNBQVMsRUFBRTtZQUNwQixNQUFNaEI7UUFDUjtRQUNBLE9BQU9jO0lBQ1Q7SUFFQSxrQkFBa0I7SUFDbEIsTUFBTUcsU0FBUztRQUNiLE1BQU03QixzREFBV0EsQ0FBQzhCLE9BQU87UUFDekIsTUFBTWxCO0lBQ1I7SUFFQSwwREFBMEQ7SUFDMUQsTUFBTW1CLFNBQVMsT0FBT0M7UUFDcEIsTUFBTU4sU0FBUyxNQUFNMUIsc0RBQVdBLENBQUMrQixNQUFNLENBQUNDO1FBQ3hDLE9BQU9OO0lBQ1Q7SUFFQSxrQ0FBa0M7SUFDbEMsTUFBTU8sc0JBQXNCLE9BQU9DO1FBQ2pDLE1BQU1SLFNBQVMsTUFBTTFCLHNEQUFXQSxDQUFDaUMsbUJBQW1CLENBQUNDO1FBQ3JELElBQUlSLE9BQU9FLFNBQVMsRUFBRTtZQUNwQixNQUFNaEI7UUFDUjtRQUNBLE9BQU9jO0lBQ1Q7SUFFQSwwQ0FBMEM7SUFDMUMsTUFBTVMsbUJBQW1CO1FBQ3ZCLElBQUk7WUFDRix3REFBd0Q7WUFDeEQsTUFBTW5DLHNEQUFXQSxDQUFDbUMsZ0JBQWdCO1lBQ2xDLCtCQUErQjtZQUMvQixNQUFNdkI7WUFFTix1RUFBdUU7WUFDdkUsSUFBSSxLQUFrQixFQUFhLEVBbUJsQztRQUNILEVBQUUsT0FBT00sT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtRQUNoRDtJQUNGO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU0wQixlQUFnQztRQUNwQ3RDO1FBQ0FFO1FBQ0FFO1FBQ0FhO1FBQ0FNO1FBQ0FFO1FBQ0FjLGVBQWU3QyxzREFBV0EsQ0FBQzZDLGFBQWE7UUFDeENaO1FBQ0FFO0lBQ0Y7SUFFQSxxQkFBTyw4REFBQ2pDLFlBQVk0QyxRQUFRO1FBQUNDLE9BQU9IO2tCQUFldkM7Ozs7OztBQUNyRDtBQUVBLHNDQUFzQztBQUMvQixTQUFTMkM7SUFDZCxNQUFNQyxVQUFVcEQsaURBQVVBLENBQUNLO0lBQzNCLElBQUkrQyxZQUFZOUMsV0FBVztRQUN6QixNQUFNLElBQUkrQyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cnZleS1saW5rLXdyYXBwZXIvLi9zcmMvbGliL2F1dGgtcHJvdmlkZXIudHN4Pzc1OGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlLCB1c2VFZmZlY3QsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEF1dGhTZXJ2aWNlIH0gZnJvbSAnLi9hdXRoLXNlcnZpY2UnO1xuaW1wb3J0IHsgZml4UHJvYmxlbUNvb2tpZXMgfSBmcm9tICcuL2Nvb2tpZS1tYW5hZ2VyJztcblxuLy8gUmVtb3ZlIGltcG9ydCB7IGNvbmZpZ3VyZUFtcGxpZnkgfSBmcm9tICcuL2FtcGxpZnktY29uZmlnJztcbi8vIElmIHlvdSBuZWVkIGNvbmZpZywgdXNlOlxuLy8gaW1wb3J0IHsgZ2V0QW1wbGlmeUNvbmZpZyB9IGZyb20gJy4vYW1wbGlmeS1jb25maWcnO1xuXG4vLyBEZWZpbmUgdGhlIGF1dGhlbnRpY2F0aW9uIGNvbnRleHQgdHlwZVxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VHlwZSB7XG4gIGlzQXV0aGVudGljYXRlZDogYm9vbGVhbjtcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuICB1c2VyOiBhbnk7XG4gIGxvZ2luOiAodXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4gUHJvbWlzZTxhbnk+O1xuICBsb2dvdXQ6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIHNpZ25VcDogKHBhcmFtczogYW55KSA9PiBQcm9taXNlPGFueT47XG4gIGNvbmZpcm1TaWduVXA6ICh1c2VybmFtZTogc3RyaW5nLCBjb2RlOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIGNvbXBsZXRlTmV3UGFzc3dvcmQ6IChuZXdQYXNzd29yZDogc3RyaW5nKSA9PiBQcm9taXNlPGFueT47XG4gIHJlZnJlc2hBdXRoU3RhdGU6ICgpID0+IFByb21pc2U8dm9pZD47XG59XG5cbi8vIENyZWF0ZSB0aGUgY29udGV4dCB3aXRoIGEgZGVmYXVsdCB2YWx1ZVxuY29uc3QgQXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0PEF1dGhDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuLy8gUHJvdmlkZXIgY29tcG9uZW50IHRoYXQgd3JhcHMgeW91ciBhcHAgYW5kIG1ha2VzIGF1dGggb2JqZWN0IGF2YWlsYWJsZSB0byBhbnkgY2hpbGQgY29tcG9uZW50XG5leHBvcnQgZnVuY3Rpb24gQXV0aFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW2lzQXV0aGVudGljYXRlZCwgc2V0SXNBdXRoZW50aWNhdGVkXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZTxhbnk+KG51bGwpO1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGNoZWNrIGF1dGhlbnRpY2F0aW9uIHN0YXR1cyBhbmQgdXBkYXRlIHN0YXRlXG4gIGNvbnN0IGNoZWNrQXV0aCA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgXG4gICAgICAvLyBDaGVjayBpZiB1c2VyIGlzIGF1dGhlbnRpY2F0ZWRcbiAgICAgIGNvbnN0IGF1dGhlbnRpY2F0ZWQgPSBhd2FpdCBBdXRoU2VydmljZS5pc0F1dGhlbnRpY2F0ZWQoKTtcbiAgICAgIHNldElzQXV0aGVudGljYXRlZChhdXRoZW50aWNhdGVkKTtcbiAgICAgIFxuICAgICAgLy8gSWYgYXV0aGVudGljYXRlZCwgZ2V0IHVzZXIgaW5mb1xuICAgICAgaWYgKGF1dGhlbnRpY2F0ZWQpIHtcbiAgICAgICAgY29uc3QgY3VycmVudFVzZXIgPSBhd2FpdCBBdXRoU2VydmljZS5nZXRDdXJyZW50VXNlcigpO1xuICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0gYXdhaXQgQXV0aFNlcnZpY2UuZ2V0VXNlckF0dHJpYnV0ZXMoKTtcbiAgICAgICAgc2V0VXNlcih7IC4uLmN1cnJlbnRVc2VyLCBhdHRyaWJ1dGVzIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0VXNlcihudWxsKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hlY2tpbmcgYXV0aGVudGljYXRpb246JywgZXJyb3IpO1xuICAgICAgc2V0SXNBdXRoZW50aWNhdGVkKGZhbHNlKTtcbiAgICAgIHNldFVzZXIobnVsbCk7XG4gICAgICBcbiAgICAgIC8vIFRyeSBmaXhpbmcgY29va2llIGlzc3VlcyBpZiBhdXRoIGNoZWNrIGZhaWxzXG4gICAgICBmaXhQcm9ibGVtQ29va2llcygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBDaGVjayBhdXRoIHN0YXR1cyB3aGVuIHRoZSBjb21wb25lbnQgbW91bnRzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2hlY2tBdXRoKCk7XG4gICAgXG4gICAgLy8gU2V0IHVwIGEgcmVmcmVzaCBpbnRlcnZhbCB0byBwZXJpb2RpY2FsbHkgY2hlY2sgYXV0aGVudGljYXRpb24gc3RhdHVzXG4gICAgLy8gT25seSBjaGVjayBldmVyeSAxMCBtaW51dGVzIGluc3RlYWQgb2YgNSBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlXG4gICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBhdXRoZW50aWNhdGVkID0gYXdhaXQgQXV0aFNlcnZpY2UuaXNBdXRoZW50aWNhdGVkKCk7XG4gICAgICAgIGlmIChhdXRoZW50aWNhdGVkICE9PSBpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICAgICAgICBjaGVja0F1dGgoKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVmcmVzaGluZyBhdXRoZW50aWNhdGlvbiBzdGF0dXMnKTtcbiAgICAgIH1cbiAgICB9LCAxMCAqIDYwICogMTAwMCk7IC8vIENoZWNrIGV2ZXJ5IDEwIG1pbnV0ZXNcbiAgICBcbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtpc0F1dGhlbnRpY2F0ZWRdKTtcblxuICAvLyBMb2dpbiBmdW5jdGlvbiB0aGF0IHVzZXMgQXV0aFNlcnZpY2VcbiAgY29uc3QgbG9naW4gPSBhc3luYyAodXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEF1dGhTZXJ2aWNlLnNpZ25Jbih7IHVzZXJuYW1lLCBwYXNzd29yZCB9KTtcbiAgICBpZiAocmVzdWx0LmlzU3VjY2Vzcykge1xuICAgICAgYXdhaXQgY2hlY2tBdXRoKCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gTG9nb3V0IGZ1bmN0aW9uXG4gIGNvbnN0IGxvZ291dCA9IGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBBdXRoU2VydmljZS5zaWduT3V0KCk7XG4gICAgYXdhaXQgY2hlY2tBdXRoKCk7XG4gIH07XG5cbiAgLy8gV3JhcHBlciBmb3Igc2lnbnVwIHRoYXQgcmVmcmVzaGVzIGF1dGggc3RhdGUgb24gc3VjY2Vzc1xuICBjb25zdCBzaWduVXAgPSBhc3luYyAocGFyYW1zOiBhbnkpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBBdXRoU2VydmljZS5zaWduVXAocGFyYW1zKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIFdyYXBwZXIgZm9yIGNvbXBsZXRlTmV3UGFzc3dvcmRcbiAgY29uc3QgY29tcGxldGVOZXdQYXNzd29yZCA9IGFzeW5jIChuZXdQYXNzd29yZDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgQXV0aFNlcnZpY2UuY29tcGxldGVOZXdQYXNzd29yZChuZXdQYXNzd29yZCk7XG4gICAgaWYgKHJlc3VsdC5pc1N1Y2Nlc3MpIHtcbiAgICAgIGF3YWl0IGNoZWNrQXV0aCgpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIEZ1bmN0aW9uIHRvIG1hbnVhbGx5IHJlZnJlc2ggYXV0aCBzdGF0ZVxuICBjb25zdCByZWZyZXNoQXV0aFN0YXRlID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBDYWxsIHRoZSBuZXcgbWV0aG9kIHRvIGZvcmNlIHJlZnJlc2ggdG9rZW4gdmFsaWRhdGlvblxuICAgICAgYXdhaXQgQXV0aFNlcnZpY2UucmVmcmVzaEF1dGhTdGF0ZSgpO1xuICAgICAgLy8gVGhlbiBjaGVjayBhdXRoIHN0YXR1cyBhZ2FpblxuICAgICAgYXdhaXQgY2hlY2tBdXRoKCk7XG4gICAgICBcbiAgICAgIC8vIElmIHdlJ3ZlIHJlZnJlc2hlZCBtdWx0aXBsZSB0aW1lcyB3aXRob3V0IHN1Y2Nlc3MsIHRyeSBhIGhhcmQgcmVsb2FkXG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3Qgd2luID0gd2luZG93IGFzIGFueTtcbiAgICAgICAgaWYgKHdpbi5fYXV0aFJlZnJlc2hDb3VudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgd2luLl9hdXRoUmVmcmVzaENvdW50ID0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW4uX2F1dGhSZWZyZXNoQ291bnQrKztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHdpbi5fYXV0aFJlZnJlc2hDb3VudCA+IDIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnTXVsdGlwbGUgYXV0aCByZWZyZXNoZXMgYXR0ZW1wdGVkLCB0cnlpbmcgaGFyZCByZWxvYWQnKTtcbiAgICAgICAgICB3aW4uX2F1dGhSZWZyZXNoQ291bnQgPSAwO1xuICAgICAgICAgIC8vIE9ubHkgcmVsb2FkIGlmIHdlJ3JlIG9uIGEgcGFnZSB0aGF0IG5lZWRzIGF1dGhcbiAgICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hZG1pbicpICYmIFxuICAgICAgICAgICAgICAhd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hZG1pbi9sb2dpbicpICYmIFxuICAgICAgICAgICAgICAhd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hZG1pbi9zaWdudXAnKSAmJiBcbiAgICAgICAgICAgICAgIXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zdGFydHNXaXRoKCcvYWRtaW4vdmVyaWZ5JykpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVmcmVzaGluZyBhdXRoIHN0YXRlOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gUHJvdmlkZSB0aGUgYXV0aCBjb250ZXh0IHZhbHVlXG4gIGNvbnN0IGNvbnRleHRWYWx1ZTogQXV0aENvbnRleHRUeXBlID0ge1xuICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICBpc0xvYWRpbmcsXG4gICAgdXNlcixcbiAgICBsb2dpbixcbiAgICBsb2dvdXQsXG4gICAgc2lnblVwLFxuICAgIGNvbmZpcm1TaWduVXA6IEF1dGhTZXJ2aWNlLmNvbmZpcm1TaWduVXAsXG4gICAgY29tcGxldGVOZXdQYXNzd29yZCxcbiAgICByZWZyZXNoQXV0aFN0YXRlXG4gIH07XG5cbiAgcmV0dXJuIDxBdXRoQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dFZhbHVlfT57Y2hpbGRyZW59PC9BdXRoQ29udGV4dC5Qcm92aWRlcj47XG59XG5cbi8vIEN1c3RvbSBob29rIHRvIHVzZSB0aGUgYXV0aCBjb250ZXh0XG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXV0aENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VBdXRoIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gQXV0aFByb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkF1dGhTZXJ2aWNlIiwiZml4UHJvYmxlbUNvb2tpZXMiLCJBdXRoQ29udGV4dCIsInVuZGVmaW5lZCIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwiaXNBdXRoZW50aWNhdGVkIiwic2V0SXNBdXRoZW50aWNhdGVkIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwidXNlciIsInNldFVzZXIiLCJjaGVja0F1dGgiLCJhdXRoZW50aWNhdGVkIiwiY3VycmVudFVzZXIiLCJnZXRDdXJyZW50VXNlciIsImF0dHJpYnV0ZXMiLCJnZXRVc2VyQXR0cmlidXRlcyIsImVycm9yIiwiY29uc29sZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicmVzdWx0Iiwic2lnbkluIiwiaXNTdWNjZXNzIiwibG9nb3V0Iiwic2lnbk91dCIsInNpZ25VcCIsInBhcmFtcyIsImNvbXBsZXRlTmV3UGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsInJlZnJlc2hBdXRoU3RhdGUiLCJ3aW4iLCJ3aW5kb3ciLCJfYXV0aFJlZnJlc2hDb3VudCIsImxvZyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwicmVsb2FkIiwiY29udGV4dFZhbHVlIiwiY29uZmlybVNpZ25VcCIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VBdXRoIiwiY29udGV4dCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/auth-provider.tsx\n");

/***/ }),

/***/ "./src/lib/auth-service.ts":
/*!*********************************!*\
  !*** ./src/lib/auth-service.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthService: () => (/* binding */ AuthService)\n/* harmony export */ });\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify/auth */ \"aws-amplify/auth\");\n/* harmony import */ var _amplify_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./amplify-config */ \"./src/lib/amplify-config.ts\");\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aws-amplify */ \"aws-amplify\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_2__]);\n([aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__, aws_amplify__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Initialize Amplify with config (client-side only, and with required fields)\nif (false) {}\n/**\n * Service to handle AWS Cognito authentication\n */ class AuthService {\n    static{\n        this.sessionCheckPromise = null;\n    }\n    static{\n        this.lastSessionCheck = 0;\n    }\n    static{\n        this.sessionCheckInterval = 30000 // 30 seconds\n        ;\n    }\n    static{\n        this.forceRefresh = false;\n    }\n    /**\n   * Sign up a new user\n   */ static async signUp(params) {\n        try {\n            const { username, password, email, firstName, lastName } = params;\n            const attributes = {\n                email,\n                ...firstName && {\n                    name: firstName\n                },\n                ...lastName && {\n                    family_name: lastName\n                }\n            };\n            const result = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.signUp)({\n                username,\n                password,\n                options: {\n                    userAttributes: attributes\n                }\n            });\n            return {\n                isSuccess: true,\n                message: \"Sign up successful! Please check your email for a verification code.\",\n                data: result\n            };\n        } catch (error) {\n            console.error(\"Sign up error:\", error);\n            if (error.name === \"UsernameExistsException\") {\n                return {\n                    isSuccess: false,\n                    message: \"This username is already taken. Please try another one.\"\n                };\n            }\n            return {\n                isSuccess: false,\n                message: error.message || \"Failed to sign up. Please try again.\"\n            };\n        }\n    }\n    /**\n   * Sign in a user\n   */ static async signIn(params) {\n        try {\n            // Clear any existing auth cookies before signing in to prevent conflicts\n            if (typeof document !== \"undefined\") {\n                document.cookie.split(\";\").forEach((cookie)=>{\n                    const [name] = cookie.split(\"=\").map((c)=>c.trim());\n                    if (name.includes(\"CognitoIdentityServiceProvider\") || name.includes(\"amplify\") || name.includes(\"Token\")) {\n                        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n                    }\n                });\n            }\n            const { username, password } = params;\n            const result = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.signIn)({\n                username,\n                password\n            });\n            // Wait for session to be established\n            await new Promise((resolve)=>setTimeout(resolve, 500));\n            await this.waitForSession();\n            return {\n                isSuccess: true,\n                message: \"Successfully signed in\",\n                data: result,\n                nextStep: result.nextStep\n            };\n        } catch (error) {\n            console.error(\"Sign in error:\", error);\n            if (error.name === \"UserNotConfirmedException\") {\n                return {\n                    isSuccess: false,\n                    message: \"Please confirm your account by entering the verification code sent to your email.\"\n                };\n            }\n            if (error.name === \"NotAuthorizedException\") {\n                return {\n                    isSuccess: false,\n                    message: \"Incorrect username or password.\"\n                };\n            }\n            if (error.name === \"UserNotFoundException\") {\n                return {\n                    isSuccess: false,\n                    message: \"User does not exist.\"\n                };\n            }\n            return {\n                isSuccess: false,\n                message: error.message || \"Failed to sign in. Please try again.\"\n            };\n        }\n    }\n    /**\n   * Confirm a user's sign up with verification code\n   */ static async confirmSignUp(username, code) {\n        try {\n            await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.confirmSignUp)({\n                username,\n                confirmationCode: code\n            });\n        } catch (error) {\n            console.error(\"Confirm sign up error:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Sign out the current user\n   */ static async signOut() {\n        try {\n            await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.signOut)({\n                global: true\n            });\n            this.lastSessionCheck = 0;\n            this.sessionCheckPromise = null;\n            // Clear all auth-related cookies manually after signout\n            if (typeof document !== \"undefined\") {\n                document.cookie.split(\";\").forEach((cookie)=>{\n                    const [name] = cookie.split(\"=\").map((c)=>c.trim());\n                    if (name.includes(\"CognitoIdentityServiceProvider\") || name.includes(\"amplify\") || name.includes(\"Token\") || name.includes(\"auth\")) {\n                        console.log(\"Clearing cookie after signout:\", name);\n                        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n                    }\n                });\n            }\n            // If we're in a browser, redirect to login page after signout\n            if (false) {}\n        } catch (error) {\n            console.error(\"Sign out error:\", error);\n            // Even if there was an error, try to clear cookies\n            if (typeof document !== \"undefined\") {\n                document.cookie.split(\";\").forEach((cookie)=>{\n                    const [name] = cookie.split(\"=\").map((c)=>c.trim());\n                    if (name.includes(\"CognitoIdentityServiceProvider\") || name.includes(\"amplify\") || name.includes(\"Token\")) {\n                        document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n                    }\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n   * Get the current authenticated user\n   */ static async getCurrentUser() {\n        try {\n            const user = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.getCurrentUser)();\n            return user;\n        } catch (error) {\n            return null;\n        }\n    }\n    /**\n   * Wait for a valid session to be established\n   */ static async waitForSession(maxAttempts = 5) {\n        for(let i = 0; i < maxAttempts; i++){\n            try {\n                await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n                return true;\n            } catch (error) {\n                if (i === maxAttempts - 1) {\n                    return false;\n                }\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            }\n        }\n        return false;\n    }\n    /**\n   * Check if a user is authenticated with caching\n   */ static async isAuthenticated() {\n        const now = Date.now();\n        // Skip cache when force refresh happens\n        if (this.forceRefresh) {\n            this.forceRefresh = false;\n            this.lastSessionCheck = 0;\n            this.sessionCheckPromise = null;\n        }\n        // Return cached result if still valid and not too old\n        if (this.sessionCheckPromise && now - this.lastSessionCheck < this.sessionCheckInterval) {\n            return this.sessionCheckPromise;\n        }\n        // Create new check promise with better error handling\n        this.sessionCheckPromise = (async ()=>{\n            try {\n                const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n                const isValid = !!session.tokens?.accessToken;\n                if (isValid) {\n                    console.log(\"Valid authentication session found\");\n                } else {\n                    console.log(\"No valid authentication session\");\n                }\n                return isValid;\n            } catch (error) {\n                console.error(\"Error checking authentication:\", error);\n                // If we get a \"No current user\" error, definitely not authenticated\n                if (error instanceof Error && error.message.includes(\"No current user\")) {\n                    return false;\n                }\n                // For other errors, we can't be sure, default to not authenticated\n                return false;\n            }\n        })();\n        this.lastSessionCheck = now;\n        return this.sessionCheckPromise;\n    }\n    /**\n   * Get the current user's attributes\n   */ static async getUserAttributes() {\n        try {\n            const attributes = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchUserAttributes)();\n            return attributes;\n        } catch (error) {\n            return null;\n        }\n    }\n    /**\n   * Update user attributes\n   */ static async updateUserAttributes(attributes) {\n        try {\n            await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.updateUserAttributes)({\n                userAttributes: attributes\n            });\n            return {\n                isSuccess: true,\n                message: \"User attributes updated successfully.\"\n            };\n        } catch (error) {\n            console.error(\"Update user attributes error:\", error);\n            return {\n                isSuccess: false,\n                message: error.message || \"Failed to update user attributes.\"\n            };\n        }\n    }\n    /**\n   * Complete new password challenge\n   */ static async completeNewPassword(newPassword) {\n        try {\n            const result = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.confirmSignIn)({\n                challengeResponse: newPassword\n            });\n            // Wait for session to be established after password change\n            await this.waitForSession();\n            return {\n                isSuccess: result.isSignedIn,\n                message: \"Password set successfully.\"\n            };\n        } catch (error) {\n            console.error(\"Complete new password error:\", error);\n            return {\n                isSuccess: false,\n                message: error.message || \"Failed to set new password.\"\n            };\n        }\n    }\n    /**\n   * Get current user's ID token\n   */ static async getIdToken() {\n        try {\n            const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n            return session.tokens?.idToken?.toString() || null;\n        } catch (error) {\n            console.error(\"Error getting ID token:\", error);\n            return null;\n        }\n    }\n    /**\n   * Force a refresh of the authentication state\n   */ static async refreshAuthState() {\n        this.forceRefresh = true;\n        this.lastSessionCheck = 0;\n        this.sessionCheckPromise = null;\n        try {\n            // Try to fetch the auth session to refresh the tokens\n            const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_0__.fetchAuthSession)();\n            console.log(\"Auth session refreshed successfully\", {\n                hasIdToken: !!session.tokens?.idToken,\n                hasAccessToken: !!session.tokens?.accessToken,\n                // Check for tokens object existence instead of specific refreshToken property\n                hasTokens: !!session.tokens\n            });\n        } catch (error) {\n            console.error(\"Error refreshing auth session:\", error);\n            // Clear problematic cookies if there's an error\n            if (false) {}\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/auth-service.ts\n");

/***/ }),

/***/ "./src/lib/cookie-manager.ts":
/*!***********************************!*\
  !*** ./src/lib/cookie-manager.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAuthCookies: () => (/* binding */ clearAuthCookies),\n/* harmony export */   deleteCookie: () => (/* binding */ deleteCookie),\n/* harmony export */   fixProblemCookies: () => (/* binding */ fixProblemCookies),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   getCookieDomain: () => (/* binding */ getCookieDomain),\n/* harmony export */   initCookieFixes: () => (/* binding */ initCookieFixes),\n/* harmony export */   setCookie: () => (/* binding */ setCookie)\n/* harmony export */ });\n/**\n * Cookie manager utility for handling authentication cookies\n */ // Get a cookie by name\nfunction getCookie(name) {\n    if (typeof document === \"undefined\") return null;\n    const cookieValue = document.cookie.split(\"; \").find((row)=>row.startsWith(`${name}=`))?.split(\"=\")[1];\n    return cookieValue ? decodeURIComponent(cookieValue) : null;\n}\n// Set a cookie with domain and expiration\nfunction setCookie(name, value, options = {}) {\n    if (typeof document === \"undefined\") return;\n    const { days = 7, path = \"/\", domain, secure = true, sameSite = \"lax\" } = options;\n    // Calculate expiration\n    const expires = new Date();\n    expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);\n    // Build the cookie string\n    let cookieString = `${name}=${encodeURIComponent(value)}; expires=${expires.toUTCString()}; path=${path}`;\n    if (domain) {\n        cookieString += `; domain=${domain}`;\n    }\n    if (secure) {\n        cookieString += \"; secure\";\n    }\n    cookieString += `; samesite=${sameSite}`;\n    document.cookie = cookieString;\n}\n// Delete a cookie\nfunction deleteCookie(name, options = {}) {\n    if (typeof document === \"undefined\") return;\n    const { path = \"/\", domain } = options;\n    // Set expiration to the past to delete\n    let cookieString = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\n    if (domain) {\n        cookieString += `; domain=${domain}`;\n    }\n    document.cookie = cookieString;\n}\n// Get current domain for cookie operations\nfunction getCookieDomain() {\n    if (true) return undefined;\n    const hostname = window.location.hostname;\n    // Don't set domain for localhost\n    if (hostname === \"localhost\" || hostname === \"127.0.0.1\") {\n        return undefined;\n    }\n    // For amplifyapp.com domain, use the full hostname\n    if (hostname.includes(\"amplifyapp.com\")) {\n        return hostname;\n    }\n    // For custom domains, use the domain itself (no need to handle subdomains anymore)\n    return hostname;\n}\n// Clear all cookies related to authentication\nfunction clearAuthCookies() {\n    if (typeof document === \"undefined\") return;\n    const domain = getCookieDomain();\n    // Common authentication-related cookies\n    const authCookies = [\n        \"amplify-signin-with-hostedUI\",\n        \"amplify-redirected-from-hosted-ui\",\n        \"amplify.auth.tokens\",\n        \"CognitoIdentityServiceProvider.*\",\n        \"amazon-cognito-advanced-security-data\",\n        \"aws.cognito.*\",\n        \"idToken\",\n        \"accessToken\",\n        \"refreshToken\",\n        \"auth_tokens\",\n        \"CognitoIdentityServiceProvider.*\",\n        \"Authorization\"\n    ];\n    // Delete all authentication cookies\n    authCookies.forEach((cookieName)=>{\n        if (cookieName.includes(\"*\")) {\n            // For pattern cookies, we need to find all matches\n            document.cookie.split(\";\").forEach((cookie)=>{\n                const name = cookie.split(\"=\")[0].trim();\n                if (name.includes(cookieName.replace(\"*\", \"\"))) {\n                    deleteCookie(name, {\n                        domain\n                    });\n                    // Also try with no domain to catch all\n                    deleteCookie(name);\n                }\n            });\n        } else {\n            deleteCookie(cookieName, {\n                domain\n            });\n            // Also try with no domain to catch all\n            deleteCookie(cookieName);\n        }\n    });\n    // Reset redirect count\n    setCookie(\"redirect_count\", \"0\", {\n        days: 1\n    });\n    console.log(\"All authentication cookies cleared\");\n}\n// Fix any problem cookies that might be causing redirect loops\nfunction fixProblemCookies() {\n    if (typeof document === \"undefined\") return;\n    // Reset redirect count to prevent loop detection from blocking legitimate redirects\n    setCookie(\"redirect_count\", \"0\", {\n        days: 1\n    });\n    // Check for auth-related cookies with incorrect settings\n    const authHeaderCookie = getCookie(\"Authorization\");\n    if (authHeaderCookie) {\n        // If auth is stored in a header cookie, it might be causing issues - clear it\n        deleteCookie(\"Authorization\");\n    }\n    // Get the current domain\n    const hostname = window.location.hostname;\n    // Try to fix auth cookies - first check if we can detect any bad ones\n    const cookiesToCheck = [\n        \"amplify-signin-with-hostedUI\",\n        \"amplify-redirected-from-hosted-ui\",\n        \"idToken\",\n        \"accessToken\",\n        \"refreshToken\"\n    ];\n    // Log cookie state for debugging\n    console.log(\"Checking cookies state...\");\n    // Check each cookie and fix if needed\n    let problemFound = false;\n    cookiesToCheck.forEach((cookieName)=>{\n        const cookieValue = getCookie(cookieName);\n        if (cookieValue) {\n            console.log(`Found potentially problematic cookie: ${cookieName}`);\n            problemFound = true;\n            // Delete the cookie and set again with correct domain\n            deleteCookie(cookieName);\n            deleteCookie(cookieName, {\n                domain: hostname\n            });\n        }\n    });\n    // If we found problems, attempt a more thorough cleanup\n    if (problemFound) {\n        console.log(\"Performing thorough cookie cleanup\");\n        clearAuthCookies();\n    }\n    // Check for any infinite redirect related query params\n    if (false) {}\n}\n// Initialize cookie fixes when the page loads\nfunction initCookieFixes() {\n    if (true) return;\n    // Function to run when the page loads\n    const fixCookiesOnLoad = ()=>{\n        // Reset redirect count and fix any other problem cookies\n        fixProblemCookies();\n        // Check the URL for signs of redirect loop\n        if (window.location.href.includes(\"ERR_TOO_MANY_REDIRECTS\") || window.location.href.includes(\"error=redirect_loop\")) {\n            // If there's a redirect loop indication, clear all auth cookies\n            console.log(\"Detected redirect loop, clearing all authentication cookies\");\n            clearAuthCookies();\n            // Reload the page to break the loop\n            window.location.href = window.location.origin + \"/admin/login?fixed=true\";\n        }\n        // Check if there's a fixed=true parameter to handle a previously detected redirect loop\n        if (window.location.href.includes(\"fixed=true\")) {\n            console.log(\"Fixed parameter detected, clearing all authentication cookies again\");\n            // Double check that all cookies are cleared\n            clearAuthCookies();\n        }\n    };\n    // Run fixes when DOM content is loaded\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", fixCookiesOnLoad);\n    } else {\n        // DOM already loaded, run immediately\n        fixCookiesOnLoad();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/cookie-manager.ts\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MyApp)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_auth_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/auth-provider */ \"./src/lib/auth-provider.tsx\");\n/* harmony import */ var _lib_amplify_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/amplify-config */ \"./src/lib/amplify-config.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_auth_provider__WEBPACK_IMPORTED_MODULE_3__]);\n_lib_auth_provider__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n// If you need config, use:\nconst amplifyConfig = (0,_lib_amplify_config__WEBPACK_IMPORTED_MODULE_4__.getAmplifyConfig)();\nfunction MyApp({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Survey Link Wrapper\"\n                    }, void 0, false, {\n                        fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                        lineNumber: 14,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Wrapping third-party survey links with a validation layer\"\n                    }, void 0, false, {\n                        fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                        lineNumber: 15,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_auth_provider__WEBPACK_IMPORTED_MODULE_3__.AuthProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...pageProps\n                }, void 0, false, {\n                    fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/muneeb/Desktop/Link_Genrator_And_Wrapper_-Admin-/src/pages/_app.tsx\",\n                lineNumber: 19,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUM2QjtBQUNFO0FBQ29CO0FBQ0s7QUFFeEQsMkJBQTJCO0FBQzNCLE1BQU1HLGdCQUFnQkQscUVBQWdCQTtBQUV2QixTQUFTRSxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQzlELHFCQUNFOzswQkFDRSw4REFBQ04sa0RBQUlBOztrQ0FDSCw4REFBQ087a0NBQU07Ozs7OztrQ0FDUCw4REFBQ0M7d0JBQUtDLE1BQUs7d0JBQWNDLFNBQVE7Ozs7OztrQ0FDakMsOERBQUNDO3dCQUFLQyxLQUFJO3dCQUFPQyxNQUFLOzs7Ozs7a0NBQ3RCLDhEQUFDTDt3QkFBS0MsTUFBSzt3QkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7OzBCQUVoQyw4REFBQ1QsNERBQVlBOzBCQUNYLDRFQUFDSTtvQkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7O0FBSWhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VydmV5LWxpbmstd3JhcHBlci8uL3NyYy9wYWdlcy9fYXBwLnRzeD9mOWQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcbmltcG9ydCB7IEF1dGhQcm92aWRlciB9IGZyb20gJ0AvbGliL2F1dGgtcHJvdmlkZXInO1xuaW1wb3J0IHsgZ2V0QW1wbGlmeUNvbmZpZyB9IGZyb20gJ0AvbGliL2FtcGxpZnktY29uZmlnJztcblxuLy8gSWYgeW91IG5lZWQgY29uZmlnLCB1c2U6XG5jb25zdCBhbXBsaWZ5Q29uZmlnID0gZ2V0QW1wbGlmeUNvbmZpZygpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+U3VydmV5IExpbmsgV3JhcHBlcjwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJXcmFwcGluZyB0aGlyZC1wYXJ0eSBzdXJ2ZXkgbGlua3Mgd2l0aCBhIHZhbGlkYXRpb24gbGF5ZXJcIiAvPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9mYXZpY29uLmljb1wiIC8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVwiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8QXV0aFByb3ZpZGVyPlxuICAgICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICA8L0F1dGhQcm92aWRlcj5cbiAgICA8Lz5cbiAgKTtcbn0iXSwibmFtZXMiOlsiSGVhZCIsIkF1dGhQcm92aWRlciIsImdldEFtcGxpZnlDb25maWciLCJhbXBsaWZ5Q29uZmlnIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJ0aXRsZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCIsImxpbmsiLCJyZWwiLCJocmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "aws-amplify":
/*!******************************!*\
  !*** external "aws-amplify" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = import("aws-amplify");;

/***/ }),

/***/ "aws-amplify/auth":
/*!***********************************!*\
  !*** external "aws-amplify/auth" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = import("aws-amplify/auth");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/_app.tsx"));
module.exports = __webpack_exports__;

})();