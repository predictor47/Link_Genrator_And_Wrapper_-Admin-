"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[359],{1354:function(e,t,o){o.d(t,{Ao:function(){return w},nq:function(){return h}});var s,a,r,i,n,c,u,l=o(9556),d=o(6164);window.location.hostname;let p=!1,g=null;function h(){if(!p){if(!g)try{console.log("Using environment variables for Amplify configuration"),g={auth:{user_pool_id:"us-east-1_Gh00T12dW",aws_region:"us-east-1",user_pool_client_id:"5e5a5drp00jd43tr7ph1ceg412"},data:{url:"https://vth6pntotrhvfpxo2gwn3kzqry.appsync-api.us-east-1.amazonaws.com/graphql",aws_region:"us-east-1",api_key:"da2-ee26yqskvzfpjpquwbi53shbvu",authorization_types:["API_KEY","AMAZON_COGNITO_USER_POOLS"]}},m();return}catch(e){console.warn("Failed to load amplify_outputs.json on client:",e)}m()}}function m(){var e,t,o,s,a,r,i,n,c,u,d;g||(console.log("Using environment variables for Amplify configuration"),g={auth:{user_pool_id:"us-east-1_Gh00T12dW",user_pool_client_id:"5e5a5drp00jd43tr7ph1ceg412",identity_pool_id:"us-east-1:a0b02f73-93a3-4b52-b1cb-eaa306375a33",aws_region:"us-east-1"},data:{url:"https://vth6pntotrhvfpxo2gwn3kzqry.appsync-api.us-east-1.amazonaws.com/graphql",aws_region:"us-east-1",api_key:"da2-ee26yqskvzfpjpquwbi53shbvu"}});let h=(null===(e=g.auth)||void 0===e?void 0:e.aws_region)||(null===(t=g.data)||void 0===t?void 0:t.aws_region)||"us-east-1",m="localhost"!==window.location.hostname&&!window.location.hostname.includes("amplifyapp.com"),w=window.location.hostname,y=m?w.split(".").slice(-2).join("."):void 0;try{let e={Auth:{Cognito:{userPoolId:(null===(o=g.auth)||void 0===o?void 0:o.user_pool_id)||"",userPoolClientId:(null===(s=g.auth)||void 0===s?void 0:s.user_pool_client_id)||"",identityPoolId:(null===(a=g.auth)||void 0===a?void 0:a.identity_pool_id)||"",region:(null===(r=g.auth)||void 0===r?void 0:r.aws_region)||h,loginWith:{oauth:!1,email:!0,phone:!1,username:!0},tokenProvider:{storage:window.sessionStorage,cookieStorage:{domain:y,path:"/",expires:365,secure:m,sameSite:"strict"},disableCookieStorage:!1,enableCookieStorage:!0}}},API:{GraphQL:{endpoint:(null===(i=g.data)||void 0===i?void 0:i.url)||"",region:(null===(n=g.data)||void 0===n?void 0:n.aws_region)||h,defaultAuthMode:"apiKey",apiKey:(null===(c=g.data)||void 0===c?void 0:c.api_key)||""}}};e.region=h,l.V.configure(e),p=!0,console.log("Amplify configured in ".concat("PRODUCTION"," environment")),console.log("Using User Pool ID:",null===(u=g.auth)||void 0===u?void 0:u.user_pool_id),console.log("API Key configured:",(null===(d=g.data)||void 0===d?void 0:d.api_key)?"Yes (masked)":"No"),console.log("Cookie domain:",y||"default")}catch(e){console.error("Error configuring Amplify:",e)}}(0,d.d)();let w={Auth:{Cognito:{userPoolId:(null==g?void 0:null===(s=g.auth)||void 0===s?void 0:s.user_pool_id)||"us-east-1_Gh00T12dW",userPoolClientId:(null==g?void 0:null===(a=g.auth)||void 0===a?void 0:a.user_pool_client_id)||"5e5a5drp00jd43tr7ph1ceg412",identityPoolId:(null==g?void 0:null===(r=g.auth)||void 0===r?void 0:r.identity_pool_id)||"us-east-1:a0b02f73-93a3-4b52-b1cb-eaa306375a33",region:(null==g?void 0:null===(i=g.auth)||void 0===i?void 0:i.aws_region)||"us-east-1"}},API:{GraphQL:{endpoint:(null==g?void 0:null===(n=g.data)||void 0===n?void 0:n.url)||"https://vth6pntotrhvfpxo2gwn3kzqry.appsync-api.us-east-1.amazonaws.com/graphql",region:(null==g?void 0:null===(c=g.data)||void 0===c?void 0:c.aws_region)||"us-east-1",defaultAuthMode:"apiKey",apiKey:(null==g?void 0:null===(u=g.data)||void 0===u?void 0:u.api_key)||"da2-ee26yqskvzfpjpquwbi53shbvu"}},domains:{main:"protegeresearchsurvey.com"},environment:"production"}},6359:function(e,t,o){o.d(t,{e:function(){return h}});var s=o(2195),a=o(7271),r=o(4638),i=o(8689),n=o(6398),c=o(1231),u=o(1426),l=o(267),d=o(5566),p=o(379),g=o(3833);(0,o(1354).nq)();class h{static async signUp(e){try{let{username:t,password:o,email:a,firstName:r,lastName:i}=e,n={email:a,...r&&{name:r},...i&&{family_name:i}},c=await (0,s.y)({username:t,password:o,options:{userAttributes:n}});return{isSuccess:!0,message:"Sign up successful! Please check your email for a verification code.",data:c}}catch(e){if(console.error("Sign up error:",e),"UsernameExistsException"===e.name)return{isSuccess:!1,message:"This username is already taken. Please try another one."};if("InvalidPasswordException"===e.name)return{isSuccess:!1,message:e.message||"Password does not meet requirements."};return{isSuccess:!1,message:e.message||"Failed to sign up. Please try again later."}}}static async confirmSignUp(e,t){try{await (0,a._)({username:e,confirmationCode:t})}catch(e){throw console.error("Confirm sign up error:",e),e}}static async signIn(e){try{let{username:t,password:o}=e;return await (0,r.z)({username:t,password:o})}catch(e){if(console.error("Sign in error:",e),"UserNotConfirmedException"===e.name)throw Error("Please confirm your account by entering the verification code sent to your email.");if("NotAuthorizedException"===e.name)throw Error("Incorrect username or password.");if("UserNotFoundException"===e.name)throw Error("User does not exist.");throw e}}static async signOut(){try{await (0,i.w)()}catch(e){throw console.error("Sign out error:",e),e}}static async getCurrentUser(){try{return await (0,n.t)()}catch(e){return null}}static async getCurrentSession(){try{return await (0,n.t)()}catch(e){return null}}static async isAuthenticated(){try{return await (0,n.t)(),!0}catch(e){return!1}}static async getUserAttributes(){try{return await (0,c.v)()}catch(e){return null}}static async updateUserAttributes(e){try{return await (0,u.V)({userAttributes:e}),{isSuccess:!0,message:"User attributes updated successfully."}}catch(e){return console.error("Update user attributes error:",e),{isSuccess:!1,message:e.message||"Failed to update user attributes."}}}static async changePassword(e,t){try{if(!await (0,n.t)())throw Error("User is not authenticated");if(!(await fetch("/api/auth/change-password",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({oldPassword:e,newPassword:t})})).ok)throw Error("Failed to change password");return{isSuccess:!0,message:"Password changed successfully."}}catch(e){return console.error("Change password error:",e),{isSuccess:!1,message:e.message||"Failed to change password."}}}static async forgotPassword(e){try{return await (0,l.c)({username:e}),{isSuccess:!0,message:"Password reset code sent to your email."}}catch(e){return console.error("Forgot password error:",e),{isSuccess:!1,message:e.message||"Failed to send password reset code."}}}static async forgotPasswordSubmit(e,t,o){try{return await (0,d.f)({username:e,confirmationCode:t,newPassword:o}),{isSuccess:!0,message:"Password has been reset successfully."}}catch(e){return console.error("Forgot password submit error:",e),{isSuccess:!1,message:e.message||"Failed to reset password."}}}static async resendConfirmationCode(e){try{return await (0,p.T)({username:e}),{isSuccess:!0,message:"Confirmation code resent successfully."}}catch(e){return console.error("Resend confirmation code error:",e),{isSuccess:!1,message:e.message||"Failed to resend confirmation code."}}}static async getIdToken(){try{let e=await (0,n.t)();if(e&&e.signInDetails)return await fetch("/api/auth/get-id-token").then(e=>e.text()).catch(()=>null);return null}catch(e){return null}}static async completeNewPassword(e,t){try{return await (0,g.t)({challengeResponse:t}),{isSuccess:!0,message:"Password set successfully."}}catch(e){return console.error("Complete new password error:",e),{isSuccess:!1,message:e.message||"Failed to set new password."}}}}}}]);