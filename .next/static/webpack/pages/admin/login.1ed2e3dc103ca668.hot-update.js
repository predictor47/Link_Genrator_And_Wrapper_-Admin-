"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/login",{

/***/ "./src/lib/amplify-config.ts":
/*!***********************************!*\
  !*** ./src/lib/amplify-config.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADMIN_DOMAIN: function() { return /* binding */ ADMIN_DOMAIN; },\n/* harmony export */   MAIN_DOMAIN: function() { return /* binding */ MAIN_DOMAIN; },\n/* harmony export */   amplifyConfig: function() { return /* binding */ amplifyConfig; },\n/* harmony export */   configureAmplify: function() { return /* binding */ configureAmplify; }\n/* harmony export */ });\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify */ \"./node_modules/aws-amplify/dist/esm/index.mjs\");\n\nlet configurationDone = false;\n// Domain configuration\nconst MAIN_DOMAIN = \"protegeresearchsurvey.com\" || 0;\nconst ADMIN_DOMAIN = \"admin.protegeresearchsurvey.com\" || 0;\n// Explicitly set Cognito User Pool ID\nconst COGNITO_USER_POOL_ID = \"us-east-1_QIwwMdokt\";\n/**\r\n * Configure Amplify with the right settings\r\n */ function configureAmplify() {\n    if (configurationDone) {\n        return; // Avoid multiple configurations\n    }\n    let amplifyOutputs = null;\n    // For server-side code\n    if (false) {}\n    // If no outputs file was found or in browser context, use environment variables\n    // but prioritize our explicit Cognito User Pool ID\n    if (!amplifyOutputs) {\n        amplifyOutputs = {\n            auth: {\n                userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\",\n                userPoolClientId: \"your_client_id_here\",\n                identityPoolId: \"your_identity_pool_id_here\",\n                region: \"us-east-1\"\n            },\n            api: {\n                endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\",\n                region: \"us-east-1\" || 0\n            }\n        };\n    } else {\n        var _amplifyOutputs_auth;\n        // Ensure the User Pool ID is set even if we found an outputs file\n        amplifyOutputs.auth = {\n            ...amplifyOutputs.auth,\n            userPoolId: COGNITO_USER_POOL_ID || ((_amplifyOutputs_auth = amplifyOutputs.auth) === null || _amplifyOutputs_auth === void 0 ? void 0 : _amplifyOutputs_auth.userPoolId)\n        };\n    }\n    // Get the region from outputs or environment variables\n    const region = \"us-east-1\"; // Hardcoded to match the User Pool ID region\n    // Configure Amplify with the retrieved settings\n    try {\n        var _amplifyOutputs_auth1, _amplifyOutputs_auth2, _amplifyOutputs_auth3, _amplifyOutputs_api, _amplifyOutputs_api1;\n        const config = {\n            // Auth Configuration\n            Auth: {\n                Cognito: {\n                    userPoolId: COGNITO_USER_POOL_ID || ((_amplifyOutputs_auth1 = amplifyOutputs.auth) === null || _amplifyOutputs_auth1 === void 0 ? void 0 : _amplifyOutputs_auth1.userPoolId) || \"\",\n                    userPoolClientId: ((_amplifyOutputs_auth2 = amplifyOutputs.auth) === null || _amplifyOutputs_auth2 === void 0 ? void 0 : _amplifyOutputs_auth2.userPoolClientId) || \"\",\n                    identityPoolId: ((_amplifyOutputs_auth3 = amplifyOutputs.auth) === null || _amplifyOutputs_auth3 === void 0 ? void 0 : _amplifyOutputs_auth3.identityPoolId) || \"\"\n                }\n            },\n            // API Configuration for GraphQL\n            API: {\n                GraphQL: {\n                    endpoint: ((_amplifyOutputs_api = amplifyOutputs.api) === null || _amplifyOutputs_api === void 0 ? void 0 : _amplifyOutputs_api.endpoint) || \"\",\n                    region: ((_amplifyOutputs_api1 = amplifyOutputs.api) === null || _amplifyOutputs_api1 === void 0 ? void 0 : _amplifyOutputs_api1.region) || region,\n                    defaultAuthMode: \"userPool\"\n                }\n            }\n        };\n        // Add region at root level for Amplify v6\n        config.region = region;\n        // Apply configuration\n        aws_amplify__WEBPACK_IMPORTED_MODULE_0__.Amplify.configure(config);\n        configurationDone = true;\n        console.log(\"Amplify configured with User Pool ID:\", COGNITO_USER_POOL_ID);\n    } catch (error) {\n        console.error(\"Error configuring Amplify:\", error);\n    }\n}\n// Export the raw Amplify config for use elsewhere\nconst amplifyConfig = {\n    Auth: {\n        Cognito: {\n            userPoolId: COGNITO_USER_POOL_ID || \"us-east-1_QIwwMdokt\" || 0,\n            userPoolClientId: \"your_client_id_here\" || 0,\n            identityPoolId: \"your_identity_pool_id_here\" || 0\n        }\n    },\n    API: {\n        GraphQL: {\n            endpoint: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\" || 0,\n            region: \"us-east-1\" || 0,\n            defaultAuthMode: \"userPool\"\n        }\n    },\n    // Domain configuration\n    domains: {\n        main: MAIN_DOMAIN,\n        admin: ADMIN_DOMAIN\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/amplify-config.ts\n"));

/***/ })

});