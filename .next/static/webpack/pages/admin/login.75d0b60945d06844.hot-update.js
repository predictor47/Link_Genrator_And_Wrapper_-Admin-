"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin/login",{

/***/ "./src/lib/amplify-config.ts":
/*!***********************************!*\
  !*** ./src/lib/amplify-config.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADMIN_DOMAIN: function() { return /* binding */ ADMIN_DOMAIN; },\n/* harmony export */   MAIN_DOMAIN: function() { return /* binding */ MAIN_DOMAIN; },\n/* harmony export */   amplifyConfig: function() { return /* binding */ amplifyConfig; },\n/* harmony export */   client: function() { return /* binding */ client; },\n/* harmony export */   configureAmplify: function() { return /* binding */ configureAmplify; }\n/* harmony export */ });\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aws-amplify */ \"./node_modules/aws-amplify/dist/esm/index.mjs\");\n/* harmony import */ var aws_amplify_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-amplify/data */ \"./node_modules/aws-amplify/dist/esm/api/index.mjs\");\nvar _amplifyOutputs_auth, _amplifyOutputs_auth1, _amplifyOutputs_auth2, _amplifyOutputs_auth3, _amplifyOutputs_data, _amplifyOutputs_data1, _amplifyOutputs_data2;\n\n\n// Environment detection (for logging purposes)\nconst isDevelopment = \"development\" === \"development\";\nconst isLocalhost =  true && window.location.hostname === \"localhost\";\n// Domain configuration\nconst MAIN_DOMAIN = \"protegeresearchsurvey.com\" || 0;\nconst ADMIN_DOMAIN = \"admin.protegeresearchsurvey.com\" || 0;\nlet configurationDone = false;\n// Define amplifyOutputs at the module level\nlet amplifyOutputs = null;\n// Create a data client for interacting with your Amplify backend\nconst client = (0,aws_amplify_data__WEBPACK_IMPORTED_MODULE_0__.generateClient)();\n/**\r\n * Configure Amplify with the right settings\r\n */ function configureAmplify() {\n    if (configurationDone) {\n        return; // Avoid multiple configurations\n    }\n    // Try to load amplify_outputs.json in both server and client environments\n    if (false) {} else {\n        // For client-side code, try to fetch the config\n        if (!amplifyOutputs) {\n            // For localhost development with sandbox\n            if (isDevelopment && isLocalhost) {\n                console.log(\"Development environment detected; using empty config for Amplify sandbox\");\n                // Using empty config for sandbox - this is crucial for the sandbox to work properly\n                aws_amplify__WEBPACK_IMPORTED_MODULE_1__.Amplify.configure({});\n                configurationDone = true;\n                return;\n            }\n            // For production, try to load the amplify_outputs.json\n            try {\n                // In browser context, we need to use a webpack-compatible require\n                const amplifyOutputsPath = /*require.resolve*/(/*! ../../amplify_outputs.json */ \"./amplify_outputs.json\");\n                const outputs = __webpack_require__(\"./src/lib sync recursive\")(amplifyOutputsPath);\n                amplifyOutputs = outputs;\n                console.log(\"Loaded amplify_outputs.json on client\");\n                // Configure Amplify with the loaded outputs\n                doConfiguration();\n                return;\n            } catch (err) {\n                console.warn(\"Failed to load amplify_outputs.json on client:\", err);\n            // Fall through to use environment variables\n            }\n        }\n    }\n    // Proceed with configuration using available outputs or environment variables\n    doConfiguration();\n    function doConfiguration() {\n        var _amplifyOutputs_auth, _amplifyOutputs_data;\n        // If no outputs file was found, use environment variables as fallback\n        if (!amplifyOutputs) {\n            console.log(\"Using environment variables for Amplify configuration\");\n            amplifyOutputs = {\n                auth: {\n                    user_pool_id: \"us-east-1_QIwwMdokt\",\n                    user_pool_client_id: \"2nv3n1cco1867elirafvr6uu1e\",\n                    identity_pool_id: \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\",\n                    aws_region: \"us-east-1\" || 0\n                },\n                data: {\n                    url: \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\",\n                    aws_region: \"us-east-1\" || 0,\n                    api_key: \"da2-sc72ftvgezh7bkmmr3xtiybby4\"\n                }\n            };\n        }\n        // Get the region from outputs or environment variables\n        const region = ((_amplifyOutputs_auth = amplifyOutputs.auth) === null || _amplifyOutputs_auth === void 0 ? void 0 : _amplifyOutputs_auth.aws_region) || ((_amplifyOutputs_data = amplifyOutputs.data) === null || _amplifyOutputs_data === void 0 ? void 0 : _amplifyOutputs_data.aws_region) || \"us-east-1\";\n        // Configure Amplify with the retrieved settings\n        try {\n            var _amplifyOutputs_auth1, _amplifyOutputs_auth2, _amplifyOutputs_auth3, _amplifyOutputs_auth4, _amplifyOutputs_data1, _amplifyOutputs_data2, _amplifyOutputs_data3, _amplifyOutputs_auth5, _amplifyOutputs_data4;\n            const config = {\n                // Auth Configuration\n                Auth: {\n                    Cognito: {\n                        userPoolId: ((_amplifyOutputs_auth1 = amplifyOutputs.auth) === null || _amplifyOutputs_auth1 === void 0 ? void 0 : _amplifyOutputs_auth1.user_pool_id) || \"\",\n                        userPoolClientId: ((_amplifyOutputs_auth2 = amplifyOutputs.auth) === null || _amplifyOutputs_auth2 === void 0 ? void 0 : _amplifyOutputs_auth2.user_pool_client_id) || \"\",\n                        identityPoolId: ((_amplifyOutputs_auth3 = amplifyOutputs.auth) === null || _amplifyOutputs_auth3 === void 0 ? void 0 : _amplifyOutputs_auth3.identity_pool_id) || \"\",\n                        region: ((_amplifyOutputs_auth4 = amplifyOutputs.auth) === null || _amplifyOutputs_auth4 === void 0 ? void 0 : _amplifyOutputs_auth4.aws_region) || region\n                    }\n                },\n                // API Configuration for GraphQL\n                API: {\n                    GraphQL: {\n                        endpoint: ((_amplifyOutputs_data1 = amplifyOutputs.data) === null || _amplifyOutputs_data1 === void 0 ? void 0 : _amplifyOutputs_data1.url) || \"\",\n                        region: ((_amplifyOutputs_data2 = amplifyOutputs.data) === null || _amplifyOutputs_data2 === void 0 ? void 0 : _amplifyOutputs_data2.aws_region) || region,\n                        defaultAuthMode: \"apiKey\",\n                        apiKey: ((_amplifyOutputs_data3 = amplifyOutputs.data) === null || _amplifyOutputs_data3 === void 0 ? void 0 : _amplifyOutputs_data3.api_key) || \"\"\n                    }\n                }\n            };\n            // Add region at root level for Amplify v6\n            config.region = region;\n            // Apply configuration\n            aws_amplify__WEBPACK_IMPORTED_MODULE_1__.Amplify.configure(config);\n            configurationDone = true;\n            console.log(\"Amplify configured in \".concat(isDevelopment ? \"DEVELOPMENT\" : \"PRODUCTION\", \" environment\"));\n            console.log(\"Using User Pool ID:\", (_amplifyOutputs_auth5 = amplifyOutputs.auth) === null || _amplifyOutputs_auth5 === void 0 ? void 0 : _amplifyOutputs_auth5.user_pool_id);\n            console.log(\"API Key configured:\", ((_amplifyOutputs_data4 = amplifyOutputs.data) === null || _amplifyOutputs_data4 === void 0 ? void 0 : _amplifyOutputs_data4.api_key) ? \"Yes (masked)\" : \"No\");\n        } catch (error) {\n            console.error(\"Error configuring Amplify:\", error);\n        }\n    }\n}\n// Export the raw Amplify config for use elsewhere\nconst amplifyConfig = {\n    Auth: {\n        Cognito: {\n            userPoolId: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_auth = amplifyOutputs.auth) === null || _amplifyOutputs_auth === void 0 ? void 0 : _amplifyOutputs_auth.user_pool_id) || \"us-east-1_QIwwMdokt\" || 0,\n            userPoolClientId: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_auth1 = amplifyOutputs.auth) === null || _amplifyOutputs_auth1 === void 0 ? void 0 : _amplifyOutputs_auth1.user_pool_client_id) || \"2nv3n1cco1867elirafvr6uu1e\" || 0,\n            identityPoolId: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_auth2 = amplifyOutputs.auth) === null || _amplifyOutputs_auth2 === void 0 ? void 0 : _amplifyOutputs_auth2.identity_pool_id) || \"us-east-1:9aa6cd40-8abf-4fce-ba81-22c7ede03591\" || 0,\n            region: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_auth3 = amplifyOutputs.auth) === null || _amplifyOutputs_auth3 === void 0 ? void 0 : _amplifyOutputs_auth3.aws_region) || \"us-east-1\"\n        }\n    },\n    API: {\n        GraphQL: {\n            endpoint: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_data = amplifyOutputs.data) === null || _amplifyOutputs_data === void 0 ? void 0 : _amplifyOutputs_data.url) || \"https://235kq6cpbbdyfizalvutob7vh4.appsync-api.us-east-1.amazonaws.com/graphql\" || 0,\n            region: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_data1 = amplifyOutputs.data) === null || _amplifyOutputs_data1 === void 0 ? void 0 : _amplifyOutputs_data1.aws_region) || \"us-east-1\" || 0,\n            defaultAuthMode: \"apiKey\",\n            apiKey: (amplifyOutputs === null || amplifyOutputs === void 0 ? void 0 : (_amplifyOutputs_data2 = amplifyOutputs.data) === null || _amplifyOutputs_data2 === void 0 ? void 0 : _amplifyOutputs_data2.api_key) || \"da2-sc72ftvgezh7bkmmr3xtiybby4\" || 0\n        }\n    },\n    // Domain configuration\n    domains: {\n        main: MAIN_DOMAIN,\n        admin: ADMIN_DOMAIN\n    },\n    // Environment information\n    environment: isDevelopment ? \"development\" : \"production\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/amplify-config.ts\n"));

/***/ })

});